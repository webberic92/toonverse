const fs = require('fs')
const envfile = require('envfile')
const sourcePath = './env'
const ensAppSourcePath = '../ens-app/cypress.env.json'
async function main() {
  const addresses = JSON.parse(fs.readFileSync(ensAppSourcePath, 'utf8'))
  console.log({addresses})

  if(!(addresses.ensAddress && addresses.baseRegistrarAddress)){
    throw('please run yarn preTest on ../ens-app')
  }
    // const registryAddress = addresses.ensAddress
    // const registrarAddress = addresses.baseRegistrarAddress
    // 
    // const registryAddress = '0x112234455c3a32fd11230c42e7bccd4a84e02010'
    // const registrarAddress = '0x9De50f28b5BC29C447a927f71c79b800891dC316'
    const registryAddress = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'
    const registrarAddress = '0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85'
    
    const [deployer] = await ethers.getSigners();
  
    console.log(
      "Deploying contracts with the account:",
      deployer.address
    );
    
    console.log("Account balance:", (await deployer.getBalance()).toString());
    const NameWrapper = await ethers.getContractFactory("NameWrapper");
    console.log({
      registryAddress, registrarAddress
    })
    const StaticMetadataService = await ethers.getContractFactory("StaticMetadataService");
    console.log(2)
    const metadata = await StaticMetadataService.deploy(
      // 'https://metadata.ens.domains'
      'https://ens-metadata-service.appspot.com/name/0x{id}'
    )
    console.log(3)
    console.log("StaticMetadataService address:", metadata.address);
    // const metadata = {
    //   address:'0x6D0Ea36112B292d6284aBE745717AA7c413E1963'
    // }
    // const wrapper = await NameWrapper.deploy(
    //   registryAddress,
    //   registrarAddress,
    //   metadata.address
    // );
  
    // console.log("Wrapper address:", wrapper.address);

    // const parsedFile = envfile.parse(sourcePath);
    // parsedFile.REGISTRY_ADDRESS = registryAddress
    // parsedFile.REGISTRAR_ADDRESS = registrarAddress
    // parsedFile.METADATA_ADDRESS = metadata.address
    // parsedFile.WRAPPER_ADDRESS = wrapper.address
    // fs.writeFileSync('./.env', envfile.stringify(parsedFile))
  }
  
  main()
    .then(() => process.exit(0))
    .catch(error => {
      console.error(error);
      process.exit(1);
    });