/**
 * @since 0.2.0
 */
import { Option } from 'fp-ts/Option';
import { Refinement } from 'fp-ts/function';
/**
 * An empty `URLSearchParams`.
 *
 * @since 0.2.0
 */
export declare const empty: URLSearchParams;
/**
 * Parse a `URLSearchParams` from a string.
 *
 * @since 0.2.0
 */
export declare const fromString: (x: string) => URLSearchParams;
/**
 * Parse a `URLSearchParams` from a record.
 *
 * @since 0.2.0
 */
export declare const fromRecord: (x: Record<string, string>) => URLSearchParams;
/**
 * Parse a `URLSearchParams` from an array of tuples.
 *
 * @since 0.2.0
 */
export declare const fromTuples: (x: Array<[string, string]>) => URLSearchParams;
/**
 * Clone a `URLSearchParams`.
 *
 * @since 0.2.0
 */
export declare const clone: (x: URLSearchParams) => URLSearchParams;
/**
 * Refine a foreign value to `URLSearchParams`.
 *
 * @since 0.1.0
 */
export declare const isURLSearchParams: Refinement<unknown, URLSearchParams>;
/**
 * Attempt to get a URL parameter from a `URLSearchParams`.
 *
 * @since 0.1.0
 */
export declare const getParam: (k: string) => (ps: URLSearchParams) => Option<string>;
/**
 * Set a URL parameter in a `URLSearchParams`. This does not mutate the input.
 *
 * @since 0.1.0
 */
export declare const setParam: (k: string) => (v: string) => (x: URLSearchParams) => URLSearchParams;
