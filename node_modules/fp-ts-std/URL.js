"use strict";
/**
 * @since 0.1.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isURL = exports.parseO = exports.parse = exports.unsafeParse = void 0;
const O = require("fp-ts/Option");
const E = require("fp-ts/Either");
const function_1 = require("fp-ts/function");
/**
 * Unsafely parse a `URL`, throwing on failure.
 *
 * @since 0.1.0
 */
exports.unsafeParse = (x) => new URL(x);
/**
 * Safely parse a `URL`.
 *
 * @since 0.1.0
 */
exports.parse = (f) => (x) => function_1.pipe(
// It should only throw some sort of `TypeError`:
// https://developer.mozilla.org/en-US/docs/Web/API/URL/URL
E.tryCatch(() => exports.unsafeParse(x), (e) => f(e)));
/**
 * Safely parse a `URL`, returning an `Option`.
 *
 * @since 0.1.0
 */
exports.parseO = function_1.flow(exports.parse(function_1.identity), O.fromEither);
/**
 * Refine a foreign value to `URL`.
 *
 * @since 0.1.0
 */
exports.isURL = (x) => x instanceof URL;
