/**
 * @since 0.1.0
 */
import { Option } from 'fp-ts/Option';
import { Either } from 'fp-ts/Either';
import { Refinement } from 'fp-ts/function';
/**
 * Unsafely parse a `URL`, throwing on failure.
 *
 * @since 0.1.0
 */
export declare const unsafeParse: (x: string) => URL;
/**
 * Safely parse a `URL`.
 *
 * @since 0.1.0
 */
export declare const parse: <E>(f: (e: TypeError) => E) => (x: string) => Either<E, URL>;
/**
 * Safely parse a `URL`, returning an `Option`.
 *
 * @since 0.1.0
 */
export declare const parseO: (href: string) => Option<URL>;
/**
 * Refine a foreign value to `URL`.
 *
 * @since 0.1.0
 */
export declare const isURL: Refinement<unknown, URL>;
