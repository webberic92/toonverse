"use strict";
/**
 * @since 0.2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.setParam = exports.getParam = exports.isURLSearchParams = exports.clone = exports.fromTuples = exports.fromRecord = exports.fromString = exports.empty = void 0;
const O = require("fp-ts/Option");
const function_1 = require("fp-ts/function");
/**
 * An empty `URLSearchParams`.
 *
 * @since 0.2.0
 */
exports.empty = new URLSearchParams();
/**
 * Parse a `URLSearchParams` from a string.
 *
 * @since 0.2.0
 */
exports.fromString = (x) => new URLSearchParams(x);
/**
 * Parse a `URLSearchParams` from a record.
 *
 * @since 0.2.0
 */
exports.fromRecord = (x) => new URLSearchParams(x);
/**
 * Parse a `URLSearchParams` from an array of tuples.
 *
 * @since 0.2.0
 */
exports.fromTuples = (x) => new URLSearchParams(x);
/**
 * Clone a `URLSearchParams`.
 *
 * @since 0.2.0
 */
exports.clone = (x) => new URLSearchParams(x);
/**
 * Refine a foreign value to `URLSearchParams`.
 *
 * @since 0.1.0
 */
exports.isURLSearchParams = (x) => x instanceof URLSearchParams;
/**
 * Attempt to get a URL parameter from a `URLSearchParams`.
 *
 * @since 0.1.0
 */
exports.getParam = (k) => (ps) => function_1.pipe(ps.get(k), O.fromNullable);
/**
 * Set a URL parameter in a `URLSearchParams`. This does not mutate the input.
 *
 * @since 0.1.0
 */
exports.setParam = (k) => (v) => (x) => {
    const y = new URLSearchParams(x);
    y.set(k, v); // eslint-disable-line functional/no-expression-statement
    return y;
};
