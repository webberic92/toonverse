export const LOG_LEVELS = ['DEBUG', 'INFO', 'WARN', 'ERROR'] as const;
export type Levels = typeof LOG_LEVELS[number];

export type Log = {
    dateTime: string;
    appName: string;
    appVersion: string;
    message: string;
    component: string;
    level: Levels;
    extra: any;
};

export interface ImLogger {
    info(component: string, message: string, extra?: any): void;
    debug(component: string, message: string, extra?: any): void;
    warn(component: string, message: string, extra?: any): void;
    error(component: string, error: Error, extra?: any): void;
}

export const ENCODER_TYPES = ['json', 'human'] as const;
export type Encoder = typeof ENCODER_TYPES[number];

export const SINK_TYPES = ['console', 'file'] as const;
export type SinkType = typeof SINK_TYPES[number];

export type SinkConfig = {
    type: SinkType;
    encoder: Encoder;
};

export type ConsoleSinkConfig = SinkConfig & {
    type: 'console';
};

export type FileSinkConfig = SinkConfig & {
    type: 'file';
    filename: string;
};

export type Handler = ConsoleSinkConfig | FileSinkConfig;

export type ImLoggerConfig = {
    appName: string;
    appVersion: string;
    level: Levels;
    componentFilter: string[];
    handlers: Handler[];
};
