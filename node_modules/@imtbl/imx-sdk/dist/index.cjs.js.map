{"version":3,"file":"index.cjs.js.map","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/fp-ts/es6/function.js","../node_modules/fp-ts/es6/Either.js","../node_modules/fp-ts/es6/Option.js","../node_modules/fp-ts/es6/Task.js","../node_modules/fp-ts/es6/TaskEither.js","../src/libs/constants.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/rxjs/node_modules/tslib/tslib.es6.js","../node_modules/rxjs/_esm5/internal/util/isFunction.js","../node_modules/rxjs/_esm5/internal/config.js","../node_modules/rxjs/_esm5/internal/util/hostReportError.js","../node_modules/rxjs/_esm5/internal/Observer.js","../node_modules/rxjs/_esm5/internal/util/isArray.js","../node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","../node_modules/rxjs/_esm5/internal/Subscription.js","../node_modules/rxjs/_esm5/internal/util/isObject.js","../node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","../node_modules/rxjs/_esm5/internal/Subscriber.js","../node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js","../src/types/api/collections.ts","../src/types/runtime.ts","../src/types/api/metadata-schema.ts","../src/types/api/common.ts","../src/types/web.ts","../src/types/api/types.ts","../src/types/api/projects.ts","../src/types/imxd-client.ts","../src/types/sdk/routes.ts","../src/types/sdk/messages.ts","../src/libs/abi.ts","../src/libs/extensionProvider.ts","../node_modules/fp-ts/es6/Ordering.js","../node_modules/fp-ts/es6/Ord.js","../node_modules/fp-ts/es6/ReadonlyArray.js","../node_modules/fp-ts/es6/Array.js","../node_modules/fp-ts/es6/ReadonlyNonEmptyArray.js","../node_modules/fp-ts/es6/NonEmptyArray.js","../node_modules/fp-ts/es6/Semigroup.js","../node_modules/fp-ts/es6/Foldable.js","../node_modules/fp-ts-std/Array.js","../src/libs/fp.ts","../src/libs/magicProvider.ts","../src/libs/utils.ts","../src/libs/ethereum.ts","../src/apps/ImmutableIMXDClient.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/crypto/points.ts","../src/crypto/constants.ts","../src/crypto/crypto.ts","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../src/contracts/immutablex/factories/ImmutableX__factory.ts","../src/contracts/stark/factories/Stark__factory.ts","../src/contracts/registration/factories/IMX__factory.ts","../src/contracts/registration/factories/Registration__factory.ts","../src/apps/ImmutableXController.ts","../src/apps/ImmutableXWallet.ts","../src/utils/logger.ts","../src/apps/RequestClient.ts","../src/apps/ImmutableXClient.ts","../src/apps/ImmutableXServer.ts","../src/utils/experimental.ts","../src/utils/qs-settings.ts","../src/sdk.ts","../src/utils/calculations/constants.ts","../src/utils/calculations/shared.ts","../src/utils/calculations/calculateFeesFromBasePrice.ts","../src/utils/calculations/calculateFeesFromFullPrice.ts","../src/version.ts"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexport var constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexport var constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexport var constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexport var constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexport var constVoid = constUndefined;\n// TODO: remove in v3\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nexport function flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi, ij, jk, kl, lm, mn, no, op, pq, qr, rs, st) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        case 10:\n            return ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))));\n        case 11:\n            return jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))));\n        case 12:\n            return kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))));\n        case 13:\n            return lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))));\n        case 14:\n            return mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))));\n        case 15:\n            return no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))));\n        case 16:\n            return op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))));\n        case 17:\n            return pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))));\n        case 18:\n            return qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))));\n        case 19:\n            return rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))))));\n        case 20:\n            return st(rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))))));\n    }\n    return;\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @internal\n */\nexport var bind_ = function (a, name, b) {\n    var _a;\n    return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n};\n/**\n * @internal\n */\nexport var bindTo_ = function (name) { return function (b) {\n    var _a;\n    return (_a = {}, _a[name] = b, _a);\n}; };\n","import { tailRec } from './ChainRec';\nimport { identity, pipe, bind_, bindTo_, flow } from './function';\n// -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category guards\n * @since 2.0.0\n */\nexport var isLeft = function (ma) { return ma._tag === 'Left'; };\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category guards\n * @since 2.0.0\n */\nexport var isRight = function (ma) { return ma._tag === 'Right'; };\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var left = function (e) { return ({ _tag: 'Left', left: e }); };\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var right = function (a) { return ({ _tag: 'Right', right: a }); };\n// TODO: make lazy in v3\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function fromNullable(e) {\n    return function (a) { return (a == null ? left(e) : right(a)); };\n}\n// TODO: `onError => Lazy<A> => Either` in v3\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * @example\n * import { Either, left, right, tryCatch } from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: Array<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: Array<A>): Either<Error, A> => {\n *   return tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n * }\n *\n * assert.deepStrictEqual(head([]), left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), right(1))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function tryCatch(f, onError) {\n    try {\n        return right(f());\n    }\n    catch (e) {\n        return left(onError(e));\n    }\n}\n// TODO curry in v3\n/**\n * Converts a JavaScript Object Notation (JSON) string into an object.\n *\n * @example\n * import { parseJSON, toError, right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(parseJSON('{\"a\":1}', toError), right({ a: 1 }))\n * assert.deepStrictEqual(parseJSON('{\"a\":}', toError), left(new SyntaxError('Unexpected token } in JSON at position 5')))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function parseJSON(s, onError) {\n    return tryCatch(function () { return JSON.parse(s); }, onError);\n}\n// TODO curry in v3\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(E.stringifyJSON({ a: 1 }, E.toError), E.right('{\"a\":1}'))\n * const circular: any = { ref: null }\n * circular.ref = circular\n * assert.deepStrictEqual(\n *   pipe(\n *     E.stringifyJSON(circular, E.toError),\n *     E.mapLeft(e => e.message.includes('Converting circular structure to JSON'))\n *   ),\n *   E.left(true)\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function stringifyJSON(u, onError) {\n    return tryCatch(function () { return JSON.stringify(u); }, onError);\n}\n/**\n * Derivable from `MonadThrow`.\n *\n * @example\n * import { fromOption, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     some(1),\n *     fromOption(() => 'error')\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     none,\n *     fromOption(() => 'error')\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromOption = function (onNone) { return function (ma) {\n    return ma._tag === 'None' ? left(onNone()) : right(ma.value);\n}; };\n/**\n * Derivable from `MonadThrow`.\n *\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromPredicate = function (predicate, onFalse) { return function (a) { return (predicate(a) ? right(a) : left(onFalse(a))); }; };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { fold, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     fold(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     fold(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport function fold(onLeft, onRight) {\n    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : onRight(ma.right)); };\n}\n/**\n * Less strict version of [`getOrElse`](#getOrElse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexport var getOrElseW = function (onLeft) { return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : ma.right;\n}; };\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.9.0\n */\nexport function fromNullableK(e) {\n    var from = fromNullable(e);\n    return function (f) { return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return from(f.apply(void 0, a));\n    }; };\n}\n/**\n * @category combinators\n * @since 2.9.0\n */\nexport function chainNullableK(e) {\n    var from = fromNullableK(e);\n    return function (f) { return chain(from(f)); };\n}\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @category combinators\n * @since 2.0.0\n */\nexport function swap(ma) {\n    return isLeft(ma) ? right(ma.left) : left(ma.right);\n}\n/**\n * Useful for recovering from errors.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport function orElse(onLeft) {\n    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : ma); };\n}\n/**\n * Less strict version of [`filterOrElse`](#filterOrElse).\n *\n * @since 2.9.0\n */\nexport var filterOrElseW = function (predicate, onFalse) {\n    return chainW(function (a) { return (predicate(a) ? right(a) : left(onFalse(a))); });\n};\n/**\n * Derivable from `MonadThrow`.\n *\n * @example\n * import { filterOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     right(-1),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('a'),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('a')\n * )\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var filterOrElse = filterOrElseW;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return pipe(fa, map(f)); };\nvar ap_ = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar chain_ = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar reduce_ = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar foldMap_ = function (M) { return function (fa, f) {\n    var foldMapM = foldMap(M);\n    return pipe(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar reduceRight_ = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar traverse_ = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\nvar bimap_ = function (fa, f, g) { return pipe(fa, bimap(f, g)); };\nvar mapLeft_ = function (fa, f) { return pipe(fa, mapLeft(f)); };\n/* istanbul ignore next */\nvar alt_ = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar extend_ = function (wa, f) { return pipe(wa, extend(f)); };\nvar chainRec_ = function (a, f) {\n    return tailRec(f(a), function (e) {\n        return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isLeft(fa) ? fa : right(f(fa.right));\n}; };\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexport var bimap = function (f, g) { return function (fa) { return (isLeft(fa) ? left(f(fa.left)) : right(g(fa.right))); }; };\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexport var mapLeft = function (f) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : fa;\n}; };\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nexport var apW = function (fa) { return function (fab) {\n    return isLeft(fab) ? fab : isLeft(fa) ? fa : right(fab.right(fa.right));\n}; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = apW;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = function (fb) {\n    return flow(map(function (a) { return function () { return a; }; }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = function (fb) {\n    return flow(map(function () { return function (b) { return b; }; }), ap(fb));\n};\n/**\n * Wrap a value into the type constructor.\n *\n * Equivalent to [`right`](#right).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.of('a'), E.right('a'))\n *\n * @category Applicative\n * @since 2.7.0\n */\nexport var of = right;\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nexport var chainW = function (f) { return function (ma) {\n    return isLeft(ma) ? ma : f(ma.right);\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = chainW;\n/**\n * Less strict version of [`chainFirst`](#chainFirst)\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexport var chainFirstW = function (f) { return function (ma) {\n    return pipe(ma, chainW(function (a) {\n        return pipe(f(a), map(function () { return a; }));\n    }));\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = chainFirstW;\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * Derivable from `Monad`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return (isLeft(fa) ? that() : fa); }; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isLeft(wa) ? wa : right(f(wa));\n}; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a',\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix',\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(b, fa.right);\n}; };\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function';\n * import * as E from 'fp-ts/Either'\n * import { monoidString } from 'fp-ts/Monoid'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(monoidString)(yell)),\n *   'a!',\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(monoidString)(yell)),\n *   monoidString.empty,\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isLeft(fa) ? M.empty : f(fa.right);\n}; }; };\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix',\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix',\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(fa.right, b);\n}; };\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as A from 'fp-ts/Array'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.option)(A.head)),\n *   O.some(E.right('a')),\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.option)(A.head)),\n *   O.none,\n * )\n *\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) { return function (f) { return function (ta) { return (isLeft(ta) ? F.of(left(ta.left)) : F.map(f(ta.right), right)); }; }; };\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.option)),\n *   O.some(E.right('a')),\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.option)),\n *   O.none\n * )\n *\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ma) {\n    return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n}; };\n/**\n * @category MonadThrow\n * @since 2.6.3\n */\nexport var throwError = left;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getShow(SE, SA) {\n    return {\n        show: function (ma) { return (isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\"); }\n    };\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getEq(EL, EA) {\n    return {\n        equals: function (x, y) {\n            return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n        }\n    };\n}\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const S = getSemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getSemigroup(S) {\n    return {\n        concat: function (x, y) { return (isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right))); }\n    };\n}\n/**\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @example\n * import { getApplySemigroup, left, right } from 'fp-ts/Either'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const S = getApplySemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), left('a'))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), left('b'))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getApplySemigroup(S) {\n    return {\n        concat: function (x, y) { return (isLeft(x) ? x : isLeft(y) ? y : right(S.concat(x.right, y.right))); }\n    };\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getApplyMonoid(M) {\n    return {\n        concat: getApplySemigroup(M).concat,\n        empty: right(M.empty)\n    };\n}\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 3.0.0\n */\nexport function getFilterable(M) {\n    var empty = left(M.empty);\n    var compact = function (ma) {\n        return isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : right(ma.right.value);\n    };\n    var separate = function (ma) {\n        return isLeft(ma)\n            ? { left: ma, right: ma }\n            : isLeft(ma.right)\n                ? { left: right(ma.right.left), right: empty }\n                : { left: empty, right: right(ma.right.right) };\n    };\n    var partitionMap = function (ma, f) {\n        if (isLeft(ma)) {\n            return { left: ma, right: ma };\n        }\n        var e = f(ma.right);\n        return isLeft(e) ? { left: right(e.left), right: empty } : { left: empty, right: right(e.right) };\n    };\n    var partition = function (ma, p) {\n        return isLeft(ma)\n            ? { left: ma, right: ma }\n            : p(ma.right)\n                ? { left: empty, right: right(ma.right) }\n                : { left: right(ma.right), right: empty };\n    };\n    var filterMap = function (ma, f) {\n        if (isLeft(ma)) {\n            return ma;\n        }\n        var ob = f(ma.right);\n        return ob._tag === 'None' ? empty : right(ob.value);\n    };\n    var filter = function (ma, predicate) {\n        return isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    return {\n        URI: URI,\n        _E: undefined,\n        map: map_,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: filterMap,\n        partition: partition,\n        partitionMap: partitionMap\n    };\n}\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getWitherable(M) {\n    var F_ = getFilterable(M);\n    var wither = function (F) {\n        var traverseF = traverse_(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), F_.compact); };\n    };\n    var wilt = function (F) {\n        var traverseF = traverse_(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), F_.separate); };\n    };\n    return {\n        URI: URI,\n        _E: undefined,\n        map: map_,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: traverse_,\n        sequence: sequence,\n        reduce: reduce_,\n        foldMap: foldMap_,\n        reduceRight: reduceRight_,\n        wither: wither,\n        wilt: wilt\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport function getApplicativeValidation(SE) {\n    return {\n        URI: URI,\n        _E: undefined,\n        map: map_,\n        ap: function (fab, fa) {\n            return isLeft(fab)\n                ? isLeft(fa)\n                    ? left(SE.concat(fab.left, fa.left))\n                    : fab\n                : isLeft(fa)\n                    ? fa\n                    : right(fab.right(fa.right));\n        },\n        of: of\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport function getAltValidation(SE) {\n    return {\n        URI: URI,\n        _E: undefined,\n        map: map_,\n        alt: function (me, that) {\n            if (isRight(me)) {\n                return me;\n            }\n            var ea = that();\n            return isLeft(ea) ? left(SE.concat(me.left, ea.left)) : ea;\n        }\n    };\n}\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getValidation(SE) {\n    var applicativeValidation = getApplicativeValidation(SE);\n    var altValidation = getAltValidation(SE);\n    return {\n        URI: URI,\n        _E: undefined,\n        map: map_,\n        of: of,\n        chain: chain_,\n        bimap: bimap_,\n        mapLeft: mapLeft_,\n        reduce: reduce_,\n        foldMap: foldMap_,\n        reduceRight: reduceRight_,\n        extend: extend_,\n        traverse: traverse_,\n        sequence: sequence,\n        chainRec: chainRec_,\n        throwError: throwError,\n        ap: applicativeValidation.ap,\n        alt: altValidation.alt\n    };\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getValidationSemigroup(SE, SA) {\n    return {\n        concat: function (x, y) {\n            return isLeft(x) ? (isLeft(y) ? left(SE.concat(x.left, y.left)) : x) : isLeft(y) ? y : right(SA.concat(x.right, y.right));\n        }\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    bimap: bimap_,\n    mapLeft: mapLeft_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ChainRec = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    chain: chain_,\n    chainRec: chainRec_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_,\n    throwError: throwError\n};\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getValidationMonoid(SE, SA) {\n    return {\n        concat: getValidationSemigroup(SE, SA).concat,\n        empty: right(SA.empty)\n    };\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var either = {\n    URI: URI,\n    map: map_,\n    of: of,\n    ap: ap_,\n    chain: chain_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    bimap: bimap_,\n    mapLeft: mapLeft_,\n    alt: alt_,\n    extend: extend_,\n    chainRec: chainRec_,\n    throwError: throwError\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nexport function toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\n/**\n * @since 2.0.0\n */\nexport function elem(E) {\n    return function (a, ma) { return (isLeft(ma) ? false : E.equals(a, ma.right)); };\n}\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nexport function exists(predicate) {\n    return function (ma) { return (isLeft(ma) ? false : predicate(ma.right)); };\n}\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) {\n    return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\nexport var bindW = function (name, f) {\n    return chainW(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n/**\n * @since 2.8.0\n */\nexport var bind = bindW;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apSW = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), apW(fb));\n};\n/**\n * @since 2.8.0\n */\nexport var apS = apSW;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n *\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = function (f) { return function (arr) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < arr.length; i++) {\n        var e = f(i, arr[i]);\n        if (e._tag === 'Left') {\n            return e;\n        }\n        result.push(e.right);\n    }\n    return right(result);\n}; };\n/**\n * map an array using provided function to Either then transform to Either of the array\n * this function have the same behavior of `A.traverse(E.either)` but it's optimized and perform better\n *\n * @example\n *\n *\n * import { traverseArray, left, right, fromPredicate } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as A from 'fp-ts/Array'\n *\n * const arr = A.range(0, 10)\n * assert.deepStrictEqual(\n *   pipe(\n *     arr,\n *     traverseArray((x) => right(x))\n *   ),\n *   right(arr)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     arr,\n *     traverseArray(\n *       fromPredicate(\n *         (x) => x > 5,\n *         () => 'a'\n *       )\n *     )\n *   ),\n *   left('a')\n * )\n * @since 2.9.0\n */\nexport var traverseArray = function (f) { return traverseArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * convert an array of either to an either of array\n * this function have the same behavior of `A.sequence(E.either)` but it's optimized and perform better\n *\n * @example\n *\n * import { sequenceArray, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as A from 'fp-ts/Array'\n *\n * const arr = A.range(0, 10)\n * assert.deepStrictEqual(pipe(arr, A.map(right), sequenceArray), right(arr))\n * assert.deepStrictEqual(pipe(arr, A.map(right), A.cons(left('Error')), sequenceArray), left('Error'))\n *\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/\ntraverseArray(identity);\n","import { identity, pipe, bind_, bindTo_, flow } from './function';\n// -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category guards\n * @since 2.0.0\n */\nexport var isSome = function (fa) { return fa._tag === 'Some'; };\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category guards\n * @since 2.0.0\n */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var none = { _tag: 'None' };\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var some = function (a) { return ({ _tag: 'Some', value: a }); };\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function fromNullable(a) {\n    return a == null ? none : some(a);\n}\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? some(a) : none); };\n}\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function tryCatch(f) {\n    try {\n        return some(f());\n    }\n    catch (e) {\n        return none;\n    }\n}\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function getLeft(ma) {\n    return ma._tag === 'Right' ? none : some(ma.left);\n}\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function getRight(ma) {\n    return ma._tag === 'Left' ? none : some(ma.right);\n}\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getRight)\n *\n * Derivable from `MonadThrow`.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromEither = getRight;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, fold } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     fold(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     fold(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport function fold(onNone, onSome) {\n    return function (ma) { return (isNone(ma) ? onNone() : onSome(ma.value)); };\n}\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport function toNullable(ma) {\n    return isNone(ma) ? null : ma.value;\n}\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport function toUndefined(ma) {\n    return isNone(ma) ? undefined : ma.value;\n}\n/**\n * Less strict version of [`getOrElse`](#getOrElse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexport var getOrElseW = function (onNone) { return function (ma) { return (isNone(ma) ? onNone() : ma.value); }; };\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category combinators\n * @since 2.9.0\n */\nexport function fromNullableK(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromNullable(f.apply(void 0, a));\n    };\n}\n/**\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var mapNullable = chainNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   company?: {\n *     address?: {\n *       street?: {\n *         name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category combinators\n * @since 2.9.0\n */\nexport function chainNullableK(f) {\n    return function (ma) { return (isNone(ma) ? none : fromNullable(f(ma.value))); };\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return pipe(fa, map(f)); };\nvar ap_ = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar chain_ = function (ma, f) { return pipe(ma, chain(f)); };\nvar reduce_ = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar foldMap_ = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar reduceRight_ = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar traverse_ = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar alt_ = function (fa, that) { return pipe(fa, alt(that)); };\nvar filter_ = function (fa, predicate) {\n    return pipe(fa, filter(predicate));\n};\n/* istanbul ignore next */\nvar filterMap_ = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar extend_ = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar partition_ = function (fa, predicate) { return pipe(fa, partition(predicate)); };\n/* istanbul ignore next */\nvar partitionMap_ = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/* istanbul ignore next */\nvar wither_ = function (F) {\n    var witherF = wither(F);\n    return function (fa, f) { return pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n    var wiltF = wilt(F);\n    return function (fa, f) { return pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isNone(fa) ? none : some(f(fa.value));\n}; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = function (fa) { return function (fab) {\n    return isNone(fab) ? none : isNone(fa) ? none : some(fab.value(fa.value));\n}; };\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = function (fb) {\n    return flow(map(function (a) { return function () { return a; }; }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = function (fb) {\n    return flow(map(function () { return function (b) { return b; }; }), ap(fb));\n};\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.7.0\n */\nexport var of = some;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return isNone(ma) ? none : f(ma.value);\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = function (f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function () { return a; }));\n    });\n};\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return isNone(fa) ? that() : fa;\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category Alt\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nexport var zero = function () { return none; };\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\nexport var throwError = function () { return none; };\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isNone(wa) ? none : some(f(wa));\n}; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(b, fa.value);\n}; };\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isNone(fa) ? M.empty : f(fa.value);\n}; }; };\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(fa.value, b);\n}; };\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var compact = flatten;\nvar defaultSeparate = { left: none, right: none };\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var separate = function (ma) {\n    var o = pipe(ma, map(function (e) { return ({\n        left: getLeft(e),\n        right: getRight(e)\n    }); }));\n    return isNone(o) ? defaultSeparate : o.value;\n};\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filter = function (predicate) { return function (fa) { return (isNone(fa) ? none : predicate(fa.value) ? fa : none); }; };\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filterMap = function (f) { return function (fa) {\n    return isNone(fa) ? none : f(fa.value);\n}; };\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partition = function (predicate) { return function (fa) {\n    return {\n        left: filter_(fa, function (a) { return !predicate(a); }),\n        right: filter_(fa, predicate)\n    };\n}; };\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return flow(map(f), separate); };\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) { return function (f) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(f(ta.value), some)); }; }; };\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(ta.value, some)); }; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) { return function (f) { return function (fa) { return (isNone(fa) ? F.of(none) : f(fa.value)); }; }; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) { return function (f) { return function (fa) {\n    return isNone(fa)\n        ? F.of({\n            left: none,\n            right: none\n        })\n        : F.map(f(fa.value), function (e) { return ({\n            left: getLeft(e),\n            right: getRight(e)\n        }); });\n}; }; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getShow(S) {\n    return {\n        show: function (ma) { return (isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n    };\n}\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getEq(E) {\n    return {\n        equals: function (x, y) { return x === y || (isNone(x) ? isNone(y) : isNone(y) ? false : E.equals(x.value, y.value)); }\n    };\n}\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordNumber)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getOrd(O) {\n    return {\n        equals: getEq(O).equals,\n        compare: function (x, y) { return (x === y ? 0 : isSome(x) ? (isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n    };\n}\n/**\n * `Apply` semigroup\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | none               |\n * | none    | some(a) | none               |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getApplySemigroup, some, none } from 'fp-ts/Option'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const S = getApplySemigroup(semigroupSum)\n * assert.deepStrictEqual(S.concat(none, none), none)\n * assert.deepStrictEqual(S.concat(some(1), none), none)\n * assert.deepStrictEqual(S.concat(none, some(1)), none)\n * assert.deepStrictEqual(S.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getApplySemigroup(S) {\n    return {\n        concat: function (x, y) { return (isSome(x) && isSome(y) ? some(S.concat(x.value, y.value)) : none); }\n    };\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getApplyMonoid(M) {\n    return {\n        concat: getApplySemigroup(M).concat,\n        empty: some(M.empty)\n    };\n}\n/**\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getFirstMonoid() {\n    return {\n        concat: function (x, y) { return (isNone(x) ? y : x); },\n        empty: none\n    };\n}\n/**\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getLastMonoid() {\n    return {\n        concat: function (x, y) { return (isNone(y) ? x : y); },\n        empty: none\n    };\n}\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(a) | some(a)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const M = getMonoid(semigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getMonoid(S) {\n    return {\n        concat: function (x, y) { return (isNone(x) ? y : isNone(y) ? x : some(S.concat(x.value, y.value))); },\n        empty: none\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    alt: alt_,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    wither: wither_,\n    wilt: wilt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_,\n    throwError: throwError\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var option = {\n    URI: URI,\n    map: map_,\n    of: of,\n    ap: ap_,\n    chain: chain_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    zero: zero,\n    alt: alt_,\n    extend: extend_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    wither: wither_,\n    wilt: wilt_,\n    throwError: throwError\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if `ma` contains `a`\n *\n * @example\n * import { some, none, elem } from 'fp-ts/Option'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.strictEqual(elem(eqNumber)(1, some(1)), true)\n * assert.strictEqual(elem(eqNumber)(2, some(1)), false)\n * assert.strictEqual(elem(eqNumber)(1, none), false)\n *\n * @since 2.0.0\n */\nexport function elem(E) {\n    return function (a, ma) { return (isNone(ma) ? false : E.equals(a, ma.value)); };\n}\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nexport function exists(predicate) {\n    return function (ma) { return (isNone(ma) ? false : predicate(ma.value)); };\n}\n/**\n * Returns a `Refinement` (i.e. a custom type guard) from a `Option` returning function.\n * This function ensures that a custom type guard definition is type-safe.\n *\n * ```ts\n * import { some, none, getRefinement } from 'fp-ts/Option'\n *\n * type A = { type: 'A' }\n * type B = { type: 'B' }\n * type C = A | B\n *\n * const isA = (c: C): c is A => c.type === 'B' // <= typo but typescript doesn't complain\n * const isA = getRefinement<C, A>(c => (c.type === 'B' ? some(c) : none)) // static error: Type '\"B\"' is not assignable to type '\"A\"'\n * ```\n *\n * @since 2.0.0\n */\nexport function getRefinement(getOption) {\n    return function (a) { return isSome(getOption(a)); };\n}\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) { return map(bindTo_(name)); };\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n *\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = function (f) { return function (arr) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < arr.length; i++) {\n        var b = f(i, arr[i]);\n        if (isNone(b)) {\n            return none;\n        }\n        result.push(b.value);\n    }\n    return some(result);\n}; };\n/**\n * Runs an action for every element in array and accumulates the results in option\n *\n * this function have the same behavior of `A.sequence(O.option)` but it's optimized and perform better\n *\n * @example\n *\n * import * as A from 'fp-ts/Array'\n * import { traverseArray, some, fromPredicate, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * const arr = A.range(0, 10)\n * assert.deepStrictEqual(pipe(arr, traverseArray(some)), some(arr))\n * assert.deepStrictEqual(pipe(arr, traverseArray(fromPredicate((x) => x > 5))), none)\n *\n * @since 2.9.0\n */\nexport var traverseArray = function (f) { return traverseArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * get an array of option and convert it to option of array\n *\n * this function have the same behavior of `A.sequence(O.option)` but it's optimized and perform better\n *\n * @example\n *\n * import * as A from 'fp-ts/Array'\n * import { sequenceArray, some, none, fromPredicate } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * const arr = A.range(0, 10)\n * assert.deepStrictEqual(pipe(arr, A.map(some), sequenceArray), some(arr))\n * assert.deepStrictEqual(pipe(arr, A.map(fromPredicate(x => x > 8)), sequenceArray), none)\n *\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/\ntraverseArray(identity);\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { identity, pipe, bind_, bindTo_, flow } from './function';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromIO = function (ma) { return function () { return Promise.resolve(ma()); }; };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Creates a task that will complete after a time delay\n *\n * @example\n * import { sequenceT } from 'fp-ts/Apply'\n * import * as T from 'fp-ts/Task'\n *\n * async function test() {\n *   const log: Array<string> = []\n *   const append = (message: string): T.Task<void> =>\n *     T.fromIO(() => {\n *       log.push(message)\n *     })\n *   const fa = append('a')\n *   const fb = append('b')\n *   const fc = T.delay(10)(append('c'))\n *   const fd = append('d')\n *   await sequenceT(T.task)(fa, fb, fc, fd)()\n *   assert.deepStrictEqual(log, ['a', 'b', 'd', 'c'])\n * }\n *\n * test()\n *\n * @category combinators\n * @since 2.0.0\n */\nexport function delay(millis) {\n    return function (ma) { return function () {\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                // tslint:disable-next-line: no-floating-promises\n                ma().then(resolve);\n            }, millis);\n        });\n    }; };\n}\n/**\n * @category combinators\n * @since 2.4.0\n */\nexport function fromIOK(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromIO(f.apply(void 0, a));\n    };\n}\n/**\n * @category combinators\n * @since 2.4.0\n */\nexport function chainIOK(f) {\n    return chain(fromIOK(f));\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return pipe(fa, map(f)); };\nvar apPar_ = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar apSeq_ = function (fab, fa) {\n    return pipe(fab, chain(function (f) { return pipe(fa, map(f)); }));\n};\nvar chain_ = function (ma, f) { return pipe(ma, chain(f)); };\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) { return function () { return fa().then(f); }; }; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = function (fa) { return function (fab) { return function () {\n    return Promise.all([fab(), fa()]).then(function (_a) {\n        var f = _a[0], a = _a[1];\n        return f(a);\n    });\n}; }; };\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = function (fb) {\n    return flow(map(function (a) { return function () { return a; }; }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = function (fb) {\n    return flow(map(function () { return function (b) { return b; }; }), ap(fb));\n};\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.0.0\n */\nexport var of = function (a) { return function () { return Promise.resolve(a); }; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) { return function () {\n    return ma().then(function (a) { return f(a)(); });\n}; }; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = function (f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function () { return a; }));\n    });\n};\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * @category MonadTask\n * @since 2.7.0\n */\nexport var fromTask = identity;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Task';\n/**\n * Lift a semigroup into 'Task', the inner values are concatenated using the provided `Semigroup`.\n *\n * @example\n * import * as T from 'fp-ts/Task'\n * import { semigroupString } from 'fp-ts/Semigroup'\n *\n * async function test() {\n *   const S = T.getSemigroup(semigroupString)\n *   const fa = T.of('a')\n *   const fb = T.of('b')\n *   assert.deepStrictEqual(await S.concat(fa, fb)(), 'ab')\n * }\n *\n * test()\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getSemigroup(S) {\n    return {\n        concat: function (x, y) { return function () { return x().then(function (rx) { return y().then(function (ry) { return S.concat(rx, ry); }); }); }; }\n    };\n}\n/**\n * Lift a monoid into 'Task', the inner values are concatenated using the provided `Monoid`.\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getMonoid(M) {\n    return {\n        concat: getSemigroup(M).concat,\n        empty: of(M.empty)\n    };\n}\n/**\n * Monoid returning the first completed task.\n *\n * Note: uses `Promise.race` internally.\n *\n * @example\n * import * as T from 'fp-ts/Task'\n *\n * async function test() {\n *   const S = T.getRaceMonoid<string>()\n *   const fa = T.delay(20)(T.of('a'))\n *   const fb = T.delay(10)(T.of('b'))\n *   assert.deepStrictEqual(await S.concat(fa, fb)(), 'b')\n * }\n *\n * test()\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getRaceMonoid() {\n    return {\n        concat: function (x, y) { return function () { return Promise.race([x(), y()]); }; },\n        empty: never\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ApplicativePar = {\n    URI: URI,\n    map: map_,\n    ap: apPar_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ApplicativeSeq = {\n    URI: URI,\n    map: map_,\n    ap: apSeq_,\n    of: of\n};\n/**\n * Used in TaskEither.getTaskValidation\n *\n * @internal\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    of: of,\n    ap: apPar_,\n    chain: chain_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var task = {\n    URI: URI,\n    map: map_,\n    of: of,\n    ap: apPar_,\n    chain: chain_,\n    fromIO: fromIO,\n    fromTask: fromTask\n};\n// TODO: remove in v3\n/**\n * Like `task` but `ap` is sequential\n *\n * @category instances\n * @since 2.0.0\n */\nexport var taskSeq = {\n    URI: URI,\n    map: map_,\n    of: of,\n    ap: apSeq_,\n    chain: chain_,\n    fromIO: fromIO,\n    fromTask: fromTask\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * A `Task` that never completes.\n *\n * @since 2.0.0\n */\nexport var never = function () { return new Promise(function (_) { return undefined; }); };\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) { return map(bindTo_(name)); };\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = function (f) { return function (arr) { return function () { return Promise.all(arr.map(function (x, i) { return f(i, x)(); })); }; }; };\n/**\n * this function map array to task using provided function and transform it to a task of array.\n *\n * this function have the same behavior of `A.traverse(T.task)` but it's stack safe.\n *\n * > **This function run all task in parallel for sequential use `traverseSeqArray` **\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n * import { of, traverseArray } from 'fp-ts/Task'\n * async function test() {\n *   const arr = range(0, 10)\n *   assert.deepStrictEqual(await pipe(arr, traverseArray(of))(), arr)\n * }\n *\n * test()\n *\n * @since 2.9.0\n */\nexport var traverseArray = function (f) {\n    return traverseArrayWithIndex(function (_, a) { return f(a); });\n};\n/**\n * this function works like `Promise.all` it will get an array of tasks and return a task of array.\n *\n * this function have the same behavior of `A.sequence(T.task)` but it's stack safe.\n *\n * > **This function run all task in parallel for sequential use `sequenceSeqArray` **\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n * import { of, sequenceArray } from 'fp-ts/Task'\n *\n * async function test() {\n *   const arr = RA.range(1, 10)\n *   assert.deepStrictEqual(await pipe(arr, RA.map(of), sequenceArray)(), arr)\n * }\n *\n * test()\n *\n * @since 2.9.0\n */\nexport var sequenceArray = function (arr) { return function () {\n    return Promise.all(arr.map(function (x) { return x(); }));\n}; };\n/**\n * @since 2.9.0\n */\nexport var traverseSeqArrayWithIndex = function (f) { return function (arr) { return function () { return __awaiter(void 0, void 0, void 0, function () {\n    var result, i, r;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                result = [];\n                i = 0;\n                _a.label = 1;\n            case 1:\n                if (!(i < arr.length)) return [3 /*break*/, 4];\n                return [4 /*yield*/, f(i, arr[i])()];\n            case 2:\n                r = _a.sent();\n                result.push(r);\n                _a.label = 3;\n            case 3:\n                i++;\n                return [3 /*break*/, 1];\n            case 4: return [2 /*return*/, result];\n        }\n    });\n}); }; }; };\n/**\n * runs an action for every element in array then run task sequential, and accumulates the results in the array.\n *\n * this function have the same behavior of `A.traverse(T.taskSeq)` but it's stack safe.\n *\n * > **This function run all task sequentially for parallel use `traverseArray` **\n *\n *\n * @since 2.9.0\n */\nexport var traverseSeqArray = function (f) { return traverseSeqArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * run tasks in array sequential and give a task of array\n *\n * this function have the same behavior of `A.sequence(T.taskSeq)` but it's stack safe.\n *\n * > **This function run all task sequentially for parallel use `sequenceArray` **\n *\n * @since 2.9.0\n */\nexport var sequenceSeqArray = \n/*#__PURE__*/\ntraverseSeqArray(identity);\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport * as E from './Either';\nimport { getFilterableComposition } from './Filterable';\nimport { bindTo_, bind_, flow, identity, pipe } from './function';\nimport * as T from './Task';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var left = \n/*#__PURE__*/\nflow(E.left, T.of);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var right = \n/*#__PURE__*/\nflow(E.right, T.of);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var rightTask = \n/*#__PURE__*/\nT.map(E.right);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var leftTask = \n/*#__PURE__*/\nT.map(E.left);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var rightIO = \n/*#__PURE__*/\nflow(T.fromIO, rightTask);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var leftIO = \n/*#__PURE__*/\nflow(T.fromIO, leftTask);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromIOEither = T.fromIO;\n/**\n * Derivable from `MonadThrow`.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromEither = \n/*#__PURE__*/\nE.fold(left, function (a) { return right(a); });\n/**\n * Derivable from `MonadThrow`.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromOption = function (onNone) { return function (ma) {\n    return ma._tag === 'None' ? left(onNone()) : right(ma.value);\n}; };\n/**\n * Derivable from `MonadThrow`.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromPredicate = function (predicate, onFalse) { return function (a) { return (predicate(a) ? right(a) : left(onFalse(a))); }; };\n/**\n * Transforms a `Promise` that may reject to a `Promise` that never rejects and returns an `Either` instead.\n *\n * Note: `f` should never `throw` errors, they are not caught.\n *\n * @example\n * import { left, right } from 'fp-ts/Either'\n * import { tryCatch } from 'fp-ts/TaskEither'\n *\n * tryCatch(() => Promise.resolve(1), String)().then(result => {\n *   assert.deepStrictEqual(result, right(1))\n * })\n * tryCatch(() => Promise.reject('error'), String)().then(result => {\n *   assert.deepStrictEqual(result, left('error'))\n * })\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function tryCatch(f, onRejected) {\n    return function () { return f().then(E.right, function (reason) { return E.left(onRejected(reason)); }); };\n}\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.0.0\n */\nexport var fold = \n/*#__PURE__*/\nflow(E.fold, T.chain);\n/**\n * Less strict version of [`getOrElse`](#getOrElse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexport var getOrElseW = function (onLeft) { return function (ma) {\n    return pipe(ma, T.chain(E.fold(onLeft, T.of)));\n}; };\n/**\n * @category destructors\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Returns `ma` if is a `Right` or the value returned by `onLeft` otherwise.\n *\n * See also [alt](#alt).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as TE from 'fp-ts/TaskEither'\n *\n * async function test() {\n *   const errorHandler = TE.orElse((error: string) => TE.right(`recovering from ${error}...`))\n *   assert.deepStrictEqual(await pipe(TE.right('ok'), errorHandler)(), E.right('ok'))\n *   assert.deepStrictEqual(await pipe(TE.left('ko'), errorHandler)(), E.right('recovering from ko...'))\n * }\n *\n * test()\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var orElse = function (f) { return T.chain(E.fold(f, right)); };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var swap = \n/*#__PURE__*/\nT.map(E.swap);\n/**\n * Less strict version of [`filterOrElse`](#filterOrElse).\n *\n * @since 2.9.0\n */\nexport var filterOrElseW = function (predicate, onFalse) {\n    return chainW(function (a) { return (predicate(a) ? right(a) : left(onFalse(a))); });\n};\n/**\n * Derivable from `MonadThrow`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var filterOrElse = filterOrElseW;\n/**\n * Converts a function returning a `Promise` to one returning a `TaskEither`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function tryCatchK(f, onRejected) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return tryCatch(function () { return f.apply(void 0, a); }, onRejected);\n    };\n}\n/**\n * @category combinators\n * @since 2.4.0\n */\nexport function fromEitherK(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromEither(f.apply(void 0, a));\n    };\n}\n/**\n * @category combinators\n * @since 2.4.0\n */\nexport function fromIOEitherK(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromIOEither(f.apply(void 0, a));\n    };\n}\n/**\n * Less strict version of [`chainEitherK`](#chainEitherK).\n *\n * @category combinators\n * @since 2.6.1\n */\nexport var chainEitherKW = function (f) { return chainW(fromEitherK(f)); };\n/**\n * @category combinators\n * @since 2.4.0\n */\nexport var chainEitherK = chainEitherKW;\n/**\n * Less strict version of [`chainIOEitherK`](#chainIOEitherK).\n *\n * @category combinators\n * @since 2.6.1\n */\nexport var chainIOEitherKW = function (f) { return chainW(fromIOEitherK(f)); };\n/**\n * @category combinators\n * @since 2.4.0\n */\nexport var chainIOEitherK = chainIOEitherKW;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar bimap_ = function (fa, f, g) { return pipe(fa, bimap(f, g)); };\n/* istanbul ignore next */\nvar mapLeft_ = function (fa, f) { return pipe(fa, mapLeft(f)); };\nvar apPar_ = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar apSeq_ = function (fab, fa) {\n    return pipe(fab, chain(function (f) { return pipe(fa, map(f)); }));\n};\n/* istanbul ignore next */\nvar chain_ = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar alt_ = function (fa, that) { return pipe(fa, alt(that)); };\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return T.map(E.map(f)); };\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexport var bimap = \n/*#__PURE__*/\nflow(E.bimap, T.map);\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexport var mapLeft = function (f) {\n    return T.map(E.mapLeft(f));\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nexport var apW = function (fa) {\n    return flow(T.map(function (gab) { return function (ga) { return E.apW(ga)(gab); }; }), T.ap(fa));\n};\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = apW;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = function (fb) {\n    return flow(map(function (a) { return function () { return a; }; }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = function (fb) {\n    return flow(map(function () { return function (b) { return b; }; }), ap(fb));\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nexport var chainW = function (f) { return function (ma) {\n    return pipe(ma, T.chain(E.fold(left, f)));\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = chainW;\n/**\n * Less strict version of [`chainFirst`](#chainFirst).\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexport var chainFirstW = function (f) {\n    return chainW(function (a) {\n        return pipe(f(a), map(function () { return a; }));\n    });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = chainFirstW;\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return pipe(fa, T.chain(E.fold(that, right))); }; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `TaskEither` returns `fa` if is a `Right` or the value returned by `that` otherwise.\n *\n * See also [orElse](#orElse).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as TE from 'fp-ts/TaskEither'\n *\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       TE.right(1),\n *       TE.alt(() => TE.right(2))\n *     )(),\n *     E.right(1)\n *   )\n *   assert.deepStrictEqual(\n *     await pipe(\n *       TE.left('a'),\n *       TE.alt(() => TE.right(2))\n *     )(),\n *     E.right(2)\n *   )\n *   assert.deepStrictEqual(\n *     await pipe(\n *       TE.left('a'),\n *       TE.alt(() => TE.left('b'))\n *     )(),\n *     E.left('b')\n *   )\n * }\n *\n * test()\n *\n * @category Alt\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * Wrap a value into the type constructor.\n *\n * Equivalent to [`right`](#right).\n *\n * @category Applicative\n * @since 2.0.0\n */\nexport var of = right;\n/**\n * @category MonadIO\n * @since 2.7.0\n */\nexport var fromIO = rightIO;\n/**\n * @category MonadTask\n * @since 2.7.0\n */\nexport var fromTask = rightTask;\n/**\n * @category MonadTask\n * @since 2.7.0\n */\nexport var throwError = left;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'TaskEither';\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getSemigroup(S) {\n    return T.getSemigroup(E.getSemigroup(S));\n}\n/**\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getApplySemigroup(S) {\n    return T.getSemigroup(E.getApplySemigroup(S));\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getApplyMonoid(M) {\n    return {\n        concat: getApplySemigroup(M).concat,\n        empty: right(M.empty)\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport function getApplicativeTaskValidation(A, SE) {\n    var AV = E.getApplicativeValidation(SE);\n    var ap = function (fga) { return function (fgab) {\n        return A.ap(A.map(fgab, function (h) { return function (ga) { return AV.ap(h, ga); }; }), fga);\n    }; };\n    return {\n        URI: URI,\n        _E: undefined,\n        map: map_,\n        ap: function (fab, fa) { return pipe(fab, ap(fa)); },\n        of: of\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport function getAltTaskValidation(SE) {\n    return {\n        URI: URI,\n        _E: undefined,\n        map: map_,\n        alt: function (me, that) {\n            return pipe(me, T.chain(function (e1) {\n                return E.isRight(e1)\n                    ? T.of(e1)\n                    : pipe(that(), T.map(function (e2) { return (E.isLeft(e2) ? E.left(SE.concat(e1.left, e2.left)) : e2); }));\n            }));\n        }\n    };\n}\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getTaskValidation(SE) {\n    var applicativeTaskValidation = getApplicativeTaskValidation(T.ApplicativePar, SE);\n    var altTaskValidation = getAltTaskValidation(SE);\n    return {\n        URI: URI,\n        _E: undefined,\n        map: map_,\n        ap: applicativeTaskValidation.ap,\n        of: of,\n        chain: chain_,\n        bimap: bimap_,\n        mapLeft: mapLeft_,\n        alt: altTaskValidation.alt,\n        fromIO: fromIO,\n        fromTask: fromTask,\n        throwError: throwError\n    };\n}\n/**\n * @category instances\n * @since 2.1.0\n */\nexport function getFilterable(M) {\n    var W = E.getWitherable(M);\n    var F = getFilterableComposition(T.Monad, W);\n    return {\n        URI: URI,\n        _E: undefined,\n        map: map_,\n        compact: F.compact,\n        separate: F.separate,\n        filter: F.filter,\n        filterMap: F.filterMap,\n        partition: F.partition,\n        partitionMap: F.partitionMap\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ApplicativePar = {\n    URI: URI,\n    map: map_,\n    ap: apPar_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ApplicativeSeq = {\n    URI: URI,\n    map: map_,\n    ap: apSeq_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    bimap: bimap_,\n    mapLeft: mapLeft_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var taskEither = {\n    URI: URI,\n    bimap: bimap_,\n    mapLeft: mapLeft_,\n    map: map_,\n    of: of,\n    ap: apPar_,\n    chain: chain_,\n    alt: alt_,\n    fromIO: fromIO,\n    fromTask: fromTask,\n    throwError: throwError\n};\n// TODO: remove in v3\n/**\n * Like `TaskEither` but `ap` is sequential\n *\n * @category instances\n * @since 2.0.0\n */\nexport var taskEitherSeq = {\n    URI: URI,\n    bimap: bimap_,\n    mapLeft: mapLeft_,\n    map: map_,\n    of: of,\n    ap: apSeq_,\n    chain: chain_,\n    alt: alt_,\n    fromIO: fromIO,\n    fromTask: fromTask,\n    throwError: throwError\n};\nexport function taskify(f) {\n    return function () {\n        var args = Array.prototype.slice.call(arguments);\n        return function () {\n            return new Promise(function (resolve) {\n                var cbResolver = function (e, r) { return (e != null ? resolve(E.left(e)) : resolve(E.right(r))); };\n                f.apply(null, args.concat(cbResolver));\n            });\n        };\n    };\n}\n/**\n * Make sure that a resource is cleaned up in the event of an exception (\\*). The release action is called regardless of\n * whether the body action throws (\\*) or returns.\n *\n * (\\*) i.e. returns a `Left`\n *\n * Derivable from `MonadThrow`.\n *\n * @since 2.0.0\n */\nexport var bracket = function (acquire, use, release) {\n    return pipe(acquire, chain(function (a) {\n        return pipe(pipe(use(a), T.map(E.right)), chain(function (e) {\n            return pipe(release(a, e), chain(function () { return (E.isLeft(e) ? left(e.left) : of(e.right)); }));\n        }));\n    }));\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) {\n    return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\nexport var bindW = function (name, f) {\n    return chainW(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n/**\n * @since 2.8.0\n */\nexport var bind = bindW;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apSW = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), apW(fb));\n};\n/**\n * @since 2.8.0\n */\nexport var apS = apSW;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = function (f) { return function (arr) {\n    return pipe(arr, T.traverseArrayWithIndex(f), T.map(E.sequenceArray));\n}; };\n/**\n * this function have the same behavior of `A.traverse(TE.taskEither)` but it's stack safe and perform better\n *\n * *this function run all tasks in parallel and does not bail out, for sequential version use `traverseSeqArray`*\n *\n * @example\n *\n * import * as TE from 'fp-ts/TaskEither'\n * import * as A from 'fp-ts/Array'\n * import { right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * const PostRepo = {\n *  findById : (id: number) => TE.of({id, title: ''})\n * }\n *\n * const findAllPosts = (ids:number[]) => pipe(ids, TE.traverseArray(PostRepo.findById))\n *\n * async function test() {\n *   const ids = A.range(0, 10)\n *\n *   assert.deepStrictEqual(\n *     await findAllPosts(ids)(),\n *     right(\n *       pipe(\n *         ids,\n *         A.map((id) => ({ id, title: ''}))\n *       )\n *     )\n *   )\n * }\n *\n * test()\n *\n * @since 2.9.0\n */\nexport var traverseArray = function (f) { return traverseArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * this function have the same behavior of `A.sequence(TE.taskEither)` but it's stack safe and perform better\n *\n * *this function run all tasks in parallel and does not bail out, for sequential version use `sequenceSeqArray`*\n *\n * @example\n *\n * import * as TE from 'fp-ts/TaskEither'\n * import * as A from 'fp-ts/Array'\n * import { right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * const PostRepo = {\n *  findById : (id: number) => TE.of({id, title: ''})\n * }\n *\n * const findAllPosts = (ids:number[]) => pipe(ids, A.map(PostRepo.findById), TE.sequenceArray)\n *\n * async function test() {\n *   const ids = A.range(0, 10)\n *\n *   assert.deepStrictEqual(\n *     await findAllPosts(ids)(),\n *     right(\n *       pipe(\n *         ids,\n *         A.map((id) => ({ id, title: ''}))\n *       )\n *     )\n *   )\n * }\n *\n * test()\n *\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/\ntraverseArray(identity);\n/**\n * @since 2.9.0\n */\nexport var traverseSeqArrayWithIndex = function (f) { return function (arr) { return function () { return __awaiter(void 0, void 0, void 0, function () {\n    var result, i, e;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                result = [];\n                i = 0;\n                _a.label = 1;\n            case 1:\n                if (!(i < arr.length)) return [3 /*break*/, 4];\n                return [4 /*yield*/, f(i, arr[i])()];\n            case 2:\n                e = _a.sent();\n                if (E.isLeft(e)) {\n                    return [2 /*return*/, e];\n                }\n                result.push(e.right);\n                _a.label = 3;\n            case 3:\n                i++;\n                return [3 /*break*/, 1];\n            case 4: return [2 /*return*/, E.right(result)];\n        }\n    });\n}); }; }; };\n/**\n * this function have the same behavior of `A.traverse(TE.taskEitherSeq)` but it's stack safe and perform better\n *\n * *this function run all tasks in sequential order and bails out on left side of either, for parallel version use `traverseArray`*\n *\n * @since 2.9.0\n */\nexport var traverseSeqArray = function (f) { return traverseSeqArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * this function have the same behavior of `A.sequence(TE.taskEitherSeq)` but it's stack safe and perform better\n *\n * *this function run all tasks in sequential order and bails out on left side of either, for parallel version use `sequenceArray`*\n *\n * @since 2.9.0\n */\nexport var sequenceSeqArray = \n/*#__PURE__*/\ntraverseSeqArray(identity);\n","export enum LocalStorageKeys {\n  WALLET_ADDRESS = 'WALLET_ADDRESS',\n  STARK_PUBLIC_KEY = 'STARK_PUBLIC_KEY',\n  PROVIDER_PREFERENCE = 'PROVIDER_PREFERENCE',\n  ETH_NETWORK = 'ETH_NETWORK',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = /*@__PURE__*/ (function () {\n    return typeof Symbol === 'function'\n        ? /*@__PURE__*/ Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n})();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            var keySelector = this.keySelector;\n            key = keySelector ? keySelector(value) : value;\n        }\n        catch (err) {\n            return this.destination.error(err);\n        }\n        var result = false;\n        if (this.hasKey) {\n            try {\n                var compare = this.compare;\n                result = compare(this.key, key);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (!result) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n","import * as t from 'io-ts';\n\n/**\n * Request parameters for creating a collection\n *\n * @deprecated\n */\nexport const CreateCollectionParamsCodec = t.intersection([\n  t.type({\n    /**\n     * Name of the collection (required)\n     */\n    name: t.string,\n    /**\n     * Ethereum address of the ERC721 contract (required, must be an ETH address)\n     */\n    contract_address: t.string,\n    /**\n     * Owner Public Key: The public key of the owner of the contract (required)\n     */\n    owner_public_key: t.string,\n    /**\n     * The collection's project ID (required)\n     */\n    project_id: t.number,\n  }),\n  t.partial({\n    /**\n     * URL of the metadata for this collection\n     */\n    metadata_api_url: t.string,\n    /**\n     * Description of the collection\n     */\n    description: t.string,\n    /**\n     * URL of the icon for this collection\n     */\n    icon_url: t.string,\n    /**\n     * URL of the tile image for this collection\n     */\n    collection_image_url: t.string,\n  }),\n]);\n\n/** @deprecated */\nexport type CreateCollectionParamsF = t.TypeOf<\n  typeof CreateCollectionParamsCodec\n>;\nexport type CreateCollectionParams = t.OutputOf<\n  typeof CreateCollectionParamsCodec\n>;\n\n/**\n * Result of creating a collection\n *\n * @deprecated\n */\nexport const CreateCollectionsResultsCodec = t.type({\n  /**\n   * Name of the collection (required)\n   */\n  name: t.string,\n  /**\n   * Ethereum address of the ERC721 contract\n   */\n  address: t.string,\n  /**\n   * The collection's project ID (required)\n   */\n  project_id: t.number,\n  /**\n   * URL of the metadata for this collection\n   */\n  metadata_api_url: t.union([t.null, t.string]),\n  /**\n   * Description of the collection\n   */\n  description: t.union([t.null, t.string]),\n  /**\n   * URL of the icon for this collection\n   */\n  icon_url: t.union([t.null, t.string]),\n  /**\n   * URL of the tile image for this collection\n   */\n  collection_image_url: t.union([t.null, t.string]),\n});\n\n/** @deprecated */\nexport type CreateCollectionsResultF = t.TypeOf<\n  typeof CreateCollectionsResultsCodec\n>;\nexport type CreateCollectionsResult = t.OutputOf<\n  typeof CreateCollectionsResultsCodec\n>;\n\n/**\n * Request parameters for updating a collection\n */\nexport const UpdateCollectionParamsCodec = t.partial({\n  /**\n   * Name of the collection\n   */\n  name: t.union([t.undefined, t.string]),\n  /**\n   * Description of the collection\n   */\n  description: t.union([t.undefined, t.string]),\n  /**\n   * URL of the icon for this collection\n   */\n  icon_url: t.union([t.undefined, t.string]),\n  /**\n   * URL of the metadata for this collection\n   * If metadata_api_url is modified AFTER minting, the existing NFTs that used the previous metadata_api_url will not be modified.\n   * The new metadata_api_url will be used for new NFT mints.\n   */\n  metadata_api_url: t.union([t.undefined, t.string]),\n  /**\n   * URL of the tile image for this collection\n   */\n  collection_image_url: t.union([t.undefined, t.string]),\n});\n/** @deprecated */\nexport type UpdateCollectionParamsF = t.TypeOf<\n  typeof UpdateCollectionParamsCodec\n>;\nexport type UpdateCollectionParams = t.OutputOf<\n  typeof UpdateCollectionParamsCodec\n>;\n\n/**\n * Result of updating a collection\n *\n * @deprecated\n */\nexport const UpdateCollectionsResultCodec = t.type({\n  address: t.string,\n  name: t.string,\n  description: t.union([t.null, t.string]),\n  icon_url: t.union([t.null, t.string]),\n  collection_image_url: t.union([t.null, t.string]),\n  project_id: t.number,\n  metadata_api_url: t.union([t.null, t.string]),\n});\n/** @deprecated */\nexport type UpdateCollectionsResultF = t.TypeOf<\n  typeof UpdateCollectionsResultCodec\n>;\nexport type UpdateCollectionsResults = t.OutputOf<\n  typeof UpdateCollectionsResultCodec\n>;\n","import { isAddress } from '@ethersproject/address';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport * as E from 'fp-ts/Either';\nimport { pipe } from 'fp-ts/function';\nimport * as t from 'io-ts';\n\nexport interface EthAddressBrand {\n  readonly EthAddress: unique symbol;\n}\n\nexport const EthAddress = t.brand(\n  t.string,\n  (s: any): s is t.Branded<string, EthAddressBrand> => isAddress(s),\n  'EthAddress',\n);\n\nexport type EthAddress = t.TypeOf<typeof EthAddress>;\n\nexport enum BurnAddress {\n  BurnEthAddress = '0x0000000000000000000000000000000000000000',\n}\n\nexport interface NumberStringBrand {\n  readonly NumberString: unique symbol;\n}\n\nexport const NumberString = t.brand(\n  t.string,\n  (s: any): s is t.Branded<string, NumberStringBrand> =>\n    s !== '' && !Number.isNaN(s),\n  'NumberString',\n);\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type NumberString = t.TypeOf<typeof NumberString>;\n\nexport interface HexadecimalStringBrand {\n  readonly HexadecimalString: unique symbol;\n}\n\nexport const HexadecimalString = t.brand(\n  t.string,\n  (s: any): s is t.Branded<string, HexadecimalStringBrand> =>\n    typeof s === 'string' && s.substring(0, 2) === '0x',\n  'HexadecimalString',\n);\n\nexport type HexadecimalString = t.TypeOf<typeof HexadecimalString>;\n\nexport interface IntegerStringBrand {\n  readonly IntegerString: unique symbol;\n}\n\nexport const IntegerString = t.brand(\n  NumberString,\n  (s: any): s is t.Branded<NumberString, IntegerStringBrand> =>\n    Number.isInteger(parseFloat(s)),\n  'IntegerString',\n);\n\nexport interface PositiveIntegerStringBrand {\n  readonly PositiveIntegerString: unique symbol;\n}\n\nexport const PositiveIntegerStringC = t.brand(\n  NumberString,\n  (s: any): s is t.Branded<NumberString, PositiveIntegerStringBrand> =>\n    Number.isInteger(parseFloat(s)) && parseFloat(s) > 0,\n  'PositiveIntegerString',\n);\n\nexport type PositiveIntegerString = t.TypeOf<typeof PositiveIntegerStringC>;\n\nexport interface PositiveNumberStringBrand {\n  readonly PositiveNumberString: unique symbol;\n}\n\nexport const PositiveNumberStringC = t.brand(\n  NumberString,\n  (s: any): s is t.Branded<NumberString, PositiveNumberStringBrand> =>\n    parseFloat(s) > 0,\n  'PositiveNumberString',\n);\n\nexport type PositiveNumberString = t.TypeOf<typeof PositiveNumberStringC>;\n\nexport interface PositiveIntegerBrand {\n  readonly PositiveInteger: unique symbol;\n}\n\nexport type PositiveIntegerT = number & PositiveIntegerBrand;\n\nexport const PositiveIntegerC = t.brand(\n  t.number,\n  (n): n is t.Branded<number, PositiveIntegerT> => Number.isInteger(n) && n > 0,\n  'PositiveInteger',\n);\n\nexport type PositiveInteger = t.TypeOf<typeof PositiveIntegerC>;\n\nexport function fromEnum<EnumType>(\n  enumName: string,\n  theEnum: Record<string, string | number>,\n): t.Type<EnumType> {\n  const isEnumValue = (input: unknown): input is EnumType =>\n    Object.values<unknown>(theEnum).includes(input);\n\n  return new t.Type<EnumType>(\n    enumName,\n    isEnumValue,\n    (input, context) =>\n      isEnumValue(input) ? t.success(input) : t.failure(input, context),\n    t.identity,\n  );\n}\n\nexport const FeeCodec = t.interface({\n  /** Asset originator (AO) address to pay out fees to */\n  recipient: EthAddress,\n\n  /**\n   * Percentage truncated to 2 d.p.\n   *\n   * 10.24 = 10.24%\n   */\n  percentage: t.number,\n});\n\nexport type FeeType = t.TypeOf<typeof FeeCodec>;\n\n/**\n * Token(s)\n */\n\nexport enum ETHTokenType {\n  ETH = 'ETH',\n}\n\nexport const ETHTokenTypeT = fromEnum<ETHTokenType>(\n  'ETHTokenType',\n  ETHTokenType,\n);\n\nexport const ETHTokenCodec = t.interface({\n  type: ETHTokenTypeT,\n  data: t.interface({\n    decimals: t.number,\n  }),\n});\n\nexport type ETHToken = t.TypeOf<typeof ETHTokenCodec>;\n\nexport enum ERC20TokenType {\n  ERC20 = 'ERC20',\n}\n\nexport const ERC20TokenTypeT = fromEnum<ERC20TokenType>(\n  'ERC20TokenType',\n  ERC20TokenType,\n);\n\nexport const ERC20TokenCodec = t.interface({\n  type: ERC20TokenTypeT,\n  data: t.interface({\n    symbol: t.string,\n    decimals: t.number,\n    tokenAddress: EthAddress,\n  }),\n});\n\nexport type ERC20Token = t.TypeOf<typeof ERC20TokenCodec>;\n\nexport enum ERC721TokenType {\n  ERC721 = 'ERC721',\n}\n\nexport const ERC721TokenTypeT = fromEnum<ERC721TokenType>(\n  'ERC721TokenType',\n  ERC721TokenType,\n);\n\nexport const ERC721TokenCodec = t.interface({\n  type: ERC721TokenTypeT,\n  data: t.interface({\n    tokenId: t.string,\n    tokenAddress: EthAddress,\n  }),\n});\n\nexport type ERC721Token = t.TypeOf<typeof ERC721TokenCodec>;\n\nexport enum MintableERC20TokenType {\n  MINTABLE_ERC20 = 'MINTABLE_ERC20',\n}\n\nexport const MintableERC20TokenTypeT = fromEnum<MintableERC20TokenType>(\n  'MintableERC20TokenType',\n  MintableERC20TokenType,\n);\n\nexport const MintableERC20TokenCodec = t.interface({\n  type: MintableERC20TokenTypeT,\n  data: t.interface({\n    id: t.string,\n    blueprint: t.string,\n    tokenAddress: t.union([t.string, EthAddress]),\n  }),\n});\n\nexport type MintableERC20Token = t.TypeOf<typeof MintableERC20TokenCodec>;\n\nexport const MintFeeCodec = t.interface({\n  recipient: EthAddress, // asset originator (AO) address to pay out royalty fees to\n  percentage: t.number,\n});\n\nexport enum MintableERC721TokenType {\n  MINTABLE_ERC721 = 'MINTABLE_ERC721',\n}\n\nexport const MintableERC721TokenTypeT = fromEnum<MintableERC721TokenType>(\n  'MintableERC721TokenType',\n  MintableERC721TokenType,\n);\n\nexport const MintableERC721TokenDataCodec = t.intersection([\n  t.interface({\n    id: t.string,\n    blueprint: t.string,\n  }),\n  t.partial({\n    royalties: t.array(MintFeeCodec), // token-level overridable fees (optional)\n  }),\n]);\n\nexport type MintableERC721TokenData = t.TypeOf<\n  typeof MintableERC721TokenDataCodec\n>;\n\nexport const MintableERC721TokenCodec = t.interface({\n  type: MintableERC721TokenTypeT,\n  data: t.intersection([\n    t.interface({\n      id: t.string,\n      blueprint: t.string,\n      tokenAddress: t.union([t.string, EthAddress]),\n    }),\n    t.partial({\n      royalties: t.array(MintFeeCodec), // token-level overridable fees (optional)\n    }),\n  ]),\n});\n\nexport type MintableERC721Token = t.TypeOf<typeof MintableERC721TokenCodec>;\n\nexport const TokenTypeCodec = t.union([\n  ERC721TokenTypeT,\n  ERC20TokenTypeT,\n  ETHTokenTypeT,\n  MintableERC20TokenTypeT,\n  MintableERC721TokenTypeT,\n]);\n\nexport const TokenCodec = t.union([\n  ETHTokenCodec,\n  ERC20TokenCodec,\n  ERC721TokenCodec,\n  MintableERC20TokenCodec,\n  MintableERC721TokenCodec,\n]);\n\nexport type Token = t.TypeOf<typeof TokenCodec>;\nexport type TokenTS = t.OutputOf<typeof TokenCodec>;\n\nexport const MintBodyCodec = t.interface({\n  etherKey: EthAddress,\n  tokens: t.array(MintableERC721TokenCodec),\n  nonce: PositiveIntegerStringC,\n  authSignature: t.string,\n});\n\nexport type MintBody = t.TypeOf<typeof MintBodyCodec>;\n\nexport const MintUserCodec = t.interface({\n  etherKey: EthAddress,\n  tokens: t.array(MintableERC721TokenDataCodec),\n});\n\n// TODO: remove V2 label when V1 is deprecated\nexport const MintV2BodyCodec = t.intersection([\n  t.interface({\n    users: t.array(MintUserCodec),\n    contractAddress: EthAddress,\n  }),\n  t.partial({ royalties: t.array(MintFeeCodec) }), // contract-level (optional)\n]);\n\nexport type MintV2Body = t.TypeOf<typeof MintV2BodyCodec>;\n\nexport const BigNumberCodec = t.type({\n  vaultId: t.Int,\n  token: TokenCodec,\n  quantity: t.bigint,\n});\n\nexport const BigNumberT = new t.Type<BigNumber, BigNumber>(\n  'BigNumberT',\n  (u): u is BigNumber => u instanceof BigNumber,\n  (u, c) =>\n    pipe(\n      E.tryCatch(\n        () => BigNumber.from(u),\n        e => e as Error,\n      ),\n      E.fold(() => t.failure(u, c), t.success),\n    ),\n  t.identity,\n);\nexport type BigNumberT = t.TypeOf<typeof BigNumberT>;\n\nexport interface PositiveBigNumberBrand {\n  readonly PositiveBigNumber: unique symbol;\n}\n\nexport const PositiveBigNumber = t.brand(\n  BigNumberT,\n  (s): s is t.Branded<BigNumberT, PositiveBigNumberBrand> =>\n    s > BigNumber.from(0),\n  'PositiveBigNumber',\n);\n\nexport type PositiveBigNumber = t.TypeOf<typeof PositiveBigNumber>;\n\nexport interface NonNegativeBigNumberBrand {\n  readonly NonNegativeBigNumber: unique symbol;\n}\n\nexport const NonNegativeBigNumber = t.brand(\n  BigNumberT,\n  (s): s is t.Branded<BigNumberT, NonNegativeBigNumberBrand> =>\n    s >= BigNumber.from(0),\n  'NonNegativeBigNumber',\n);\n\nexport type NonNegativeBigNumber = t.TypeOf<typeof NonNegativeBigNumber>;\n\n/**\n * Transfer / Order Params\n */\nexport const TransferParamsCodec = t.interface({\n  starkPublicKey: HexadecimalString,\n  vaultId: t.Int,\n});\n\nexport type TransferParams = t.TypeOf<typeof TransferParamsCodec>;\n\nexport const OrderParamsCodec = t.interface({\n  vaultId: t.Int,\n  token: TokenCodec,\n  quantity: PositiveBigNumber,\n});\n\nexport type OrderParams = t.TypeOf<typeof OrderParamsCodec>;\n\nexport const FeeParamsCodec = t.interface({\n  feeToken: t.string,\n  feeVaultId: t.Int,\n  feeLimit: PositiveBigNumber,\n});\n\nexport type FeeParams = t.TypeOf<typeof FeeParamsCodec>;\n","import * as t from 'io-ts';\n\nimport { fromEnum, HexadecimalString } from '../runtime';\nimport { ApiResponseCodec } from './common';\n\nexport enum MetadataTypes {\n  Enum = 'enum',\n  Text = 'text',\n  Boolean = 'boolean',\n  Continuous = 'continuous',\n  Discrete = 'discrete',\n}\n\n/** @deprecated */\nexport const MetadataTypesT = fromEnum<MetadataTypes>(\n  'MetadataTypes',\n  MetadataTypes,\n);\n\nexport const MetadataPropertyCodec = t.interface({\n  name: t.string,\n  type: MetadataTypesT,\n  filterable: t.boolean,\n});\n\n/** @deprecated */\nexport const MetadataObjectCodec = t.intersection([\n  t.type({\n    /**\n     * Name of the metadata key (required)\n     */\n    name: t.string,\n  }),\n  t.partial({\n    /**\n     * Type of the metadata. (required) Values: \"enum\", \"text\", \"boolean\", \"continuous\", \"discrete\"\n     * Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping\n     * Defaults to 'text'\n     */\n    type: t.union([t.undefined, MetadataTypesT]),\n    /**\n     * Sets the metadata as filterable\n     * Defaults to false\n     */\n    filterable: t.union([t.undefined, t.boolean]),\n  }),\n]);\n\n/**\n * Request parameters for adding metadata schema to a collection\n *\n * @deprecated\n */\nexport const AddMetadataSchemaToCollectionParamsCodec = t.type({\n  /**\n   * The metadata container (required)\n   */\n  metadata: t.array(MetadataObjectCodec),\n});\n/** @deprecated */\nexport type AddMetadataSchemaToCollectionParamsF = t.TypeOf<\n  typeof AddMetadataSchemaToCollectionParamsCodec\n>;\nexport type AddMetadataSchemaToCollectionParams = t.OutputOf<\n  typeof AddMetadataSchemaToCollectionParamsCodec\n>;\n\n/**\n * Result of adding metadata schema to a collection\n *\n * @deprecated\n */\nexport const AddMetadataSchemaToCollectionResultCodec = ApiResponseCodec;\n/** @deprecated */\nexport type AddMetadataSchemaToCollectionResultF = t.TypeOf<\n  typeof ApiResponseCodec\n>;\nexport type AddMetadataSchemaToCollectionResult = t.OutputOf<\n  typeof ApiResponseCodec\n>;\n\n/**\n * Request parameters for updating metadata schema by name\n *\n * @deprecated\n */\nexport const UpdateMetadataSchemaByNameParamsCodec = t.partial({\n  /**\n   * The new metadata key if different from existing key\n   */\n  name: t.union([t.undefined, t.string]),\n  /**\n   * Type of the metadata. (required) Values: \"enum\", \"text\", \"boolean\", \"continuous\", \"discrete\"\n   * Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping\n   * Defaults to 'text'\n   */\n  type: t.union([t.undefined, MetadataTypesT]),\n  /**\n   * Sets the metadata as filterable\n   * Defaults to false\n   */\n  filterable: t.union([t.undefined, t.boolean]),\n});\n/** @deprecated */\nexport type UpdateMetadataSchemaByNameParamsF = t.TypeOf<\n  typeof UpdateMetadataSchemaByNameParamsCodec\n>;\nexport type UpdateMetadataSchemaByNameParams = t.OutputOf<\n  typeof UpdateMetadataSchemaByNameParamsCodec\n>;\n\n/**\n * Result of updating metadata schema by name\n *\n * @deprecated\n */\nexport const UpdateMetadataSchemaByNameResultCodec = ApiResponseCodec;\n/** @deprecated */\nexport type UpdateMetadataSchemaByNameResultF = t.TypeOf<\n  typeof ApiResponseCodec\n>;\nexport type UpdateMetadataSchemaByNameResult = t.OutputOf<\n  typeof ApiResponseCodec\n>;\n\n/** @deprecated */\nexport const GetMetadataSchemaParamsCodec = t.type({\n  address: HexadecimalString,\n});\n/** @deprecated */\nexport type GetMetadataSchemaParamsF = t.TypeOf<\n  typeof GetMetadataSchemaParamsCodec\n>;\nexport type GetMetadataSchemaParams = t.OutputOf<\n  typeof GetMetadataSchemaParamsCodec\n>;\n\nexport const GetMetadataSchemaResultCodec = t.array(MetadataObjectCodec);\nexport type GetMetadataSchemaResultF = t.TypeOf<\n  typeof GetMetadataSchemaResultCodec\n>;\nexport type GetMetadataSchemaResult = t.OutputOf<\n  typeof GetMetadataSchemaResultCodec\n>;\n","import * as t from 'io-ts';\n\nexport const ApiResponseCodec = t.type({\n  result: t.string,\n});\n\nexport type ApiResponseF = t.TypeOf<typeof ApiResponseCodec>;\n\nexport type ApiResponse = t.OutputOf<typeof ApiResponseCodec>;\n","import * as t from 'io-ts';\n\nimport {\n  ERC20TokenTypeT,\n  ERC721TokenTypeT,\n  EthAddress,\n  ETHTokenTypeT,\n  FeeCodec,\n  HexadecimalString,\n  PositiveIntegerStringC,\n  PositiveNumberStringC,\n} from './runtime';\n\nconst FlatETHTokenCodec = t.interface({\n  type: ETHTokenTypeT,\n});\n\nconst FlatETHTokenWithAmountCodec = t.intersection([\n  FlatETHTokenCodec,\n  t.interface({ amount: PositiveNumberStringC }),\n]);\n\nexport type FlatETHToken = t.TypeOf<typeof FlatETHTokenCodec>;\n\nconst FlatERC721TokenCodec = t.interface({\n  type: ERC721TokenTypeT,\n  tokenId: t.string,\n  tokenAddress: EthAddress,\n});\n\nexport type FlatERC721Token = t.TypeOf<typeof FlatERC721TokenCodec>;\n\nconst FlatERC20TokenCodec = t.interface({\n  type: ERC20TokenTypeT,\n  tokenAddress: EthAddress,\n  symbol: t.string,\n});\n\nexport type FlatERC20Token = t.TypeOf<typeof FlatERC20TokenCodec>;\n\nconst FlatERC20TokenWithAmountCodec = t.intersection([\n  FlatERC20TokenCodec,\n  t.interface({ amount: PositiveNumberStringC }),\n]);\n\nexport const FlatTokenCodec = t.union([\n  FlatETHTokenCodec,\n  FlatERC721TokenCodec,\n  FlatERC20TokenCodec,\n]);\nexport type FlatToken = t.TypeOf<typeof FlatTokenCodec>;\nexport type FlatTokenTS = t.OutputOf<typeof FlatTokenCodec>;\n\nexport const FlatTokenWithAmountCodec = t.union([\n  FlatETHTokenWithAmountCodec,\n  FlatERC721TokenCodec,\n  FlatERC20TokenWithAmountCodec,\n]);\nexport type FlatTokenWithAmount = t.TypeOf<typeof FlatTokenWithAmountCodec>;\nexport type FlatTokenWithAmountTS = t.OutputOf<typeof FlatTokenWithAmountCodec>;\n\nconst TransferParamsCodec = t.intersection([\n  FlatTokenWithAmountCodec,\n  t.interface({\n    to: EthAddress,\n  }),\n]);\n\nexport const FlatTokenWithAmountAndToAddressCodec = t.intersection([\n  FlatTokenWithAmountCodec,\n  t.type({\n    toAddress: EthAddress,\n  }),\n]);\nexport type FlatTokenWithAmountAndToAddress = t.TypeOf<\n  typeof FlatTokenWithAmountAndToAddressCodec\n>;\nexport type FlatTokenWithAmountAndToAddressTS = t.OutputOf<\n  typeof FlatTokenWithAmountAndToAddressCodec\n>;\n\nconst TransferV2ParamsCodec = t.array(FlatTokenWithAmountAndToAddressCodec);\nexport type TransferV2ParamsCodecTS = t.OutputOf<typeof TransferV2ParamsCodec>;\n\nconst BuyParamsCodec = t.interface({\n  orderId: PositiveNumberStringC,\n});\n\nconst BuyV2ParamsCodec = t.intersection([\n  t.type({\n    orderIds: t.array(PositiveNumberStringC),\n  }),\n  t.partial({\n    /**\n     * List of taker fees applied to the trades.\n     *\n     * Link.buildUrl() needs to be updated if this field changes.\n     */\n    fees: t.array(FeeCodec),\n  }),\n]);\n\nconst SellParamsCodec = t.intersection([\n  t.type({\n    tokenId: t.string,\n    tokenAddress: EthAddress,\n  }),\n  t.partial({\n    amount: PositiveNumberStringC,\n    currencyAddress: EthAddress,\n    expirationTimestamp: PositiveIntegerStringC,\n\n    /**\n     * List of maker fees applied to the order.\n     *\n     * Link.buildUrl() needs to be updated if this field changes.\n     */\n    fees: t.array(FeeCodec),\n  }),\n]);\n\nconst CancelParamsCodec = t.intersection([\n  t.type({\n    orderId: PositiveNumberStringC,\n  }),\n  t.partial({\n    /**\n     * Supplied so the cancel amount can match the price listed in the marketplace.\n     *\n     * Link.buildUrl() needs to be updated if this field changes.\n     */\n    fees: t.array(FeeCodec),\n  }),\n]);\n\nexport enum BaseExchangeCurrency {\n  USD = 'usd',\n}\n\nexport enum ExchangeCurrency {\n  USDC = 'usdc_immutable',\n  ETH = 'eth_immutable',\n}\n\nexport const cryptoCurrencies = t.union([\n  t.literal(ExchangeCurrency.ETH),\n  t.literal(ExchangeCurrency.USDC),\n]);\n\nconst FiatToCryptoParamsCodec = t.partial({\n  cryptoCurrencies: t.array(cryptoCurrencies),\n});\n\nexport enum ProviderPreference {\n  METAMASK = 'metamask',\n  MAGIC_LINK = 'magic_link',\n  NONE = 'none',\n}\n\nconst SetupParamsCodec = t.partial({\n  providerPreference: t.union([\n    t.literal(ProviderPreference.METAMASK),\n    t.literal(ProviderPreference.MAGIC_LINK),\n    t.literal(ProviderPreference.NONE),\n  ]),\n});\n\nexport const FlexibleDepositCodec = t.union([\n  t.union([FlatETHTokenCodec, FlatERC20TokenCodec]),\n  t.interface({ amount: PositiveNumberStringC }),\n  t.undefined,\n]);\n\nexport namespace LinkParamsCodecs {\n  export const Setup = SetupParamsCodec;\n  export const History = t.interface({});\n  export const Buy = BuyParamsCodec;\n  export const BuyV2 = BuyV2ParamsCodec;\n  export const CompleteWithdrawal = FlatTokenCodec;\n  export const Deposit = FlatTokenWithAmountCodec;\n  export const FlexibleDeposit = t.union([Deposit, FlexibleDepositCodec]);\n  export const PrepareWithdrawal = FlatTokenWithAmountCodec;\n  export const Sell = SellParamsCodec;\n  export const Transfer = TransferParamsCodec;\n  export const TransferV2 = TransferV2ParamsCodec;\n  export const BatchNftTransfer = TransferV2ParamsCodec;\n  export const Cancel = CancelParamsCodec;\n  export const Claim = t.interface({});\n  export const FiatToCrypto = FiatToCryptoParamsCodec;\n  export const CryptoToFiat = FiatToCryptoParamsCodec;\n}\n\nexport namespace LinkParamsF {\n  export type Setup = t.TypeOf<typeof LinkParamsCodecs.Setup>;\n  export type History = t.TypeOf<typeof LinkParamsCodecs.History>;\n  export type Buy = t.TypeOf<typeof LinkParamsCodecs.Buy>;\n  export type BuyV2 = t.TypeOf<typeof LinkParamsCodecs.BuyV2>;\n  export type CompleteWithdrawal = t.TypeOf<\n    typeof LinkParamsCodecs.CompleteWithdrawal\n  >;\n  export type Deposit = t.TypeOf<typeof LinkParamsCodecs.Deposit>;\n  export type FlexibleDeposit = t.TypeOf<\n    typeof LinkParamsCodecs.FlexibleDeposit\n  >;\n  export type PrepareWithdrawal = t.TypeOf<\n    typeof LinkParamsCodecs.PrepareWithdrawal\n  >;\n  export type Sell = t.TypeOf<typeof LinkParamsCodecs.Sell>;\n  export type Transfer = t.TypeOf<typeof LinkParamsCodecs.Transfer>;\n  export type TransferV2 = t.TypeOf<typeof LinkParamsCodecs.TransferV2>;\n  export type Cancel = t.TypeOf<typeof LinkParamsCodecs.Cancel>;\n  export type Claim = t.TypeOf<typeof LinkParamsCodecs.Claim>;\n  export type FiatToCrypto = t.TypeOf<typeof LinkParamsCodecs.FiatToCrypto>;\n  export type CryptoToFiat = t.TypeOf<typeof LinkParamsCodecs.CryptoToFiat>;\n}\n\nexport namespace LinkParams {\n  export type Setup = t.OutputOf<typeof LinkParamsCodecs.Setup>;\n  export type History = t.OutputOf<typeof LinkParamsCodecs.History>;\n  export type Buy = t.OutputOf<typeof LinkParamsCodecs.Buy>;\n  export type BuyV2 = t.OutputOf<typeof LinkParamsCodecs.BuyV2>;\n  export type CompleteWithdrawal = t.OutputOf<\n    typeof LinkParamsCodecs.CompleteWithdrawal\n  >;\n  export type Deposit = t.OutputOf<typeof LinkParamsCodecs.Deposit>;\n  export type FlexibleDeposit = t.OutputOf<\n    typeof LinkParamsCodecs.FlexibleDeposit\n  >;\n  export type PrepareWithdrawal = t.OutputOf<\n    typeof LinkParamsCodecs.PrepareWithdrawal\n  >;\n  export type Sell = t.OutputOf<typeof LinkParamsCodecs.Sell>;\n  export type Transfer = t.OutputOf<typeof LinkParamsCodecs.Transfer>;\n  export type TransferV2 = t.OutputOf<typeof LinkParamsCodecs.TransferV2>;\n  export type BatchNftTransfer = t.OutputOf<\n    typeof LinkParamsCodecs.BatchNftTransfer\n  >;\n  export type Cancel = t.OutputOf<typeof LinkParamsCodecs.Cancel>;\n  export type Claim = t.OutputOf<typeof LinkParamsCodecs.Claim>;\n  export type FiatToCrypto = t.OutputOf<typeof LinkParamsCodecs.FiatToCrypto>;\n  export type CryptoToFiat = t.OutputOf<typeof LinkParamsCodecs.CryptoToFiat>;\n}\n\nconst SetupResultsCodec = t.interface({\n  address: EthAddress,\n  starkPublicKey: HexadecimalString,\n  ethNetwork: t.string,\n  providerPreference: t.string,\n});\n\nconst SuccessCodec = t.literal('success');\nconst ErrorCodec = t.literal('error');\n\nconst BuyV2ResultsCodec = t.interface({\n  result: t.record(\n    PositiveNumberStringC,\n    t.union([\n      t.type({ status: SuccessCodec }),\n      t.type({ status: ErrorCodec, message: t.string }),\n    ]),\n  ),\n});\n\nconst TransferV2TokenWithResult = t.intersection([\n  FlatTokenWithAmountAndToAddressCodec,\n  t.union([\n    t.type({ status: SuccessCodec, txId: t.Int }),\n    t.type({ status: ErrorCodec, message: t.string }),\n  ]),\n]);\n\nconst TransferV2ResultsCodec = t.interface({\n  result: t.array(TransferV2TokenWithResult),\n});\n\nconst PrepareWithdrawalCodec = t.interface({\n  withdrawalId: t.Int,\n});\n\nconst CompleteWithdrawalCodec = t.interface({\n  transactionId: t.string,\n});\n\nexport namespace LinkResultsCodecs {\n  export const Setup = SetupResultsCodec;\n  export const BuyV2 = BuyV2ResultsCodec;\n  export const TransferV2 = TransferV2ResultsCodec;\n  export const BatchNftTransfer = TransferV2ResultsCodec;\n  export const PrepareWithdrawal = PrepareWithdrawalCodec;\n  export const CompleteWithdrawal = CompleteWithdrawalCodec;\n}\n\nexport namespace LinkResultsF {\n  export type Setup = t.TypeOf<typeof LinkResultsCodecs.Setup>;\n  export type BuyV2 = t.TypeOf<typeof LinkResultsCodecs.BuyV2>;\n  export type TransferV2 = t.TypeOf<typeof LinkResultsCodecs.TransferV2>;\n  export type PrepareWithdrawal = t.TypeOf<\n    typeof LinkResultsCodecs.PrepareWithdrawal\n  >;\n  export type CompleteWithdrawal = t.TypeOf<\n    typeof LinkResultsCodecs.CompleteWithdrawal\n  >;\n}\n\nexport namespace LinkResults {\n  export type Setup = t.OutputOf<typeof LinkResultsCodecs.Setup>;\n  export type BuyV2 = t.OutputOf<typeof LinkResultsCodecs.BuyV2>;\n  export type TransferV2 = t.OutputOf<typeof LinkResultsCodecs.TransferV2>;\n  export type BatchNftTransfer = t.OutputOf<\n    typeof LinkResultsCodecs.BatchNftTransfer\n  >;\n  export type PrepareWithdrawal = t.OutputOf<\n    typeof LinkResultsCodecs.PrepareWithdrawal\n  >;\n  export type CompleteWithdrawal = t.OutputOf<\n    typeof LinkResultsCodecs.CompleteWithdrawal\n  >;\n}\n","/**\n * NOTE! This file has grown too large. Api types can be organised better by domain separation.\n * If working on an existing domain, please remember to clean up as you go.\n * Simply add a new domain file in this folder and update the index file.\n */\nimport * as t from 'io-ts';\nimport { DateFromISOString } from 'io-ts-types';\n\nimport {\n  ERC20TokenTypeT,\n  ERC721TokenTypeT,\n  EthAddress,\n  ETHTokenTypeT,\n  FeeCodec,\n  fromEnum,\n  HexadecimalString,\n  MintBodyCodec,\n  MintV2BodyCodec,\n  NonNegativeBigNumber,\n  OrderParamsCodec,\n  PositiveBigNumber,\n  PositiveIntegerC,\n  PositiveIntegerStringC,\n  TokenCodec,\n  TokenTypeCodec,\n  TransferParamsCodec,\n} from '../runtime';\nimport { BaseExchangeCurrency, cryptoCurrencies } from '../web';\n\nexport enum ImmutableOrderStatus {\n  created = 'created',\n  accepted = 'accepted',\n  partially_filled = 'partially_filled',\n  filled = 'filled',\n  cancelled = 'cancelled',\n  expired = 'expired',\n  pending = 'pending',\n  active = 'active',\n}\n\nexport const ImmutableOrderStatusCodec = fromEnum<ImmutableOrderStatus>(\n  'ImmutableOrderStatus',\n  ImmutableOrderStatus,\n);\n\nexport enum ImmutableTransactionStatus {\n  pending = 'pending',\n  accepted = 'accepted',\n  rejected = 'rejected',\n  confirmed = 'confirmed',\n  rolledBack = 'rolledBack',\n  withdrawn = 'withdrawn',\n  success = 'success',\n}\n\nexport const ImmutableTransactionStatusCodec =\n  fromEnum<ImmutableTransactionStatus>(\n    'ImmutableTransactionStatus',\n    ImmutableTransactionStatus,\n  );\n\nexport enum ImmutableAssetStatus {\n  imx = 'imx',\n  eth = 'eth',\n  preparing_withdrawal = 'preparing_withdrawal',\n  withdrawable = 'withdrawable',\n  burned = 'burned',\n}\n\nexport const ImmutableAssetStatusCodec = fromEnum<ImmutableAssetStatus>(\n  'ImmutableAssetStatus',\n  ImmutableAssetStatus,\n);\n\nexport enum ImmutableRollupStatus {\n  included = 'included',\n  confirmed = 'confirmed',\n}\n\nexport const ImmutableRollupStatusCodec = fromEnum<ImmutableRollupStatus>(\n  'ImmutableRollupStatus',\n  ImmutableRollupStatus,\n);\n\nexport enum ImmutableFeeType {\n  royalty = 'royalty',\n  ecosystem = 'ecosystem',\n  protocol = 'protocol',\n}\n\nexport const ImmutableFeeTypeCodec = fromEnum<ImmutableFeeType>(\n  'ImmutableFeeType',\n  ImmutableFeeType,\n);\n\nexport const ImmutableFeeInfoCodec = t.type({\n  fee_limit: PositiveBigNumber,\n  source_vault_id: t.Int,\n  asset_id: HexadecimalString,\n});\n\nexport namespace ImmutableMethodParams {\n  export const ImmutableRegisterParamsCodec = t.type({\n    etherKey: EthAddress,\n    starkPublicKey: HexadecimalString,\n  });\n\n  export const ImmutableSignParamsCodec = t.string;\n\n  export type ImmutableSignParams = t.TypeOf<typeof ImmutableSignParamsCodec>;\n  export type ImmutableRegisterParams = t.TypeOf<\n    typeof ImmutableRegisterParamsCodec\n  >;\n  export type ImmutableRegisterParamsTS = t.OutputOf<\n    typeof ImmutableRegisterParamsCodec\n  >;\n\n  export const ImmutableStarkRegisterParamsCodec = t.type({\n    etherKey: EthAddress,\n    starkPublicKey: HexadecimalString,\n    operatorSignature: t.string,\n  });\n  export type ImmutableStarkRegisterParams = t.TypeOf<\n    typeof ImmutableStarkRegisterParamsCodec\n  >;\n  export type ImmutableStarkRegisterParamsTS = t.OutputOf<\n    typeof ImmutableStarkRegisterParamsCodec\n  >;\n\n  export const ImmutableGetUserParamsCodec = t.type({\n    user: EthAddress,\n  });\n  export type ImmutableGetUserParams = t.TypeOf<\n    typeof ImmutableGetUserParamsCodec\n  >;\n  export type ImmutableGetUserParamsTS = t.OutputOf<\n    typeof ImmutableGetUserParamsCodec\n  >;\n\n  export const ImmutableGetSignableDepositParamsCodec = t.type({\n    user: EthAddress,\n    token: TokenCodec,\n    quantity: PositiveBigNumber,\n  });\n  export type ImmutableGetSignableDepositParams = t.TypeOf<\n    typeof ImmutableGetSignableDepositParamsCodec\n  >;\n  export type ImmutableGetSignableDepositParamsTS = t.OutputOf<\n    typeof ImmutableGetSignableDepositParamsCodec\n  >;\n\n  export const ImmutableGetSignableRegistrationParamsCodec = t.type({\n    etherKey: EthAddress,\n    starkPublicKey: HexadecimalString,\n  });\n  export type ImmutableGetSignableRegistrationParams = t.TypeOf<\n    typeof ImmutableGetSignableRegistrationParamsCodec\n  >;\n  export type ImmutableGetSignableRegistrationParamsTS = t.OutputOf<\n    typeof ImmutableGetSignableRegistrationParamsCodec\n  >;\n\n  export const ImmutableDepositCancelParamsCodec = t.type({\n    starkPublicKey: HexadecimalString,\n    token: TokenCodec,\n    vaultId: PositiveIntegerStringC,\n  });\n  export type ImmutableDepositCancelParams = t.TypeOf<\n    typeof ImmutableDepositCancelParamsCodec\n  >;\n\n  export const ImmutableDepositReclaimParamsCodec = t.type({\n    starkPublicKey: HexadecimalString,\n    token: TokenCodec,\n    vaultId: PositiveIntegerStringC,\n  });\n  export type ImmutableDepositReclaimParams = t.TypeOf<\n    typeof ImmutableDepositReclaimParamsCodec\n  >;\n\n  export const ImmutableWithdrawalParamsCodec = t.type({\n    starkPublicKey: HexadecimalString,\n    quantity: PositiveBigNumber,\n    token: TokenCodec,\n    vaultId: PositiveIntegerStringC,\n    nonce: PositiveIntegerStringC,\n  });\n  export type ImmutableWithdrawalParams = t.TypeOf<\n    typeof ImmutableWithdrawalParamsCodec\n  >;\n\n  export const ImmutableGetSignableWithdrawalParamsCodec = t.type({\n    user: EthAddress,\n    token: TokenCodec,\n    quantity: PositiveBigNumber,\n  });\n  export type ImmutableGetSignableWithdrawalParams = t.TypeOf<\n    typeof ImmutableGetSignableWithdrawalParamsCodec\n  >;\n\n  export const ImmutableTransferParamsCodec = t.type({\n    sender: EthAddress,\n    token: TokenCodec,\n    quantity: PositiveBigNumber,\n    receiver: EthAddress,\n  });\n  export type ImmutableTransferParams = t.TypeOf<\n    typeof ImmutableTransferParamsCodec\n  >;\n  export type ImmutableTransferParamsTS = t.OutputOf<\n    typeof ImmutableTransferParamsCodec\n  >;\n\n  export const SignableTransferV2Codec = t.type({\n    receiver: EthAddress,\n    token: TokenCodec,\n    amount: t.string,\n  });\n  export const ImmutableGetSignableTransferV2ParamsCodec = t.type({\n    sender_ether_key: EthAddress,\n    signable_requests: t.array(SignableTransferV2Codec),\n  });\n  export type ImmutableGetSignableTransferV2Params = t.TypeOf<\n    typeof ImmutableGetSignableTransferV2ParamsCodec\n  >;\n  export type ImmutableGetSignableTransferV2ParamsTS = t.OutputOf<\n    typeof ImmutableGetSignableTransferV2ParamsCodec\n  >;\n\n  export const ImmutableTransferRequestV2Codec = t.type({\n    stark_signature: t.string,\n    sender_vault_id: t.Int,\n    receiver_stark_key: HexadecimalString,\n    receiver_vault_id: t.Int,\n    amount: t.string,\n    asset_id: HexadecimalString,\n    expiration_timestamp: t.Int,\n    nonce: t.Int,\n  });\n  export type ImmutableTransferRequestV2 = t.TypeOf<\n    typeof ImmutableTransferRequestV2Codec\n  >;\n  export const ImmutableTransferRequestCodec = t.type({\n    token: TokenCodec,\n    amount: PositiveBigNumber,\n    receiver: EthAddress,\n  });\n  export type ImmutableTransferRequest = t.TypeOf<\n    typeof ImmutableTransferRequestCodec\n  >;\n  export type ImmutableTransferRequestTS = t.OutputOf<\n    typeof ImmutableTransferRequestCodec\n  >;\n\n  // These types are for the function params, not API request params\n  export const ImmutableTransferV2ParamsCodec = t.type({\n    sender_ether_key: EthAddress,\n    transfer_request: t.array(ImmutableTransferRequestCodec),\n  });\n  export type ImmutableTransferV2Params = t.TypeOf<\n    typeof ImmutableTransferV2ParamsCodec\n  >;\n  export type ImmutableTransferV2ParamsTS = t.OutputOf<\n    typeof ImmutableTransferV2ParamsCodec\n  >;\n\n  export const ImmutableBurnParamsCodec = t.type({\n    sender: EthAddress,\n    token: TokenCodec,\n    quantity: PositiveBigNumber,\n  });\n  export type ImmutableBurnParams = t.TypeOf<typeof ImmutableBurnParamsCodec>;\n  export type ImmutableBurnParamsTS = t.OutputOf<\n    typeof ImmutableBurnParamsCodec\n  >;\n\n  export const ImmutableOffchainMintParamsCodec = t.type({\n    mints: t.array(MintBodyCodec),\n  });\n  export type ImmutableOffchainMintParams = t.TypeOf<\n    typeof ImmutableOffchainMintParamsCodec\n  >;\n  export type ImmutableOffchainMintParamsTS = t.OutputOf<\n    typeof ImmutableOffchainMintParamsCodec\n  >;\n\n  // TODO: Remove V2 once V1 is deprecated\n  export const ImmutableOffchainMintV2ParamsCodec = t.array(MintV2BodyCodec);\n  export type ImmutableOffchainMintV2Params = t.TypeOf<\n    typeof ImmutableOffchainMintV2ParamsCodec\n  >;\n  export type ImmutableOffchainMintV2ParamsTS = t.OutputOf<\n    typeof ImmutableOffchainMintV2ParamsCodec\n  >;\n\n  export const ImmutableCreateOrderParamsCodec = t.type({\n    starkPublicKey: HexadecimalString,\n    sell: OrderParamsCodec,\n    buy: OrderParamsCodec,\n    nonce: PositiveIntegerStringC,\n    expirationTimestamp: PositiveIntegerC,\n    signature: t.string,\n  });\n  export type ImmutableCreateOrderParams = t.TypeOf<\n    typeof ImmutableCreateOrderParamsCodec\n  >;\n\n  export const ImmutableCancelOrderParamsCodec = t.Int;\n  export type ImmutableCancelOrderParamsTS = t.OutputOf<\n    typeof ImmutableCancelOrderParamsCodec\n  >;\n\n  export const ImmutableGetSignableOrderParamsCodec = t.intersection([\n    t.type({\n      user: EthAddress,\n      tokenSell: TokenCodec,\n      amountSell: PositiveBigNumber,\n      tokenBuy: TokenCodec,\n      amountBuy: PositiveBigNumber,\n    }),\n    t.partial({\n      include_fees: t.boolean,\n      /** Maker fees. */\n      fees: t.array(FeeCodec),\n      expiration_timestamp: PositiveIntegerC,\n    }),\n  ]);\n\n  export type ImmutableGetSignableOrderParams = t.TypeOf<\n    typeof ImmutableGetSignableOrderParamsCodec\n  >;\n  export type ImmutableGetSignableOrderParamsTS = t.OutputOf<\n    typeof ImmutableGetSignableOrderParamsCodec\n  >;\n\n  export const ImmutableGetSignableTradeParamsCodec = t.intersection([\n    t.type({\n      orderId: t.Int,\n    }),\n    ImmutableGetSignableOrderParamsCodec,\n  ]);\n  export type ImmutableGetSignableTradeParams = t.TypeOf<\n    typeof ImmutableGetSignableTradeParamsCodec\n  >;\n  export type ImmutableGetSignableTradeParamsTS = t.OutputOf<\n    typeof ImmutableGetSignableTradeParamsCodec\n  >;\n\n  // not used in sdk as we directly call create trade with the response from signable order\n  export const ImmutableCreateTradeParamsCodec = t.intersection([\n    t.type({\n      starkPublicKey: HexadecimalString,\n      sell: OrderParamsCodec,\n      buy: OrderParamsCodec,\n      nonce: PositiveIntegerStringC,\n      expirationTimestamp: PositiveIntegerStringC,\n      signature: t.string,\n      orderId: PositiveIntegerStringC,\n    }),\n    t.partial({ fee_info: ImmutableFeeInfoCodec }),\n  ]);\n  export type ImmutableCreateTradeParams = t.TypeOf<\n    typeof ImmutableCreateTradeParamsCodec\n  >;\n\n  export const ImmutableGetTokenParamsCodec = t.partial({\n    /**\n     * NOTE: 't.union([t.string, EthAddress])' is not used\n     * here because 'tokenAddress' value defaults to 'eth'.\n     */\n    tokenAddress: EthAddress,\n  });\n  export type ImmutableGetTokenParams = t.TypeOf<\n    typeof ImmutableGetTokenParamsCodec\n  >;\n  export type ImmutableGetTokenParamsTS = t.OutputOf<\n    typeof ImmutableGetTokenParamsCodec\n  >;\n\n  export const ImmutableListTokensParamsCodec = t.partial({\n    symbols: t.array(t.string),\n    cursor: t.string,\n  });\n  export type ImmutableListTokensParams = t.TypeOf<\n    typeof ImmutableListTokensParamsCodec\n  >;\n  export type ImmutableListTokensParamsTS = t.OutputOf<\n    typeof ImmutableListTokensParamsCodec\n  >;\n\n  // TODO: v1 endpoint to get balance, remove when it is deprecated\n  export const ImmutableGetBalancesParamsCodec = t.type({\n    user: EthAddress,\n  });\n  export type ImmutableGetBalancesParams = t.TypeOf<\n    typeof ImmutableGetBalancesParamsCodec\n  >;\n  export type ImmutableGetBalancesParamsTS = t.OutputOf<\n    typeof ImmutableGetBalanceParamsCodec\n  >;\n\n  export const ImmutableGetBalanceParamsCodec = t.type({\n    user: EthAddress,\n    tokenAddress: t.union([t.string, EthAddress]),\n  });\n  export type ImmutableGetBalanceParams = t.TypeOf<\n    typeof ImmutableGetBalanceParamsCodec\n  >;\n  export type ImmutableGetBalanceParamsTS = t.OutputOf<\n    typeof ImmutableGetBalanceParamsCodec\n  >;\n\n  export const ImmutableListBalancesParamsCodec = t.intersection([\n    t.type({ user: EthAddress }),\n    t.partial({ cursor: t.string, symbols: t.array(t.string) }),\n  ]);\n  export type ImmutableListBalancesParams = t.TypeOf<\n    typeof ImmutableListBalancesParamsCodec\n  >;\n  export type ImmutableListBalancesParamsTS = t.OutputOf<\n    typeof ImmutableListBalancesParamsCodec\n  >;\n\n  export const ImmutableGetVaultsParamsCodec = t.type({\n    starkPublicKey: HexadecimalString,\n  });\n  export type ImmutableGetVaultsParams = t.TypeOf<\n    typeof ImmutableGetVaultsParamsCodec\n  >;\n\n  export const ImmutableGetOrderParamsCodec = t.intersection([\n    t.type({\n      orderId: t.Int,\n    }),\n    t.partial({\n      include_fees: t.boolean,\n    }),\n    t.partial({\n      /** Modifies the order amount in the response to be inclusive of these fees. */\n      auxiliaryFees: t.array(FeeCodec),\n    }),\n  ]);\n  export type ImmutableGetOrderParams = t.TypeOf<\n    typeof ImmutableGetOrderParamsCodec\n  >;\n  export type ImmutableGetOrderParamsTS = t.OutputOf<\n    typeof ImmutableGetOrderParamsCodec\n  >;\n\n  export const ImmutableGetLastAvailableNonceParamsCodec = t.type({\n    starkPublicKey: HexadecimalString,\n  });\n  export type ImmutableGetLastAvailableNonceParams = t.TypeOf<\n    typeof ImmutableGetLastAvailableNonceParamsCodec\n  >;\n\n  export enum ImmutableSortOrder {\n    asc = 'asc',\n    desc = 'desc',\n  }\n\n  export const ImmutableSortOrderCodec = fromEnum<ImmutableSortOrder>(\n    'ImmutableSortOrder',\n    ImmutableSortOrder,\n  );\n\n  export const ImmutablePaginatedParamsCodec = t.partial({\n    order_by: t.string,\n    page_size: t.Int,\n    cursor: t.string,\n    direction: ImmutableSortOrderCodec,\n  });\n  export type ImmutablePaginatedParams = t.TypeOf<\n    typeof ImmutablePaginatedParamsCodec\n  >;\n  export type ImmutablePaginatedParamsTS = t.OutputOf<\n    typeof ImmutablePaginatedParamsCodec\n  >;\n\n  export const ImmutableGetOrdersParamsCodec = t.intersection([\n    ImmutablePaginatedParamsCodec,\n    t.partial({\n      user: EthAddress,\n      status: ImmutableOrderStatusCodec,\n      min_timestamp: t.string,\n      max_timestamp: t.string,\n      buy_token_type: TokenTypeCodec,\n      buy_token_id: t.string,\n      buy_token_address: t.union([EthAddress, t.string]),\n      buy_min_quantity: PositiveIntegerStringC,\n      buy_max_quantity: PositiveIntegerStringC,\n      buy_metadata: t.string,\n      sell_token_type: TokenTypeCodec,\n      sell_token_id: t.string,\n      sell_token_address: t.union([EthAddress, t.string]),\n      sell_token_name: t.string,\n      sell_min_quantity: PositiveIntegerStringC,\n      sell_max_quantity: PositiveIntegerStringC,\n      sell_metadata: t.string,\n      include_fees: t.boolean,\n      /** Modifies the order amounts in the response to be inclusive of these fees. */\n      auxiliaryFees: t.array(FeeCodec),\n    }),\n  ]);\n  export type ImmutableGetOrdersParams = t.TypeOf<\n    typeof ImmutableGetOrdersParamsCodec\n  >;\n  export type ImmutableGetOrdersParamsTS = t.OutputOf<\n    typeof ImmutableGetOrdersParamsCodec\n  >;\n\n  export const ImmutableGetAssetsParamsCodec = t.intersection([\n    ImmutablePaginatedParamsCodec,\n    t.partial({\n      user: EthAddress,\n      status: ImmutableAssetStatusCodec,\n      metadata: t.string,\n      collection: EthAddress,\n      name: t.string,\n      sell_orders: t.boolean,\n      buy_orders: t.boolean,\n      include_fees: t.boolean,\n      /** When sell_orders=true order amounts in the response are adjusted to be inclusive of these fees. */\n      auxiliaryFees: t.array(FeeCodec),\n    }),\n  ]);\n  export type ImmutableGetAssetsParams = t.TypeOf<\n    typeof ImmutableGetAssetsParamsCodec\n  >;\n  export type ImmutableGetAssetsParamsTS = t.OutputOf<\n    typeof ImmutableGetAssetsParamsCodec\n  >;\n\n  export const ImmutableGetCollectionsParamsCodec =\n    ImmutablePaginatedParamsCodec;\n  export type ImmutableGetCollectionsParams = t.TypeOf<\n    typeof ImmutableGetCollectionsParamsCodec\n  >;\n  export type ImmutableGetCollectionsParamsTS = t.OutputOf<\n    typeof ImmutableGetCollectionsParamsCodec\n  >;\n\n  export const ImmutableGetApplicationsParamsCodec =\n    ImmutablePaginatedParamsCodec;\n  export type ImmutableGetApplicationsParams = t.TypeOf<\n    typeof ImmutableGetApplicationsParamsCodec\n  >;\n  export type ImmutableGetApplicationsParamsTS = t.OutputOf<\n    typeof ImmutableGetApplicationsParamsCodec\n  >;\n\n  export const ImmutableGetTransactionParamsCodec = t.intersection([\n    ImmutablePaginatedParamsCodec,\n    t.partial({\n      user: EthAddress,\n      receiver: EthAddress,\n      status: ImmutableTransactionStatusCodec,\n      rollup_status: ImmutableRollupStatusCodec,\n      min_timestamp: t.string,\n      max_timestamp: t.string,\n      token_type: TokenTypeCodec,\n      token_id: t.string,\n      token_address: EthAddress,\n      min_quantity: PositiveIntegerStringC,\n      max_quantity: PositiveIntegerStringC,\n      metadata: t.string,\n    }),\n  ]);\n  export type ImmutableGetTransactionParams = t.TypeOf<\n    typeof ImmutableGetTransactionParamsCodec\n  >;\n  export type ImmutableGetTransactionParamsTS = t.OutputOf<\n    typeof ImmutableGetTransactionParamsCodec\n  >;\n\n  export const ImmutableGetDepositsParamsCodec =\n    ImmutableGetTransactionParamsCodec;\n  export type ImmutableGetDepositsParams = t.TypeOf<\n    typeof ImmutableGetDepositsParamsCodec\n  >;\n  export type ImmutableGetDepositsParamsTS = t.OutputOf<\n    typeof ImmutableGetDepositsParamsCodec\n  >;\n\n  export const ImmutableGetWithdrawalsParamsCodec = t.intersection([\n    ImmutableGetTransactionParamsCodec,\n    t.partial({\n      withdrawn_to_wallet: t.boolean,\n    }),\n  ]);\n  export type ImmutableGetWithdrawalsParams = t.TypeOf<\n    typeof ImmutableGetWithdrawalsParamsCodec\n  >;\n  export type ImmutableGetWithdrawalsParamsTS = t.OutputOf<\n    typeof ImmutableGetWithdrawalsParamsCodec\n  >;\n\n  export const ImmutableGetTransfersParamsCodec =\n    ImmutableGetTransactionParamsCodec;\n  export type ImmutableGetTransfersParams = t.TypeOf<\n    typeof ImmutableGetTransfersParamsCodec\n  >;\n  export type ImmutableGetTransfersParamsTS = t.OutputOf<\n    typeof ImmutableGetTransfersParamsCodec\n  >;\n\n  export const ImmutableGetBurnsParamsCodec =\n    ImmutableGetTransactionParamsCodec;\n  export type ImmutableGetBurnsParams = t.TypeOf<\n    typeof ImmutableGetBurnsParamsCodec\n  >;\n  export type ImmutableGetBurnsParamsTS = t.OutputOf<\n    typeof ImmutableGetBurnsParamsCodec\n  >;\n\n  export const ImmutableGetExchangesParamsCodec = t.intersection([\n    ImmutablePaginatedParamsCodec,\n    t.partial({\n      wallet_address: EthAddress,\n      status: t.string,\n      exchange: t.string,\n      transfer_id: t.string,\n      id: t.number,\n    }),\n  ]);\n  export type ImmutableGetExchangesParams = t.TypeOf<\n    typeof ImmutableGetExchangesParamsCodec\n  >;\n  export type ImmutableGetExchangesParamsTS = t.OutputOf<\n    typeof ImmutableGetExchangesParamsCodec\n  >;\n\n  export const ImmutableGetTradesParamsCodec = t.intersection([\n    ImmutablePaginatedParamsCodec,\n    t.partial({\n      status: ImmutableTransactionStatusCodec,\n      min_timestamp: t.string,\n      max_timestamp: t.string,\n    }),\n    t.partial({\n      party_a_token_type: TokenTypeCodec,\n      party_a_token_address: EthAddress,\n      party_a_token_id: t.string,\n      party_b_token_type: TokenTypeCodec,\n      party_b_token_address: EthAddress,\n      party_b_token_id: t.string,\n    }),\n  ]);\n  export type ImmutableGetTradesParams = t.TypeOf<\n    typeof ImmutableGetTradesParamsCodec\n  >;\n  export type ImmutableGetTradesParamsTS = t.OutputOf<\n    typeof ImmutableGetTradesParamsCodec\n  >;\n\n  export const ImmutableGetAssetParamsCodec = t.intersection([\n    t.type({\n      address: EthAddress,\n      id: t.string,\n    }),\n    t.partial({ include_fees: t.boolean }),\n  ]);\n  export type ImmutableGetAssetParams = t.TypeOf<\n    typeof ImmutableGetAssetParamsCodec\n  >;\n  export type ImmutableGetAssetParamsTS = t.OutputOf<\n    typeof ImmutableGetAssetParamsCodec\n  >;\n\n  export const ImmutableGetCollectionParamsCodec = t.type({\n    address: HexadecimalString,\n  });\n  export type ImmutableGetCollectionParams = t.TypeOf<\n    typeof ImmutableGetCollectionParamsCodec\n  >;\n  export type ImmutableGetCollectionParamsTS = t.OutputOf<\n    typeof ImmutableGetCollectionParamsCodec\n  >;\n\n  export const ImmutableGetDepositParamsCodec = t.type({\n    id: t.Int,\n  });\n  export type ImmutableGetDepositParams = t.TypeOf<\n    typeof ImmutableGetDepositParamsCodec\n  >;\n  export type ImmutableGetDepositParamsTS = t.OutputOf<\n    typeof ImmutableGetDepositParamsCodec\n  >;\n\n  export const ImmutableGetTransferParamsCodec = t.type({\n    id: t.Int,\n  });\n  export type ImmutableGetTransferParams = t.TypeOf<\n    typeof ImmutableGetTransferParamsCodec\n  >;\n  export type ImmutableGetTransferParamsTS = t.OutputOf<\n    typeof ImmutableGetTransferParamsCodec\n  >;\n\n  export const ImmutableGetBurnParamsCodec = ImmutableGetTransferParamsCodec;\n  export type ImmutableGetBurnParams = t.TypeOf<\n    typeof ImmutableGetBurnParamsCodec\n  >;\n  export type ImmutableGetBurnParamsTS = t.OutputOf<\n    typeof ImmutableGetBurnParamsCodec\n  >;\n\n  export const ImmutableGetWithdrawalParamsCodec = t.type({\n    id: t.Int,\n  });\n  export type ImmutableGetWithdrawalParams = t.TypeOf<\n    typeof ImmutableGetWithdrawalParamsCodec\n  >;\n  export type ImmutableGetWithdrawalParamsTS = t.OutputOf<\n    typeof ImmutableGetWithdrawalParamsCodec\n  >;\n\n  export const ImmutableGetTradeParamsCodec = t.type({\n    id: t.Int,\n  });\n  export type ImmutableGetTradeParams = t.TypeOf<\n    typeof ImmutableGetTradeParamsCodec\n  >;\n  export type ImmutableGetTradeParamsTS = t.OutputOf<\n    typeof ImmutableGetTradeParamsCodec\n  >;\n\n  export const ImmutableStarkApproveNFTParamsCodec = t.type({\n    tokenAddress: EthAddress,\n    tokenId: t.string,\n  });\n  export type ImmutableStarkApproveNFTParams = t.TypeOf<\n    typeof ImmutableStarkApproveNFTParamsCodec\n  >;\n  export type ImmutableStarkApproveNFTParamsTS = t.OutputOf<\n    typeof ImmutableStarkApproveNFTParamsCodec\n  >;\n\n  export const ImmutableStarkApproveERC20ParamsCodec = t.type({\n    tokenAddress: EthAddress,\n    amount: PositiveBigNumber,\n  });\n  export type ImmutableStarkApproveERC20Params = t.TypeOf<\n    typeof ImmutableStarkApproveERC20ParamsCodec\n  >;\n  export type ImmutableStarkApproveERC20ParamsTS = t.OutputOf<\n    typeof ImmutableStarkApproveERC20ParamsCodec\n  >;\n\n  export const ImmutableMintNFTParamsCodec = t.type({\n    tokenAddress: EthAddress,\n  });\n  export type ImmutableMintNFTParams = t.TypeOf<\n    typeof ImmutableMintNFTParamsCodec\n  >;\n  export type ImmutableMintNFTParamsTS = t.OutputOf<\n    typeof ImmutableMintNFTParamsCodec\n  >;\n\n  export const ImmutablePrepareWithdrawalParamsCodec = t.type({\n    user: EthAddress,\n    token: TokenCodec,\n    quantity: PositiveBigNumber,\n  });\n  export type ImmutablePrepareWithdrawalParams = t.TypeOf<\n    typeof ImmutablePrepareWithdrawalParamsCodec\n  >;\n  export type ImmutablePrepareWithdrawalParamsTS = t.OutputOf<\n    typeof ImmutablePrepareWithdrawalParamsCodec\n  >;\n\n  export const ImmutableCompleteWithdrawalParamsCodec = t.type({\n    starkPublicKey: HexadecimalString,\n    token: TokenCodec,\n  });\n  export type ImmutableCompleteWithdrawalParams = t.TypeOf<\n    typeof ImmutableCompleteWithdrawalParamsCodec\n  >;\n  export type ImmutableCompleteWithdrawalParamsTS = t.OutputOf<\n    typeof ImmutableCompleteWithdrawalParamsCodec\n  >;\n\n  export const ImmutableGetMintableTokenParamsCodec = t.type({\n    tokenAddress: t.string,\n    tokenId: t.string,\n  });\n  export type ImmutableGetMintableTokenParams = t.TypeOf<\n    typeof ImmutableGetMintableTokenParamsCodec\n  >;\n  export type ImmutableGetMintableTokenParamsTS = t.OutputOf<\n    typeof ImmutableGetMintableTokenParamsCodec\n  >;\n}\n\nexport namespace StarkMethodParams {\n  export const StarkAccountParamsCodec = t.type({\n    layer: t.string,\n    application: t.string,\n    index: PositiveIntegerStringC,\n  });\n  export type StarkAccountParams = t.TypeOf<typeof StarkAccountParamsCodec>;\n\n  export const StarkRegisterParamsCodec = t.type({\n    contractAddress: EthAddress,\n    etherKey: EthAddress,\n    starkPublicKey: HexadecimalString,\n    operatorSignature: t.string,\n  });\n  export type StarkRegisterParams = t.TypeOf<typeof StarkRegisterParamsCodec>;\n  export type StarkRegisterParamsTS = t.OutputOf<\n    typeof StarkRegisterParamsCodec\n  >;\n\n  export const StarkDepositParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    quantity: PositiveBigNumber,\n    quantizedAmount: PositiveBigNumber, // only used for ERC20s\n    assetId: HexadecimalString,\n    token: TokenCodec,\n    vaultId: PositiveIntegerStringC,\n  });\n  export type StarkDepositParams = t.TypeOf<typeof StarkDepositParamsCodec>;\n  export type StarkDepositParamsTS = t.OutputOf<typeof StarkDepositParamsCodec>;\n\n  export const StarkDepositCancelParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    token: TokenCodec,\n    vaultId: PositiveIntegerStringC,\n  });\n  export type StarkDepositCancelParams = t.TypeOf<\n    typeof StarkDepositCancelParamsCodec\n  >;\n\n  export const StarkDepositReclaimParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    token: TokenCodec,\n    vaultId: PositiveIntegerStringC,\n  });\n  export type StarkDepositReclaimParams = t.TypeOf<\n    typeof StarkDepositReclaimParamsCodec\n  >;\n\n  export const StarkTransferParamsCodec = t.type({\n    from: TransferParamsCodec,\n    to: TransferParamsCodec,\n    token: TokenCodec,\n    quantity: PositiveBigNumber,\n    nonce: PositiveIntegerStringC,\n    expirationTimestamp: PositiveIntegerStringC,\n  });\n  export type StarkTransferParams = t.TypeOf<typeof StarkTransferParamsCodec>;\n\n  export const StarkCreateOrderParamsCodec = t.type({\n    starkPublicKey: HexadecimalString,\n    sell: OrderParamsCodec,\n    buy: OrderParamsCodec,\n    nonce: PositiveIntegerStringC,\n    expirationTimestamp: PositiveIntegerStringC,\n  });\n  export type StarkCreateOrderParams = t.TypeOf<\n    typeof StarkCreateOrderParamsCodec\n  >;\n\n  export const StarkWithdrawalParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    token: TokenCodec,\n  });\n  export type StarkWithdrawalParams = t.TypeOf<\n    typeof StarkWithdrawalParamsCodec\n  >;\n\n  export const StarkFullWithdrawalParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    vaultId: PositiveIntegerStringC,\n  });\n  export type StarkFullWithdrawalParams = t.TypeOf<\n    typeof StarkFullWithdrawalParamsCodec\n  >;\n\n  export const StarkFreezeParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    vaultId: PositiveIntegerStringC,\n  });\n  export type StarkFreezeParams = t.TypeOf<typeof StarkFreezeParamsCodec>;\n\n  export const StarkVerifyEscapeParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    proof: t.array(t.string),\n  });\n  export type StarkVerifyEscapeParams = t.TypeOf<\n    typeof StarkVerifyEscapeParamsCodec\n  >;\n\n  export const StarkEscapeParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    vaultId: PositiveIntegerStringC,\n    token: TokenCodec,\n    quantity: PositiveBigNumber,\n  });\n  export type StarkEscapeParams = t.TypeOf<typeof StarkEscapeParamsCodec>;\n\n  export const StarkRegisterTokenParamsCodec = t.type({\n    contractAddress: EthAddress,\n    token: TokenCodec,\n  });\n  export type StarkRegisterTokenParams = t.TypeOf<\n    typeof StarkRegisterTokenParamsCodec\n  >;\n\n  export const StarkGetEthKeyParamsCodec = t.type({\n    contractAddress: EthAddress,\n    user: EthAddress,\n  });\n  export type StarkGetEthKeyParams = t.TypeOf<typeof StarkGetEthKeyParamsCodec>;\n\n  export const StarkGetDepositBalanceParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    token: TokenCodec,\n    vaultId: PositiveIntegerStringC,\n  });\n  export type StarkGetDepositBalanceParams = t.TypeOf<\n    typeof StarkGetDepositBalanceParamsCodec\n  >;\n\n  export const StarkGetWithdrawalBalanceParamsCodec = t.type({\n    contractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    token: TokenCodec,\n  });\n  export type StarkGetWithdrawalBalanceParams = t.TypeOf<\n    typeof StarkGetWithdrawalBalanceParamsCodec\n  >;\n\n  export const StarkMintNFTParamsCodec = t.type({\n    tokenAddress: EthAddress,\n    to: EthAddress,\n    tokenId: t.string,\n    tokenUri: t.string,\n  });\n  export type StarkMintNFTParams = t.TypeOf<typeof StarkMintNFTParamsCodec>;\n\n  export const StarkApproveNFTParamsCodec = t.type({\n    contractAddress: EthAddress,\n    tokenAddress: EthAddress,\n    tokenId: t.string,\n  });\n  export type StarkApproveNFTParams = t.TypeOf<\n    typeof StarkApproveNFTParamsCodec\n  >;\n  export type StarkApproveNFTParamsTS = t.OutputOf<\n    typeof StarkApproveNFTParamsCodec\n  >;\n\n  export const StarkApproveERC20ParamsCodec = t.type({\n    contractAddress: EthAddress,\n    amount: PositiveBigNumber,\n    tokenAddress: EthAddress,\n  });\n  export type StarkApproveERC20Params = t.TypeOf<\n    typeof StarkApproveERC20ParamsCodec\n  >;\n  export type StarkApproveERC20ParamsTS = t.OutputOf<\n    typeof StarkApproveNFTParamsCodec\n  >;\n\n  export const StarkSetupNFTParamsCodec = t.type({\n    tokenAddress: EthAddress,\n    contractAddress: EthAddress,\n    to: EthAddress,\n    tokenId: t.string,\n    tokenUri: t.string,\n  });\n  export type StarkSetupNFTParams = t.TypeOf<typeof StarkSetupNFTParamsCodec>;\n}\n\nexport namespace RegistrationMethodParams {\n  export const RegisterAndDepositParamsCodec = t.type({\n    registrationContractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    quantity: PositiveBigNumber,\n    quantizedAmount: PositiveBigNumber, // only used for ERC20s\n    assetId: HexadecimalString,\n    token: TokenCodec,\n    vaultId: PositiveIntegerStringC,\n    etherKey: EthAddress,\n    operatorSignature: t.string,\n  });\n  export type RegisterAndDepositParams = t.TypeOf<\n    typeof RegisterAndDepositParamsCodec\n  >;\n  export type RegisterAndDepositParamsTS = t.OutputOf<\n    typeof RegisterAndDepositParamsCodec\n  >;\n\n  export const RegisterAndWithdrawParamsCodec = t.type({\n    registrationContractAddress: EthAddress,\n    starkPublicKey: HexadecimalString,\n    token: TokenCodec,\n    etherKey: EthAddress,\n    operatorSignature: t.string,\n  });\n  export type RegisterAndWithdrawParams = t.TypeOf<\n    typeof RegisterAndWithdrawParamsCodec\n  >;\n  export type RegisterAndWithdrawParamsTS = t.OutputOf<\n    typeof RegisterAndWithdrawParamsCodec\n  >;\n}\nexport namespace ImmutableMethodResults {\n  export const ImmutableSignResultCodec = t.type({\n    ethSignature: t.string,\n  });\n  export type ImmutableSignResult = t.TypeOf<typeof ImmutableSignResultCodec>;\n  export const ImmutableRegisterResultCodec = t.type({\n    tx_hash: t.string,\n  });\n  export type ImmutableRegisterResult = t.TypeOf<\n    typeof ImmutableRegisterResultCodec\n  >;\n\n  export const ImmutableGetUserResultCodec = t.type({\n    accounts: t.array(HexadecimalString),\n  });\n\n  export type ImmutableGetUserResult = t.TypeOf<\n    typeof ImmutableGetUserResultCodec\n  >;\n  export type ImmutableGetUserResultTS = t.OutputOf<\n    typeof ImmutableGetUserResultCodec\n  >;\n\n  export const ImmutableGetSignableDepositResultCodec = t.type({\n    stark_key: HexadecimalString,\n    vault_id: t.Int,\n    amount: PositiveBigNumber,\n    asset_id: HexadecimalString,\n    nonce: t.Int,\n  });\n  export type ImmutableGetSignableDepositResult = t.TypeOf<\n    typeof ImmutableGetSignableDepositResultCodec\n  >;\n\n  export const ImmutableGetSignableRegistrationResultCodec = t.type({\n    operator_signature: t.string,\n  });\n  export type ImmutableGetSignableRegistrationResult = t.TypeOf<\n    typeof ImmutableGetSignableRegistrationResultCodec\n  >;\n\n  export const ImmutableDepositResultCodec = t.type({\n    deposit_id: t.Int,\n    status: t.string,\n    time: t.Int,\n  });\n  export type ImmutableDepositResult = t.TypeOf<\n    typeof ImmutableDepositResultCodec\n  >;\n\n  export const ImmutableGetSignableWithdrawalResultCodec = t.type({\n    stark_key: HexadecimalString,\n    vault_id: t.Int,\n    amount: PositiveBigNumber,\n    asset_id: HexadecimalString,\n    nonce: t.Int,\n  });\n  export type ImmutableGetSignableWithdrawalResult = t.TypeOf<\n    typeof ImmutableGetSignableWithdrawalResultCodec\n  >;\n\n  export const ImmutableWithdrawalResultCodec = t.type({\n    withdrawal_id: t.Int,\n    status: t.string,\n    time: t.Int,\n  });\n  export type ImmutableWithdrawalResult = t.TypeOf<\n    typeof ImmutableWithdrawalResultCodec\n  >;\n\n  export const ImmutableGetSignableTransferResultCodec = t.type({\n    sender_stark_key: HexadecimalString,\n    sender_vault_id: t.Int,\n    receiver_stark_key: HexadecimalString,\n    receiver_vault_id: t.Int,\n    amount: PositiveBigNumber,\n    asset_id: HexadecimalString,\n    expiration_timestamp: t.Int,\n    nonce: t.Int,\n  });\n  export type ImmutableGetSignableTransferResult = t.TypeOf<\n    typeof ImmutableGetSignableTransferResultCodec\n  >;\n\n  export const ImmutableSignableTransferV2Codec = t.type({\n    nonce: t.Int,\n    sender_vault_id: t.Int,\n    receiver_vault_id: t.Int,\n    receiver_stark_key: HexadecimalString,\n    amount: PositiveBigNumber, // t.string,\n    asset_id: HexadecimalString,\n    expiration_timestamp: t.Int,\n    token: TokenCodec,\n  });\n  export type ImmutableSignableTransferV2 = t.TypeOf<\n    typeof ImmutableSignableTransferV2Codec\n  >;\n\n  export const ImmutableGetSignableTransferV2ResultCodec = t.type({\n    sender_stark_key: HexadecimalString,\n    signable_responses: t.array(ImmutableSignableTransferV2Codec),\n  });\n  export type ImmutableGetSignableTransferV2Result = t.TypeOf<\n    typeof ImmutableGetSignableTransferV2ResultCodec\n  >;\n  export type ImmutableGetSignableTransferV2ResultTS = t.OutputOf<\n    typeof ImmutableGetSignableTransferV2ResultCodec\n  >;\n\n  export const ImmutableTransferResultCodec = t.type({\n    transfer_id: t.Int,\n    status: t.string,\n    time: t.Int,\n    sent_signature: t.string,\n  });\n  export type ImmutableTransferResult = t.TypeOf<\n    typeof ImmutableTransferResultCodec\n  >;\n  export type ImmutableBurnResult = t.TypeOf<\n    typeof ImmutableTransferResultCodec\n  >;\n\n  export const ImmutableTransferV2ResultCodec = t.type({\n    transfer_ids: t.array(t.Int),\n  });\n  export type ImmutableTransferV2Result = t.TypeOf<\n    typeof ImmutableTransferV2ResultCodec\n  >;\n  export type ImmutableTransferV2ResultTS = t.OutputOf<\n    typeof ImmutableTransferV2ResultCodec\n  >;\n\n  export const ImmutableOffchainMintV2ResultCodec = t.type({\n    token_id: t.string,\n    contract_address: t.string,\n    tx_id: t.Int,\n  });\n  export type ImmutableOffchainMintV2Result = t.TypeOf<\n    typeof ImmutableOffchainMintV2ResultCodec\n  >;\n  export type ImmutableOffchainMintV2ResultTS = t.OutputOf<\n    typeof ImmutableOffchainMintV2ResultCodec\n  >;\n\n  export const ImmutableOffchainMintV2ResultsCodec = t.type({\n    results: t.array(ImmutableOffchainMintV2ResultCodec),\n  });\n  export type ImmutableOffchainMintV2Results = t.TypeOf<\n    typeof ImmutableOffchainMintV2ResultsCodec\n  >;\n  export type ImmutableOffchainMintV2ResultsTS = t.OutputOf<\n    typeof ImmutableOffchainMintV2ResultsCodec\n  >;\n\n  export const ImmutableOffchainMintResultCodec = t.type({\n    token_id: t.string,\n    client_token_id: t.string,\n    tx_id: t.Int,\n  });\n  export type ImmutableOffchainMintResult = t.TypeOf<\n    typeof ImmutableOffchainMintResultCodec\n  >;\n  export type ImmutableOffchainMintResultTS = t.OutputOf<\n    typeof ImmutableOffchainMintResultCodec\n  >;\n\n  export const ImmutableOffchainMintResultsCodec = t.type({\n    results: t.array(ImmutableOffchainMintResultCodec),\n  });\n  export type ImmutableOffchainMintResults = t.TypeOf<\n    typeof ImmutableOffchainMintResultsCodec\n  >;\n  export type ImmutableOffchainMintResultsTS = t.OutputOf<\n    typeof ImmutableOffchainMintResultsCodec\n  >;\n\n  export const ImmutableMintFeeResultCodec = t.type({\n    type: fromEnum<ImmutableFeeType.royalty>(\n      'ImmutableFeeType',\n      ImmutableFeeType,\n    ),\n    percentage: t.number,\n    address: EthAddress,\n  });\n\n  export const ImmutableGetSignableOrderResultCodec = t.intersection([\n    t.type({\n      stark_key: HexadecimalString,\n      nonce: t.Int,\n      expiration_timestamp: t.Int,\n      amount_sell: PositiveBigNumber,\n      asset_id_sell: HexadecimalString,\n      vault_id_sell: t.Int,\n      amount_buy: PositiveBigNumber,\n      asset_id_buy: HexadecimalString,\n      vault_id_buy: t.Int,\n    }),\n    t.partial({ fee_info: ImmutableFeeInfoCodec }),\n  ]);\n  export type ImmutableGetSignableOrderResult = t.TypeOf<\n    typeof ImmutableGetSignableOrderResultCodec\n  >;\n\n  export const ImmutableCreateOrderResultCodec = t.type({\n    order_id: t.Int,\n    status: t.string,\n  });\n  export type ImmutableCreateOrderResult = t.TypeOf<\n    typeof ImmutableCreateOrderResultCodec\n  >;\n\n  export const ImmutableCancelOrderResultCodec = t.type({\n    order_id: t.Int,\n    status: t.string,\n  });\n  export type ImmutableCancelOrderResult = t.TypeOf<\n    typeof ImmutableCancelOrderResultCodec\n  >;\n\n  export const ImmutableCollectionDetailsCodec = t.type({\n    name: t.string,\n    icon_url: t.union([t.null, t.string]),\n  });\n\n  export type ImmutableCollectionDetails = t.TypeOf<\n    typeof ImmutableCollectionDetailsCodec\n  >;\n\n  export const ImmutableCollectionCodec = t.type({\n    name: t.string,\n    icon_url: t.union([t.null, t.string]),\n    metadata_api_url: t.union([t.null, t.string]),\n  });\n\n  export type ImmutableCollection = t.TypeOf<typeof ImmutableCollectionCodec>;\n\n  export const ImmutablePropertiesCodec = t.type({\n    name: t.union([t.null, t.string]),\n    image_url: t.union([t.null, t.string]),\n    collection: ImmutableCollectionDetailsCodec,\n  });\n  export type ImmutableProperties = t.TypeOf<typeof ImmutablePropertiesCodec>;\n\n  export const ImmutableETHTokenCodec = t.interface({\n    type: ETHTokenTypeT,\n    data: t.type({\n      quantity: PositiveBigNumber,\n      // @TODO: Cannot add this type because the 'decimals' incorrectly returned\n      // by the API can be '0' (https://immutable.atlassian.net/browse/IMX-3556).\n      // decimals: PositiveIntegerC,\n      decimals: t.Int,\n    }),\n  });\n  export type ImmutableETHToken = t.TypeOf<typeof ImmutableETHTokenCodec>;\n  export type ImmutableETHTokenTS = t.OutputOf<typeof ImmutableETHTokenCodec>;\n\n  export const ImmutableERC20TokenCodec = t.interface({\n    type: ERC20TokenTypeT,\n    data: t.type({\n      token_address: EthAddress,\n      quantity: PositiveBigNumber,\n      // @TODO: Cannot add this type because the 'decimals' incorrectly returned\n      // by the API can be '0' (https://immutable.atlassian.net/browse/IMX-3556).\n      // decimals: PositiveIntegerC,\n      decimals: t.Int,\n    }),\n  });\n\n  export type ImmutableERC20Token = t.TypeOf<typeof ImmutableERC20TokenCodec>;\n  export type ImmutableERC20TokenTS = t.OutputOf<\n    typeof ImmutableERC20TokenCodec\n  >;\n\n  export const ImmutableERC721TokenCodec = t.type({\n    type: ERC721TokenTypeT,\n    data: t.intersection([\n      t.type({\n        token_id: t.string,\n        token_address: EthAddress,\n        quantity: PositiveBigNumber,\n      }),\n      t.partial({\n        properties: ImmutablePropertiesCodec,\n      }),\n    ]),\n  });\n\n  export type ImmutableERC721Token = t.TypeOf<typeof ImmutableERC721TokenCodec>;\n  export type ImmutableERC721TokenTS = t.OutputOf<\n    typeof ImmutableERC721TokenCodec\n  >;\n\n  export const ImmutableTokenCodec = t.union([\n    ImmutableETHTokenCodec,\n    ImmutableERC20TokenCodec,\n    ImmutableERC721TokenCodec,\n  ]);\n  export type ImmutableToken = t.TypeOf<typeof ImmutableTokenCodec>;\n  export type ImmutableTokenTS = t.OutputOf<typeof ImmutableTokenCodec>;\n\n  export const ImmutablePaginatedResultCodec = t.intersection([\n    t.type({ cursor: t.string }),\n    t.partial({ remaining: t.Int }),\n  ]);\n  export type ImmutablePaginatedResult = t.TypeOf<\n    typeof ImmutablePaginatedResultCodec\n  >;\n  export type ImmutablePaginatedResultTS = t.OutputOf<\n    typeof ImmutablePaginatedResultCodec\n  >;\n\n  const FeeData = t.intersection([\n    t.partial({ contract_address: t.string }), // `json:\"contract_address,omitempty\" db:\"token_address\"`\n    t.type({ decimals: t.number }),\n  ]);\n\n  const FeeToken = t.type({\n    type: t.string,\n    data: FeeData,\n  });\n\n  export const ImmutableOrderFeeInfo = t.type({\n    type: ImmutableFeeTypeCodec,\n    address: t.string,\n    token: FeeToken,\n    amount: t.string,\n  });\n\n  export const ImmutableGetOrderResultCodec = t.intersection([\n    t.type({\n      order_id: t.Int,\n      status: ImmutableOrderStatusCodec,\n      user: EthAddress,\n      sell: ImmutableTokenCodec,\n      buy: ImmutableTokenCodec,\n      amount_sold: t.union([PositiveBigNumber, t.null]),\n      expiration_timestamp: DateFromISOString,\n      timestamp: DateFromISOString,\n    }),\n    t.partial({ fees: t.union([t.array(ImmutableOrderFeeInfo), t.null]) }),\n  ]);\n\n  export type ImmutableGetOrderResult = t.TypeOf<\n    typeof ImmutableGetOrderResultCodec\n  >;\n  export type ImmutableGetOrderResultTS = t.OutputOf<\n    typeof ImmutableGetOrderResultCodec\n  >;\n\n  export const ImmutableGetOrdersResultCodec = t.intersection([\n    t.type({\n      result: t.array(ImmutableGetOrderResultCodec),\n    }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableGetOrdersResult = t.TypeOf<\n    typeof ImmutableGetOrdersResultCodec\n  >;\n\n  export const ImmutableApplicationCodec = t.type({\n    id: t.string,\n    name: t.string,\n    created_at: t.string,\n  });\n\n  export type ImmutableApplication = t.TypeOf<typeof ImmutableApplicationCodec>;\n\n  export const ImmutableGetApplicationsResultCodec = t.intersection([\n    t.type({\n      result: t.array(ImmutableApplicationCodec),\n    }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableGetApplicationsResult = t.TypeOf<\n    typeof ImmutableGetApplicationsResultCodec\n  >;\n\n  export const ImmutableSellOrderCodec = t.intersection([\n    t.type({\n      order_id: t.number,\n      user: t.string,\n      buy_quantity: PositiveBigNumber,\n    }),\n    t.partial({\n      buy_decimals: t.number,\n      status: ImmutableOrderStatusCodec,\n      contract_address: t.string,\n    }),\n  ]);\n\n  export type ImmutableSellOrder = t.TypeOf<typeof ImmutableSellOrderCodec>;\n  export type ImmutableSellOrderTS = t.OutputOf<typeof ImmutableSellOrderCodec>;\n\n  export const ImmutableBuyOrderCodec = t.intersection([\n    t.type({\n      order_id: t.number,\n      user: t.string,\n      sell_quantity: PositiveBigNumber,\n    }),\n    t.partial({\n      sell_decimals: t.number,\n      status: ImmutableOrderStatusCodec,\n      contract_address: t.string,\n    }),\n  ]);\n\n  export type ImmutableBuyOrder = t.TypeOf<typeof ImmutableBuyOrderCodec>;\n  export type ImmutableBuyOrderTS = t.OutputOf<typeof ImmutableBuyOrderCodec>;\n\n  export const ImmutableAssetCodec = t.intersection([\n    t.type({\n      token_address: HexadecimalString,\n      token_id: t.string,\n      user: t.union([t.null, EthAddress]),\n      status: ImmutableAssetStatusCodec,\n      uri: t.union([t.null, t.string]),\n      name: t.union([t.null, t.string]),\n      description: t.union([t.null, t.string]),\n      image_url: t.union([t.null, t.string]),\n      metadata: t.unknown,\n      collection: ImmutableCollectionDetailsCodec,\n    }),\n    t.partial({\n      orders: t.partial({\n        sell_orders: t.union([t.null, t.array(ImmutableSellOrderCodec)]),\n        buy_orders: t.union([t.null, t.array(ImmutableBuyOrderCodec)]),\n      }),\n      fees: t.array(ImmutableMintFeeResultCodec),\n    }),\n  ]);\n  export type ImmutableAsset = t.TypeOf<typeof ImmutableAssetCodec>;\n  export type ImmutableAssetTS = t.OutputOf<typeof ImmutableAssetCodec>;\n\n  export const ImmutableGetAssetsResultCodec = t.intersection([\n    t.type({\n      result: t.array(ImmutableAssetCodec),\n    }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableGetAssetsResult = t.TypeOf<\n    typeof ImmutableGetAssetsResultCodec\n  >;\n\n  export const ImmutableGetCollectionsResultCodec = t.intersection([\n    t.type({\n      result: t.array(ImmutableCollectionCodec),\n    }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableGetCollectionsResult = t.TypeOf<\n    typeof ImmutableGetCollectionsResultCodec\n  >;\n\n  export const ImmutableCreateTradeResultCodec = t.type({\n    trade_id: t.Int,\n    status: t.string,\n  });\n  export type ImmutableCreateTradeResult = t.TypeOf<\n    typeof ImmutableCreateTradeResultCodec\n  >;\n\n  export const ImmutableDepositCodec = t.type({\n    transaction_id: t.Int,\n    status: ImmutableTransactionStatusCodec,\n    user: EthAddress,\n    token: ImmutableTokenCodec,\n    timestamp: DateFromISOString,\n  });\n  export type ImmutableDeposit = t.TypeOf<typeof ImmutableDepositCodec>;\n\n  export const ImmutableGetDepositsResultCodec = t.intersection([\n    t.type({\n      result: t.array(ImmutableDepositCodec),\n    }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableGetDepositsResult = t.TypeOf<\n    typeof ImmutableGetDepositsResultCodec\n  >;\n\n  export const ImmutableWithdrawalCodec = t.type({\n    transaction_id: t.Int,\n    sender: EthAddress,\n    status: ImmutableTransactionStatusCodec,\n    timestamp: DateFromISOString,\n    rollup_status: ImmutableRollupStatusCodec,\n    withdrawn_to_wallet: t.boolean,\n    token: ImmutableTokenCodec,\n  });\n\n  export type ImmutableWithdrawal = t.TypeOf<typeof ImmutableWithdrawalCodec>;\n  export type ImmutableWithdrawalTS = t.OutputOf<\n    typeof ImmutableWithdrawalCodec\n  >;\n\n  export const ImmutableGetWithdrawalsResultCodec = t.intersection([\n    t.type({\n      result: t.array(ImmutableWithdrawalCodec),\n    }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableGetWithdrawalsResult = t.TypeOf<\n    typeof ImmutableGetWithdrawalsResultCodec\n  >;\n\n  export const ImmutableTransferCodec = t.type({\n    transaction_id: t.Int,\n    status: ImmutableTransactionStatusCodec,\n    user: EthAddress,\n    receiver: EthAddress,\n    token: ImmutableTokenCodec,\n    timestamp: DateFromISOString,\n  });\n\n  export type ImmutableTransfer = t.TypeOf<typeof ImmutableTransferCodec>;\n\n  export const ImmutableGetTransfersResultCodec = t.intersection([\n    t.type({\n      result: t.array(ImmutableTransferCodec),\n    }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableGetTransfersResult = t.TypeOf<\n    typeof ImmutableGetTransfersResultCodec\n  >;\n\n  export type ImmutableBurn = t.TypeOf<typeof ImmutableTransferCodec>;\n\n  export const ImmutableGetBurnsResultCodec = t.intersection([\n    t.type({\n      result: t.array(ImmutableTransferCodec),\n    }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableGetBurnsResult = t.TypeOf<\n    typeof ImmutableGetBurnsResultCodec\n  >;\n\n  export const ImmutableTradeCodec = t.type({\n    a: t.intersection([\n      t.type({\n        order_id: t.Int,\n        token_type: TokenTypeCodec,\n        sold: PositiveIntegerStringC,\n      }),\n      t.partial({\n        token_address: EthAddress,\n        token_id: t.string,\n      }),\n    ]),\n    b: t.intersection([\n      t.type({\n        order_id: t.Int,\n        token_type: TokenTypeCodec,\n        sold: PositiveIntegerStringC,\n      }),\n      t.partial({\n        token_address: EthAddress,\n        token_id: t.string,\n      }),\n    ]),\n    status: ImmutableTransactionStatusCodec,\n    timestamp: DateFromISOString,\n    transaction_id: t.Int,\n  });\n\n  export type ImmutableTrade = t.TypeOf<typeof ImmutableTradeCodec>;\n\n  export const ImmutableGetTradesResultCodec = t.intersection([\n    t.type({\n      result: t.array(ImmutableTradeCodec),\n    }),\n    ImmutablePaginatedResultCodec,\n  ]);\n\n  export type ImmutableGetTradesResult = t.TypeOf<\n    typeof ImmutableGetTradesResultCodec\n  >;\n\n  // From imx-engine:\n  // imx-engine/services/public-api/app/api/types.go\n  // GetExchangeResponse\n  export const ImmutableGetExchangeResultCodecV1 = t.type({\n    id: t.number,\n    status: t.string,\n    exchange: t.string,\n    wallet_address: t.string,\n    created_at: DateFromISOString,\n    transfer_id: t.string,\n    external_id: t.string,\n    from_amount: t.number,\n    from_currency: t.string,\n    to_amount: t.number,\n    to_currency: t.string,\n    fees_amount: t.number,\n  });\n\n  // From imx-exchange:\n  // imx-exchange/src/exchange/types.go\n  // Exchange\n  export const ImmutableExchangeDataCodec = t.type({\n    transfer_id: t.string,\n    external_id: t.string,\n    from_amount: t.number,\n    from_currency: t.string,\n    to_amount: t.number,\n    to_currency: t.string,\n    fees_amount: t.number,\n  });\n\n  export const ImmutableGetExchangeResultCodec = t.type({\n    id: t.number,\n    wallet_address: t.string,\n    status: t.string,\n    provider: t.string,\n\n    data: t.union([ImmutableExchangeDataCodec, t.null]),\n\n    created_at: DateFromISOString,\n    updated_at: DateFromISOString,\n  });\n\n  export type ImmutableGetExchangeResult = t.TypeOf<\n    typeof ImmutableGetExchangeResultCodec\n  >;\n\n  export type ImmutableGetExchangeResultV1 = t.TypeOf<\n    typeof ImmutableGetExchangeResultCodecV1\n  >;\n\n  export const ImmutableCreateExchangeResultCodec = t.type({\n    id: t.number,\n    provider: t.string,\n    wallet_address: t.string,\n  });\n\n  export type ImmutableCreateExchangeResult = t.TypeOf<\n    typeof ImmutableCreateExchangeResultCodec\n  >;\n\n  // From imx-engine:\n  // imx-engine/services/public-api/app/api/types.go\n  // CreateExchangeResponse\n  export const ImmutableCreateExchangeResultCodecV1 = t.type({\n    id: t.number,\n    status: t.string,\n    exchange: t.string,\n    wallet_address: t.string,\n  });\n\n  export type ImmutableCreateExchangeResultV1 = t.TypeOf<\n    typeof ImmutableCreateExchangeResultCodecV1\n  >;\n\n  export const ImmutableMoonpaySignatureRequestBaseCodec = t.intersection([\n    t.type({\n      apiKey: t.string,\n    }),\n    t.partial({\n      baseCurrencyCode: t.literal(BaseExchangeCurrency.USD),\n      colorCode: t.string,\n      externalTransactionId: t.string,\n      showOnlyCurrencies: t.array(cryptoCurrencies),\n      currencyCode: cryptoCurrencies,\n    }),\n  ]);\n\n  export const ImmutableGetMoonpaySignatureRequestCodec = t.intersection([\n    ImmutableMoonpaySignatureRequestBaseCodec,\n    t.union([\n      t.interface({\n        walletAddress: t.string,\n      }),\n      t.interface({\n        walletAddresses: t.record(cryptoCurrencies, t.string),\n      }),\n    ]),\n  ]);\n\n  export const ImmutableGetMoonpaySellSignatureRequestCodec = t.intersection([\n    ImmutableMoonpaySignatureRequestBaseCodec,\n    t.union([\n      t.interface({\n        refundWalletAddress: t.string,\n      }),\n      t.interface({\n        refundWalletAddresses: t.record(cryptoCurrencies, t.string),\n      }),\n    ]),\n  ]);\n\n  export const ImmutableGetMoonpaySignatureResultCodec = t.type({\n    request: t.string,\n    signature: t.string,\n  });\n\n  export type ImmutableGetMoonpaySignatureRequest = t.TypeOf<\n    typeof ImmutableGetMoonpaySignatureRequestCodec\n  >;\n  export type ImmutableGetMoonpaySignatureRequestTS = t.OutputOf<\n    typeof ImmutableGetMoonpaySignatureRequestCodec\n  >;\n\n  export type ImmutableGetMoonpaySellSignatureRequest = t.TypeOf<\n    typeof ImmutableGetMoonpaySellSignatureRequestCodec\n  >;\n  export type ImmutableGetMoonpaySellSignatureRequestTS = t.OutputOf<\n    typeof ImmutableGetMoonpaySellSignatureRequestCodec\n  >;\n\n  export type ImmutableGetMoonpaySignatureResult = t.TypeOf<\n    typeof ImmutableGetMoonpaySignatureResultCodec\n  >;\n\n  export const ImmutableGetExchangeHistoryResultCodec = t.intersection([\n    t.type({ result: t.array(ImmutableGetExchangeResultCodec) }),\n    ImmutablePaginatedResultCodec,\n  ]);\n\n  export const ImmutableGetExchangeHistoryResultCodecV1 = t.intersection([\n    t.type({ result: t.array(ImmutableGetExchangeResultCodecV1) }),\n    ImmutablePaginatedResultCodec,\n  ]);\n\n  export type ImmutableGetExchangeHistoryResultV1 = t.TypeOf<\n    typeof ImmutableGetExchangeHistoryResultCodecV1\n  >;\n\n  export type ImmutableGetExchangeHistoryResult = t.TypeOf<\n    typeof ImmutableGetExchangeHistoryResultCodec\n  >;\n\n  export const ImmutableGetTokenResultCodec = t.type({\n    token_address: t.union([t.string, EthAddress]),\n    image_url: t.union([t.null, t.string]),\n    name: t.union([t.null, t.string]),\n    decimals: t.string,\n    quantum: t.string,\n    symbol: t.string,\n  });\n  export type ImmutableGetTokenResult = t.TypeOf<\n    typeof ImmutableGetTokenResultCodec\n  >;\n  export type ImmutableGetTokenResultTS = t.OutputOf<\n    typeof ImmutableGetTokenResultCodec\n  >;\n\n  export const ImmutableListTokensResultCodec = t.intersection([\n    t.type({ result: t.array(ImmutableGetTokenResultCodec) }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableListTokensResult = t.TypeOf<\n    typeof ImmutableListTokensResultCodec\n  >;\n  export type ImmutableListTokensResultTS = t.OutputOf<\n    typeof ImmutableListTokensResultCodec\n  >;\n\n  // TODO: remove once v1 is deprecated, this is for backwards compatibility\n  export const ImmutableGetBalancesResultCodec = t.type({\n    imx: NonNegativeBigNumber,\n    preparing_withdrawal: NonNegativeBigNumber,\n    withdrawable: NonNegativeBigNumber,\n  });\n  export type ImmutableGetBalancesResult = t.TypeOf<\n    typeof ImmutableGetBalancesResultCodec\n  >;\n  export type ImmutableGetBalancesResultTS = t.OutputOf<\n    typeof ImmutableGetBalancesResultCodec\n  >;\n\n  export type ImmutableBalance = t.TypeOf<typeof ImmutableBalanceCodec>;\n  export const ImmutableBalanceCodec = t.type({\n    symbol: t.string,\n    balance: NonNegativeBigNumber,\n    preparing_withdrawal: NonNegativeBigNumber,\n    withdrawable: NonNegativeBigNumber,\n  });\n\n  export const ImmutableGetBalanceResultCodec = ImmutableBalanceCodec;\n  export type ImmutableGetBalanceResult = t.TypeOf<\n    typeof ImmutableGetBalanceResultCodec\n  >;\n  export type ImmutableGetBalanceResultTS = t.OutputOf<\n    typeof ImmutableGetBalanceResultCodec\n  >;\n\n  export const ImmutableListBalancesResultCodec = t.intersection([\n    t.type({ result: t.array(ImmutableBalanceCodec) }),\n    ImmutablePaginatedResultCodec,\n  ]);\n  export type ImmutableListBalancesResult = t.TypeOf<\n    typeof ImmutableListBalancesResultCodec\n  >;\n  export type ImmutableListBalancesResultTS = t.OutputOf<\n    typeof ImmutableListBalancesResultCodec\n  >;\n\n  export const ImmutableGetMintableTokenResultCodec = t.type({\n    token_id: HexadecimalString,\n    client_token_id: t.string,\n    blueprint: t.string,\n  });\n\n  export type ImmutableGetMintableTokenResult = t.TypeOf<\n    typeof ImmutableGetMintableTokenResultCodec\n  >;\n  export type ImmutableGetMintableTokenResultTS = t.OutputOf<\n    typeof ImmutableGetMintableTokenResultCodec\n  >;\n}\n\nexport namespace StarkMethodResults {\n  export type StarkAccountResult = {\n    starkPublicKey: string;\n  };\n  export type StarkRegisterResult = {\n    txhash: string;\n  };\n  export type StarkDepositResult = {\n    txhash: string;\n  };\n  export type StarkDepositCancelResult = {\n    txhash: string;\n  };\n  export type StarkDepositReclaimResult = {\n    txhash: string;\n  };\n  export type StarkTransferResult = {\n    starkSignature: string;\n  };\n  export type StarkCreateOrderResult = {\n    starkSignature: string;\n  };\n  export type StarkWithdrawalResult = {\n    txhash: string;\n  };\n  export type StarkFullWithdrawalResult = {\n    txhash: string;\n  };\n  export type StarkFreezeResult = {\n    txhash: string;\n  };\n  export type StarkVerifyEscapeResult = {\n    txhash: string;\n  };\n  export type StarkEscapeResult = {\n    txhash: string;\n  };\n  export type StarkRegisterTokenResult = {\n    txhash: string;\n  };\n  export type StarkGetEthKeyResult = {\n    ethKey: string;\n  };\n  export type StarkGetDepositBalanceResult = {\n    balance: string;\n  };\n  export type StarkGetWithdrawalBalanceResult = {\n    balance: string;\n  };\n  export type StarkMintNFTResult = {\n    txhash: string;\n  };\n  export type StarkApproveNFTResult = {\n    txhash: string;\n  };\n  export type StarkSetupNFTResult = {\n    txhash: string;\n  };\n}\n","import * as t from 'io-ts';\n\nimport { ImmutableMethodResults } from './types';\n\n/** @deprecated */\nexport const CreateProjectParamsCodec = t.type({\n  name: t.string,\n  company_name: t.string,\n  contact_email: t.string,\n});\n/** @deprecated */\nexport type CreateProjectParamsF = t.TypeOf<typeof CreateProjectParamsCodec>;\nexport type CreateProjectParams = t.OutputOf<typeof CreateProjectParamsCodec>;\n\n/** @deprecated */\nexport const GetProjectParamsCodec = t.type({\n  project_id: t.number,\n});\n/** @deprecated */\nexport type GetProjectParamsF = t.TypeOf<typeof GetProjectParamsCodec>;\nexport type GetProjectParams = t.OutputOf<typeof GetProjectParamsCodec>;\n\n/** @deprecated */\nexport const CreateProjectResultsCodec = t.type({\n  id: t.number,\n});\n/** @deprecated */\nexport type CreateProjectResultF = t.TypeOf<typeof CreateProjectResultsCodec>;\nexport type CreateProjectResult = t.OutputOf<typeof CreateProjectResultsCodec>;\n\n/** @deprecated */\nexport const ProjectResultCodec = t.type({\n  id: t.number,\n  name: t.string,\n  company_name: t.string,\n  contact_email: t.string,\n  mint_remaining: t.number,\n  mint_limit_expires_at: t.union([t.null, t.string]),\n  mint_monthly_limit: t.number,\n  collection_remaining: t.number,\n  collection_limit_expires_at: t.union([t.null, t.string]),\n  collection_monthly_limit: t.number,\n});\n/** @deprecated */\nexport type ProjectResultF = t.TypeOf<typeof ProjectResultCodec>;\nexport type ProjectResult = t.OutputOf<typeof ProjectResultCodec>;\n\n/** @deprecated */\nexport const ProjectsResultCodec = t.intersection([\n  t.type({\n    result: t.array(ProjectResultCodec),\n  }),\n  ImmutableMethodResults.ImmutablePaginatedResultCodec,\n]);\n\n/** @deprecated */\nexport type ProjectsResultF = t.TypeOf<typeof ProjectsResultCodec>;\nexport type ProjectsResult = t.OutputOf<typeof ProjectsResultCodec>;\n","import * as t from 'io-ts';\n\nimport { HexadecimalString } from './runtime';\n\nexport namespace IMXDClientMethodParams {\n  export const GetDailyPointsBalanceParamsCodec = t.type({\n    starkPublicKey: HexadecimalString,\n    date: t.string,\n  });\n  export type GetDailyPointsBalanceParams = t.TypeOf<\n    typeof GetDailyPointsBalanceParamsCodec\n  >;\n  export type GetDailyPointsBalanceParamsTS = t.OutputOf<\n    typeof GetDailyPointsBalanceParamsCodec\n  >;\n}\n\nexport namespace IMXDClientMethodResults {\n  export const GetDailyPointsBalanceResultCodec = t.type({\n    daily_points_balance: t.string,\n    date: t.string,\n    starkKey: HexadecimalString,\n  });\n  export type GetDailyPointsBalanceResult = t.TypeOf<\n    typeof GetDailyPointsBalanceResultCodec\n  >;\n  export type GetDailyPointsBalanceResultTS = t.OutputOf<\n    typeof GetDailyPointsBalanceResultCodec\n  >;\n}\n","export enum Routes {\n  'Home' = 'home',\n  'Setup' = 'setup',\n  'Buy' = 'buy',\n  'BuyV2' = 'v2/buy',\n  'Sell' = 'sell',\n  'Deposit' = 'deposit',\n  'History' = 'history',\n  'PrepareWithdrawal' = 'prepare-withdrawal',\n  'CompleteWithdrawal' = 'complete-withdrawal',\n  'Transfer' = 'transfer',\n  'TransferV2' = 'v2/transfer',\n  'BatchNftTransfer' = 'batch-nft-transfer',\n  'Cancel' = 'cancel',\n  'Claim' = 'claim',\n  'ClaimUSInstant' = 'claim-instant',\n  'ClaimUSOverTime' = 'claim-over-time',\n  'ClaimUSOverTimeDetails' = 'claim-over-time-details',\n  'FiatToCrypto' = 'fiat-to-crypto',\n  'CryptoToFiat' = 'crypto-to-fiat',\n}\n\nexport const messagingUrls = [Routes.BatchNftTransfer];\n","export const LINK_MESSAGE_TYPE = 'imx-link';\nexport const messageTypes = {\n  inProgress: 'inProgress',\n  success: 'success',\n  fail: 'fail',\n  result: 'result',\n  close: 'close',\n  ready: 'ready',\n  transfer: 'transfer',\n  batchNftTransfer: 'batchNftTransfer',\n};\n\nexport type Message = {\n  type: string;\n  message: string;\n  payload?: any;\n  version?: number;\n};\n","export const erc20 = [\n  // Get the token decimals\n  'function decimals() view returns (uint8)',\n\n  // Get the account balance\n  'function balanceOf(address account) view returns (uint256)',\n\n  // Get the allowance\n  'function allowance(address _owner, address _spender) view returns (uint256 remaining)',\n];\n","import { ExternalProvider } from '@ethersproject/providers/lib/web3-provider';\n\nexport const createExtensionProvider = async ({\n  mustBeMetaMask,\n}: {\n  mustBeMetaMask?: boolean;\n}): Promise<ExternalProvider | null> => {\n  const { ethereum } = window as any;\n  if (!ethereum) {\n    return null;\n  }\n\n  let provider = null;\n  if (ethereum.providers) {\n    console.log('Multiple Ethereum providers detected');\n    provider = ethereum.providers\n      .reverse() // In order to prioritise MetaMask over Brave's version of MetaMask when both exist\n      .find((p: any) => (mustBeMetaMask ? p.isMetaMask : true));\n\n    ethereum.setSelectedProvider(provider);\n  } else if (\n    !mustBeMetaMask ||\n    (mustBeMetaMask && ethereum.isMetaMask === true)\n  ) {\n    console.log('Ethereum provider detected');\n    provider = ethereum;\n  }\n\n  return provider;\n};\n","/**\n * @since 2.0.0\n */\nexport function sign(n) {\n    return n <= -1 ? -1 : n >= 1 ? 1 : 0;\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var eqOrdering = {\n    equals: function (x, y) { return x === y; }\n};\n/**\n * Use `monoidOrdering` instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupOrdering = {\n    concat: function (x, y) { return (x !== 0 ? x : y); }\n};\n/**\n * @category instances\n * @since 2.4.0\n */\nexport var monoidOrdering = {\n    // tslint:disable-next-line: deprecation\n    concat: semigroupOrdering.concat,\n    empty: 0\n};\n/**\n * @since 2.0.0\n */\nexport function invert(O) {\n    switch (O) {\n        case -1:\n            return 1;\n        case 1:\n            return -1;\n        default:\n            return 0;\n    }\n}\n","import { monoidOrdering } from './Ordering';\nimport { pipe } from './function';\n// default compare for primitive types\nfunction compare(x, y) {\n    return x < y ? -1 : x > y ? 1 : 0;\n}\nfunction strictEqual(a, b) {\n    return a === b;\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ordString = {\n    equals: strictEqual,\n    compare: compare\n};\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ordNumber = {\n    equals: strictEqual,\n    compare: compare\n};\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ordBoolean = {\n    equals: strictEqual,\n    compare: compare\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nexport function lt(O) {\n    return function (x, y) { return O.compare(x, y) === -1; };\n}\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport function gt(O) {\n    return function (x, y) { return O.compare(x, y) === 1; };\n}\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nexport function leq(O) {\n    return function (x, y) { return O.compare(x, y) !== 1; };\n}\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport function geq(O) {\n    return function (x, y) { return O.compare(x, y) !== -1; };\n}\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport function min(O) {\n    return function (x, y) { return (O.compare(x, y) === 1 ? y : x); };\n}\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport function max(O) {\n    return function (x, y) { return (O.compare(x, y) === -1 ? y : x); };\n}\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nexport function clamp(O) {\n    var minO = min(O);\n    var maxO = max(O);\n    return function (low, hi) { return function (x) { return maxO(minO(x, hi), low); }; };\n}\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nexport function between(O) {\n    var lessThanO = lt(O);\n    var greaterThanO = gt(O);\n    return function (low, hi) { return function (x) { return (lessThanO(x, low) || greaterThanO(x, hi) ? false : true); }; };\n}\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport function fromCompare(compare) {\n    var optimizedCompare = function (x, y) { return (x === y ? 0 : compare(x, y)); };\n    return {\n        equals: function (x, y) { return optimizedCompare(x, y) === 0; },\n        compare: optimizedCompare\n    };\n}\n/**\n * Use `getMonoid` instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport function getSemigroup() {\n    return {\n        concat: function (x, y) { return fromCompare(function (a, b) { return monoidOrdering.concat(x.compare(a, b), y.compare(a, b)); }); }\n    };\n}\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, getDualOrd, getMonoid, ordBoolean, ordNumber, ordString } from 'fp-ts/Ord'\n * import { pipe } from 'fp-ts/function'\n * import { fold } from 'fp-ts/Monoid'\n *\n * interface User {\n *   id: number\n *   name: string\n *   age: number\n *   rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   ordString,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   ordNumber,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   ordBoolean,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = fold(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = fold(M)([getDualOrd(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nexport function getMonoid() {\n    return {\n        // tslint:disable-next-line: deprecation\n        concat: getSemigroup().concat,\n        empty: fromCompare(function () { return 0; })\n    };\n}\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple\n *\n * @example\n * import { getTupleOrd, ordString, ordNumber, ordBoolean } from 'fp-ts/Ord'\n *\n * const O = getTupleOrd(ordString, ordNumber, ordBoolean)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getTupleOrd() {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    var len = ords.length;\n    return fromCompare(function (x, y) {\n        var i = 0;\n        for (; i < len - 1; i++) {\n            var r = ords[i].compare(x[i], y[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(x[i], y[i]);\n    });\n}\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport function getDualOrd(O) {\n    return fromCompare(function (x, y) { return O.compare(y, x); });\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromCompare(function (x, y) { return fa.compare(f(x), f(y)); });\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ordDate = \n/*#__PURE__*/\npipe(ordNumber, \n/*#__PURE__*/\ncontramap(function (date) { return date.valueOf(); }));\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ord = Contravariant;\n","import { identity, pipe, bind_, bindTo_, flow } from './function';\nimport * as O from './Option';\nimport { fromCompare, getMonoid as getOrdMonoid, ordNumber } from './Ord';\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function fromArray(as) {\n    var l = as.length;\n    if (l === 0) {\n        return empty;\n    }\n    var ras = Array(l);\n    for (var i = 0; i < l; i++) {\n        ras[i] = as[i];\n    }\n    return ras;\n}\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function toArray(ras) {\n    var l = ras.length;\n    var as = Array(l);\n    for (var i = 0; i < l; i++) {\n        as[i] = ras[i];\n    }\n    return as;\n}\n/**\n * @category instances\n * @since 2.5.0\n */\nexport function getShow(S) {\n    return {\n        show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n    };\n}\nvar concat = function (x, y) {\n    var lenx = x.length;\n    if (lenx === 0) {\n        return y;\n    }\n    var leny = y.length;\n    if (leny === 0) {\n        return x;\n    }\n    var r = Array(lenx + leny);\n    for (var i = 0; i < lenx; i++) {\n        r[i] = x[i];\n    }\n    for (var i = 0; i < leny; i++) {\n        r[i + lenx] = y[i];\n    }\n    return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getMonoid() {\n    return {\n        concat: concat,\n        empty: empty\n    };\n}\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getEq(E) {\n    return {\n        equals: function (xs, ys) { return xs === ys || (xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); })); }\n    };\n}\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getOrd(O) {\n    return fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return ordNumber.compare(aLen, bLen);\n    });\n}\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function makeBy(n, f) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    for (var i = 0; i < n; i++) {\n        r.push(f(i));\n    }\n    return r;\n}\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function range(start, end) {\n    return makeBy(end - start + 1, function (i) { return start + i; });\n}\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function replicate(n, a) {\n    return makeBy(n, function () { return a; });\n}\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function flatten(mma) {\n    var rLen = 0;\n    var len = mma.length;\n    for (var i = 0; i < len; i++) {\n        rLen += mma[i].length;\n    }\n    var r = Array(rLen);\n    var start = 0;\n    for (var i = 0; i < len; i++) {\n        var arr = mma[i];\n        var l = arr.length;\n        for (var j = 0; j < l; j++) {\n            r[j + start] = arr[j];\n        }\n        start += l;\n    }\n    return r;\n}\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldLeft(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1))); };\n}\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldRight(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1])); };\n}\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanLeft(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[0] = b;\n        for (var i = 0; i < l; i++) {\n            r[i + 1] = f(r[i], as[i]);\n        }\n        return r;\n    };\n}\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanRight(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[l] = b;\n        for (var i = l - 1; i >= 0; i--) {\n            r[i] = f(as[i], r[i + 1]);\n        }\n        return r;\n    };\n}\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nexport function isEmpty(as) {\n    return as.length === 0;\n}\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\nexport function isNonEmpty(as) {\n    return as.length > 0;\n}\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport function isOutOfBound(i, as) {\n    return i < 0 || i >= as.length;\n}\nexport function lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexport function cons(head, tail) {\n    if (tail === undefined) {\n        return function (tail) { return cons(head, tail); };\n    }\n    var len = tail.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i + 1] = tail[i];\n    }\n    r[0] = head;\n    return r;\n}\n// TODO: curry and make data-last in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function snoc(init, end) {\n    var len = init.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i] = init[i];\n    }\n    r[len] = end;\n    return r;\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport function head(as) {\n    return isEmpty(as) ? O.none : O.some(as[0]);\n}\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport function last(as) {\n    return lookup(as.length - 1, as);\n}\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport function tail(as) {\n    return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport function init(as) {\n    var len = as.length;\n    return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function takeLeft(n) {\n    return function (as) { return as.slice(0, n); };\n}\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\nexport function takeRight(n) {\n    return function (as) { return (n === 0 ? empty : as.slice(-n)); };\n}\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        return init;\n    };\n}\nvar spanIndexUncurry = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeft(n) {\n    return function (as) { return as.slice(n, as.length); };\n}\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropRight(n) {\n    return function (as) { return as.slice(0, as.length - n); };\n}\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return rest;\n    };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport function findIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\nexport function findFirst(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport function findFirstMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\nexport function findLast(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport function findLastMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport function findLastIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport function insertAt(i, a) {\n    return function (as) { return (i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as))); };\n}\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport function updateAt(i, a) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as))); };\n}\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport function deleteAt(i) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as))); };\n}\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport function modifyAt(i, f) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as))); };\n}\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function reverse(as) {\n    if (isEmpty(as)) {\n        return as;\n    }\n    return as.slice().reverse();\n}\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rights(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n}\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nexport function lefts(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n}\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function zipWith(fa, fb, f) {\n    // tslint:disable-next-line: readonly-array\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n}\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nexport function unzip(as) {\n    // tslint:disable-next-line: readonly-array\n    var fa = [];\n    // tslint:disable-next-line: readonly-array\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n}\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = function (e) { return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n        var x = xs_1[_i];\n        ys.push(e, x);\n    }\n    return ys;\n}; };\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport function intersperse(e) {\n    return function (as) {\n        var length = as.length;\n        if (length === 0) {\n            return as;\n        }\n        return cons(as[0], prependToAll(e)(as.slice(1, as.length)));\n    };\n}\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rotate(n) {\n    return function (as) {\n        var len = as.length;\n        if (n === 0 || len <= 1 || len === Math.abs(n)) {\n            return as;\n        }\n        else if (n < 0) {\n            return rotate(len + n)(as);\n        }\n        else {\n            return as.slice(-n).concat(as.slice(0, len - n));\n        }\n    };\n}\nexport function elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        var len = as.length;\n        for (; i < len; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function uniq(E) {\n    var elemS = elem(E);\n    return function (as) {\n        var len = as.length;\n        if (len <= 1) {\n            return as;\n        }\n        // tslint:disable-next-line: readonly-array\n        var r = [];\n        var i = 0;\n        for (; i < len; i++) {\n            var a = as[i];\n            if (!elemS(a, r)) {\n                r.push(a);\n            }\n        }\n        return len === r.length ? as : r;\n    };\n}\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function sortBy(ords) {\n    var M = getOrdMonoid();\n    return sort(ords.reduce(M.concat, M.empty));\n}\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chop = function (f) { return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n    while (isNonEmpty(cs)) {\n        var _a = f(cs), b = _a[0], c = _a[1];\n        result.push(b);\n        cs = c;\n    }\n    return result;\n}; };\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nexport function splitAt(n) {\n    return function (as) { return [as.slice(0, n), as.slice(n)]; };\n}\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\nexport function chunksOf(n) {\n    var f = chop(splitAt(n));\n    return function (as) { return (as.length === 0 ? empty : isOutOfBound(n - 1, as) ? [as] : f(as)); };\n}\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        if (input.length === 0) {\n            return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : empty;\n        }\n        else {\n            return chain_(input[0], function (x) { return go(snoc(scope, x), input.slice(1)); });\n        }\n    };\n    return go(empty, input);\n}\nexport function union(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, xs); };\n        }\n        return concat(xs, ys.filter(function (a) { return !elemE(a, xs); }));\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nexport var of = function (a) { return [a]; };\n/**\n * @category Alternative\n * @since 2.7.0\n */\nexport var zero = function () { return empty; };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return pipe(fa, map(f)); };\nvar mapWithIndex_ = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar ap_ = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar chain_ = function (ma, f) {\n    return pipe(ma, chain(f));\n};\nvar filter_ = function (fa, predicate) { return pipe(fa, filter(predicate)); };\nvar filterMap_ = function (fa, f) { return pipe(fa, filterMap(f)); };\nvar partitionWithIndex_ = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\nvar partition_ = function (fa, predicate) { return pipe(fa, partition(predicate)); };\nvar partitionMap_ = function (fa, f) { return pipe(fa, partitionMap(f)); };\nvar partitionMapWithIndex_ = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\nvar alt_ = function (fa, that) { return pipe(fa, alt(that)); };\nvar reduce_ = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar foldMap_ = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar reduceRight_ = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar reduceWithIndex_ = function (fa, b, f) {\n    var l = fa.length;\n    var r = b;\n    for (var i = 0; i < l; i++) {\n        r = f(i, r, fa[i]);\n    }\n    return r;\n};\nvar foldMapWithIndex_ = function (M) { return function (fa, f) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; };\nvar reduceRightWithIndex_ = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar filterMapWithIndex_ = function (fa, f) {\n    return pipe(fa, filterMapWithIndex(f));\n};\nvar filterWithIndex_ = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\nvar extend_ = function (fa, f) { return pipe(fa, extend(f)); };\nvar traverse_ = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar traverseWithIndex_ = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar wither_ = function (F) {\n    var witherF = wither(F);\n    return function (fa, f) { return pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n    var wiltF = wilt(F);\n    return function (fa, f) { return pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return concat(fa, that()); }; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n    return chain(function (f) { return pipe(fa, map(f)); });\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = function (fb) {\n    return flow(map(function (a) { return function () { return a; }; }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = function (fb) {\n    return flow(map(function () { return function (b) { return b; }; }), ap(fb));\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) { return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n    for (var i = 0; i < l; i++) {\n        var e = ma[i];\n        var arr = f(i, e);\n        outLen += arr.length;\n        temp[i] = arr;\n    }\n    var out = Array(outLen);\n    var start = 0;\n    for (var i = 0; i < l; i++) {\n        var arr = temp[i];\n        var l_1 = arr.length;\n        for (var j = 0; j < l_1; j++) {\n            out[j + start] = arr[j];\n        }\n        start += l_1;\n    }\n    return out;\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = function (f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function () { return a; }));\n    });\n};\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (O.isSome(optionB)) {\n            result.push(optionB.value);\n        }\n    }\n    return result;\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var compact = \n/*#__PURE__*/\nfilterMap(identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = function (f) { return function (wa) { return wa.map(function (_, i, as) { return f(as.slice(i)); }); }; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex_(M);\n    return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) { return function (fa) { return reduceWithIndex_(fa, b, f); }; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) {\n    return reduce_(ta, F.of(zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return snoc(as, a); }; }), fa);\n    });\n}; };\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return snoc(bs, b); }; }), f(i, a));\n    });\n}; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), compact); }; };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), separate); }; };\n};\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    // tslint:disable-next-line: readonly-array\n    var ret = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (O.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            ret.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return ret;\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    alt: alt_,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverse: traverse_,\n    sequence: sequence,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    wither: wither_,\n    wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var readonlyArray = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    mapWithIndex: mapWithIndex_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_,\n    alt: alt_,\n    zero: zero,\n    unfold: unfold,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    extend: extend_,\n    wither: wither_,\n    wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeInsertAt(i, a, as) {\n    var xs = as.slice();\n    xs.splice(i, 0, a);\n    return xs;\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeUpdateAt(i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = as.slice();\n        xs[i] = a;\n        return xs;\n    }\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeDeleteAt(i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n}\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var every = function (predicate) { return function (as) { return as.every(predicate); }; };\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) { return function (as) { return as.some(predicate); }; };\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) {\n    return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n","import * as RA from './ReadonlyArray';\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/* tslint:disable:readonly-array */\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RA.getShow;\n/**\n * Returns a `Monoid` for `Array<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = RA.getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = RA.getOrd;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var makeBy = RA.makeBy;\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var range = RA.range;\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var replicate = RA.replicate;\n/**\n * Removes one level of nesting.\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = RA.flatten;\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldLeft = RA.foldLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldRight = RA.foldRight;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var scanLeft = RA.scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var scanRight = RA.scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.0.0\n */\nexport var isEmpty = RA.isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @category guards\n * @since 2.0.0\n */\nexport var isNonEmpty = RA.isNonEmpty;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.0.0\n */\nexport var isOutOfBound = RA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexport var lookup = RA.lookup;\n// TODO: remove non-curried overloading in v3\n/**\n * Attaches an element to the front of an array, creating a new non empty array\n *\n * @example\n * import { cons } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], cons(0)), [0, 1, 2, 3])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var cons = RA.cons;\n// TODO: curry in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var snoc = RA.snoc;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var tail = RA.tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var init = RA.init;\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeLeft = RA.takeLeft;\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeRight = RA.takeRight;\nexport function takeLeftWhile(predicate) {\n    return RA.takeLeftWhile(predicate);\n}\nexport function spanLeft(predicate) {\n    return RA.spanLeft(predicate);\n}\n/* tslint:enable:readonly-keyword */\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropLeft = RA.dropLeft;\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropRight = RA.dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropLeftWhile = RA.dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexport var findIndex = RA.findIndex;\nexport function findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findFirstMap = RA.findFirstMap;\nexport function findLast(predicate) {\n    return RA.findLast(predicate);\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.0.0\n */\nexport var findLastIndex = RA.findLastIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var copy = RA.toArray;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nexport var insertAt = RA.insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nexport var updateAt = RA.updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nexport var deleteAt = RA.deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nexport var modifyAt = RA.modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var reverse = RA.reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rights = RA.rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var lefts = RA.lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sort = RA.sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var zipWith = RA.zipWith;\n// TODO: remove non-curried overloading in v3\n/**\n * Takes two arrays and returns an array of corresponding pairs. If one input array is short, excess elements of the\n * longer array are discarded\n *\n * @example\n * import { zip } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], zip(['a', 'b', 'c', 'd'])), [[1, 'a'], [2, 'b'], [3, 'c']])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var zip = RA.zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nexport var unzip = RA.unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = RA.prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = RA.intersperse;\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rotate = RA.rotate;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an array. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an array of type `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(eqNumber)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(eqNumber)(0)), false)\n *\n * @since 2.0.0\n */\nexport var elem = RA.elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var uniq = RA.uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sortBy = RA.sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/Array'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chop = RA.chop;\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.0.0\n */\nexport var splitAt = RA.splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.0.0\n */\nexport var chunksOf = RA.chunksOf;\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    return RA.comprehension(input, f, g);\n}\n// TODO: remove non-curried overloading in v3\n/**\n * Creates an array of unique values, in order, from all given arrays using a `Eq` for equality comparisons\n *\n * @example\n * import { union } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2], union(eqNumber)([2, 3])), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var union = RA.union;\n// TODO: remove non-curried overloading in v3\n/**\n * Creates an array of unique values that are included in all given arrays using a `Eq` for equality\n * comparisons. The order and references of result values are determined by the first array.\n *\n * @example\n * import { intersection } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2], intersection(eqNumber)([2, 3])), [2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var intersection = RA.intersection;\n// TODO: remove non-curried overloading in v3\n/**\n * Creates an array of array values not included in the other given array using a `Eq` for equality\n * comparisons. The order and references of result values are determined by the first array.\n *\n * @example\n * import { difference } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2], difference(eqNumber)([2, 3])), [1])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var difference = RA.difference;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.0.0\n */\nexport var of = RA.of;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = RA.Monad.map;\nvar ap_ = RA.Monad.ap;\nvar chain_ = RA.Monad.chain;\nvar mapWithIndex_ = RA.FunctorWithIndex.mapWithIndex;\nvar filter_ = RA.Filterable.filter;\nvar filterMap_ = RA.Filterable.filterMap;\nvar partition_ = RA.Filterable.partition;\nvar partitionMap_ = RA.Filterable.partitionMap;\nvar filterWithIndex_ = RA.FilterableWithIndex\n    .filterWithIndex;\nvar filterMapWithIndex_ = RA.FilterableWithIndex\n    .filterMapWithIndex;\nvar partitionWithIndex_ = RA.FilterableWithIndex\n    .partitionWithIndex;\nvar partitionMapWithIndex_ = RA.FilterableWithIndex\n    .partitionMapWithIndex;\nvar reduce_ = RA.Foldable.reduce;\nvar foldMap_ = RA.Foldable.foldMap;\nvar reduceRight_ = RA.Foldable.reduceRight;\nvar traverse_ = RA.Traversable.traverse;\nvar alt_ = RA.Alternative.alt;\nvar reduceWithIndex_ = RA.FoldableWithIndex.reduceWithIndex;\nvar foldMapWithIndex_ = RA.FoldableWithIndex.foldMapWithIndex;\nvar reduceRightWithIndex_ = RA.FoldableWithIndex.reduceRightWithIndex;\nvar traverseWithIndex_ = RA.TraversableWithIndex\n    .traverseWithIndex;\nvar extend_ = RA.Extend.extend;\nvar wither_ = RA.Witherable.wither;\nvar wilt_ = RA.Witherable.wilt;\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = RA.map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = RA.ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = RA.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = RA.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = RA.chain;\n/**\n * @since 2.7.0\n */\nexport var chainWithIndex = RA.chainWithIndex;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = RA.chainFirst;\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nexport var mapWithIndex = RA.mapWithIndex;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var compact = RA.compact;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var separate = RA.separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filter = RA.filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filterMap = RA.filterMap;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partition = RA.partition;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionWithIndex = RA.partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partitionMap = RA.partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionMapWithIndex = RA.partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = RA.altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexport var alt = RA.alt;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterMapWithIndex = RA.filterMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterWithIndex = RA.filterWithIndex;\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = RA.extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = RA.duplicate;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var foldMap = RA.foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = RA.traverse;\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = RA.sequence;\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = RA.traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = RA.wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = RA.wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = RA.unfold;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nexport var zero = RA.Alternative.zero;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Array';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    alt: alt_,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverse: traverse_,\n    sequence: sequence,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    wither: wither_,\n    wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var array = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    mapWithIndex: mapWithIndex_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_,\n    alt: alt_,\n    zero: zero,\n    unfold: unfold,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    extend: extend_,\n    wither: wither_,\n    wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeInsertAt = RA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeUpdateAt = RA.unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeDeleteAt = RA.unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.0.0\n */\nexport var empty = [];\n/**\n * @since 2.9.0\n */\nexport var every = RA.every;\n/**\n * @since 2.9.0\n */\nexport var some = RA.some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = RA.bindTo;\n/**\n * @since 2.8.0\n */\nexport var bind = RA.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = RA.apS;\n","import { pipe, bind_, bindTo_, flow } from './function';\nimport { none, some } from './Option';\nimport * as RA from './ReadonlyArray';\nimport { getJoinSemigroup, getMeetSemigroup } from './Semigroup';\n/**\n * Append an element to the front of an array, creating a new non empty array\n *\n * @example\n * import { cons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(cons(1, [2, 3, 4]), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var cons = RA.cons;\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var snoc = RA.snoc;\n/**\n * Builds a `ReadonlyNonEmptyArray` from an array returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function fromReadonlyArray(as) {\n    return RA.isNonEmpty(as) ? some(as) : none;\n}\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function fromArray(as) {\n    return fromReadonlyArray(RA.fromArray(as));\n}\n/**\n * Produces a couple of the first element of the array, and a new array of the remaining elements, if any\n *\n * @example\n * import { cons, uncons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(uncons(cons(1, [2, 3, 4])), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport function uncons(nea) {\n    return [nea[0], nea.slice(1)];\n}\n/**\n * Produces a couple of a copy of the array without its last element, and that last element\n *\n * @example\n * import { snoc, unsnoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unsnoc(snoc([1, 2, 3], 4)), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport function unsnoc(nea) {\n    var l = nea.length - 1;\n    return [nea.slice(0, l), nea[l]];\n}\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = RA.getShow;\n/**\n * @since 2.5.0\n */\nexport function head(nea) {\n    return nea[0];\n}\n/**\n * @since 2.5.0\n */\nexport function tail(nea) {\n    return nea.slice(1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport var reverse = RA.reverse;\n/**\n * @since 2.5.0\n */\nexport function min(ord) {\n    var S = getMeetSemigroup(ord);\n    return function (nea) { return nea.reduce(S.concat); };\n}\n/**\n * @since 2.5.0\n */\nexport function max(ord) {\n    var S = getJoinSemigroup(ord);\n    return function (nea) { return nea.reduce(S.concat); };\n}\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getSemigroup() {\n    return {\n        concat: concat\n    };\n}\n/**\n * @example\n * import { getEq, cons } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 2]), true)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = RA.getEq;\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return RA.empty;\n        }\n        // tslint:disable-next-line: readonly-array\n        var r = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var x = as[i];\n            if (E.equals(x, head)) {\n                nea.push(x);\n            }\n            else {\n                r.push(nea);\n                head = x;\n                nea = [head];\n            }\n        }\n        r.push(nea);\n        return r;\n    };\n}\nexport function groupSort(O) {\n    var sortO = RA.sort(O);\n    var groupO = group(O);\n    return function (as) { return groupO(sortO(as)); };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { cons, groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['foo', 'bar', 'foobar']), {\n *   '3': cons('foo', ['bar']),\n *   '6': cons('foobar', [])\n * })\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function groupBy(f) {\n    return function (as) {\n        var r = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (r.hasOwnProperty(k)) {\n                r[k].push(a);\n            }\n            else {\n                r[k] = [a];\n            }\n        }\n        return r;\n    };\n}\n/**\n * @since 2.5.0\n */\nexport function last(nea) {\n    return nea[nea.length - 1];\n}\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nexport function init(nea) {\n    return nea.slice(0, -1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport function sort(O) {\n    return RA.sort(O);\n}\n/**\n * @since 2.5.0\n */\nexport function insertAt(i, a) {\n    return RA.insertAt(i, a);\n}\n/**\n * @since 2.5.0\n */\nexport function updateAt(i, a) {\n    return RA.updateAt(i, a);\n}\n/**\n * @since 2.5.0\n */\nexport function modifyAt(i, f) {\n    return RA.modifyAt(i, f);\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * @since 2.5.0\n */\nexport function filterWithIndex(predicate) {\n    return function (nea) { return fromReadonlyArray(nea.filter(function (a, i) { return predicate(i, a); })); };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nexport var of = RA.of;\nexport function concat(fx, fy) {\n    return fx.concat(fy);\n}\n/**\n * @since 2.5.0\n */\nexport function fold(S) {\n    return function (fa) { return fa.reduce(S.concat); };\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zipWith = RA.zipWith;\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zip = RA.zip;\n/**\n * @since 2.5.1\n */\nexport var unzip = RA.unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { cons, prependToAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)(cons(1, [2, 3, 4])), cons(9, [1, 9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = RA.prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { cons, intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)(cons(1, [2, 3, 4])), cons(1, [9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = RA.intersperse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = RA.Functor.map;\nvar mapWithIndex_ = RA.FunctorWithIndex.mapWithIndex;\nvar ap_ = RA.Applicative.ap;\nvar chain_ = RA.Monad.chain;\nvar extend_ = RA.Extend.extend;\nvar reduce_ = RA.Foldable.reduce;\nvar foldMap_ = RA.Foldable.foldMap;\nvar reduceRight_ = RA.Foldable.reduceRight;\nvar traverse_ = RA.Traversable.traverse;\nvar alt_ = RA.Alt.alt;\nvar reduceWithIndex_ = RA.FoldableWithIndex.reduceWithIndex;\nvar foldMapWithIndex_ = RA.FoldableWithIndex\n    .foldMapWithIndex;\nvar reduceRightWithIndex_ = RA.FoldableWithIndex\n    .reduceRightWithIndex;\nvar traverseWithIndex_ = RA.TraversableWithIndex\n    .traverseWithIndex;\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (S) { return function (f) { return function (fa) { return fa.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, fa[0])); }; }; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (S) { return function (f) { return function (fa) {\n    return fa.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(fa[0]));\n}; }; };\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = RA.altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexport var alt = RA.alt;\n/**\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = RA.ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = RA.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = RA.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = RA.chain;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = RA.chainFirst;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = RA.duplicate;\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = RA.extend;\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = RA.flatten;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = RA.map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = RA.mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nexport var traverse = RA.traverse;\n/**\n * @since 2.6.3\n */\nexport var sequence = RA.sequence;\n/**\n * @since 2.6.3\n */\nexport var traverseWithIndex = RA.traverseWithIndex;\n/**\n * @since 2.6.3\n */\nexport var extract = head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: map_,\n    extend: extend_,\n    extract: extract\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var readonlyNonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    ap: ap_,\n    chain: chain_,\n    extend: extend_,\n    extract: extract,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    alt: alt_\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) { return map(bindTo_(name)); };\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n","import * as RNEA from './ReadonlyNonEmptyArray';\n/* tslint:enable:readonly-keyword */\n/**\n * Append an element to the front of an array, creating a new non empty array\n *\n * @example\n * import { cons } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(cons(1, [2, 3, 4]), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var cons = RNEA.cons;\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var snoc = RNEA.snoc;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromArray = RNEA.fromArray;\n/**\n * Produces a couple of the first element of the array, and a new array of the remaining elements, if any\n *\n * @example\n * import { cons, uncons } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(uncons(cons(1, [2, 3, 4])), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport var uncons = RNEA.uncons;\n/**\n * Produces a couple of a copy of the array without its last element, and that last element\n *\n * @example\n * import { snoc, unsnoc } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unsnoc(snoc([1, 2, 3], 4)), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport var unsnoc = RNEA.unsnoc;\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RNEA.getShow;\n/**\n * @since 2.0.0\n */\nexport var head = RNEA.head;\n/**\n * @since 2.0.0\n */\nexport var tail = RNEA.tail;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var reverse = RNEA.reverse;\n/**\n * @since 2.0.0\n */\nexport var min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexport var max = RNEA.max;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = RNEA.getSemigroup;\n/**\n * @example\n * import { getEq, cons } from 'fp-ts/NonEmptyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 2]), true)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RNEA.getEq;\nexport function group(E) {\n    return RNEA.group(E);\n}\n/**\n * Sort and then group the elements of an array into non empty arrays.\n *\n * @example\n * import { cons, groupSort } from 'fp-ts/NonEmptyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(groupSort(ordNumber)([1, 2, 1, 1]), [cons(1, [1, 1]), cons(2, [])])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var groupSort = RNEA.groupSort;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { cons, groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['foo', 'bar', 'foobar']), {\n *   '3': cons('foo', ['bar']),\n *   '6': cons('foobar', [])\n * })\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var groupBy = RNEA.groupBy;\n/**\n * @since 2.0.0\n */\nexport var last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nexport var init = RNEA.init;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var sort = RNEA.sort;\n/**\n * @since 2.0.0\n */\nexport var insertAt = RNEA.insertAt;\n/**\n * @since 2.0.0\n */\nexport var updateAt = RNEA.updateAt;\n/**\n * @since 2.0.0\n */\nexport var modifyAt = RNEA.modifyAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport function copy(nea) {\n    var l = nea.length;\n    var as = Array(l);\n    for (var i = 0; i < l; i++) {\n        as[i] = nea[i];\n    }\n    return as;\n}\nexport function filter(predicate) {\n    return RNEA.filter(predicate);\n}\n/**\n * @since 2.0.0\n */\nexport var filterWithIndex = RNEA.filterWithIndex;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.0.0\n */\nexport var of = RNEA.of;\nexport function concat(fx, fy) {\n    return RNEA.concat(fx, fy);\n}\n/**\n * @since 2.5.0\n */\nexport var fold = RNEA.fold;\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zipWith = RNEA.zipWith;\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zip = RNEA.zip;\n/**\n * @since 2.5.1\n */\nexport var unzip = RNEA.unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { cons, prependToAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)(cons(1, [2, 3, 4])), cons(9, [1, 9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = RNEA.prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { cons, intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)(cons(1, [2, 3, 4])), cons(1, [9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = RNEA.intersperse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = RNEA.Functor.map;\nvar mapWithIndex_ = RNEA.FunctorWithIndex.mapWithIndex;\nvar ap_ = RNEA.Applicative.ap;\nvar chain_ = RNEA.Monad.chain;\nvar extend_ = RNEA.Comonad.extend;\nvar reduce_ = RNEA.Foldable.reduce;\nvar foldMap_ = RNEA.Foldable.foldMap;\nvar reduceRight_ = RNEA.Foldable.reduceRight;\nvar traverse_ = RNEA.Traversable.traverse;\nvar alt_ = RNEA.Alt.alt;\nvar reduceWithIndex_ = RNEA.FoldableWithIndex\n    .reduceWithIndex;\nvar foldMapWithIndex_ = RNEA.FoldableWithIndex\n    .foldMapWithIndex;\nvar reduceRightWithIndex_ = RNEA.FoldableWithIndex\n    .reduceRightWithIndex;\nvar traverseWithIndex_ = RNEA.TraversableWithIndex\n    .traverseWithIndex;\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var foldMap = RNEA.foldMap;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = RNEA.altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexport var alt = RNEA.alt;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = RNEA.ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = RNEA.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = RNEA.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = RNEA.chain;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = RNEA.chainFirst;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = RNEA.duplicate;\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = RNEA.extend;\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = RNEA.flatten;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = RNEA.map;\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nexport var mapWithIndex = RNEA.mapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = RNEA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = RNEA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nexport var traverse = RNEA.traverse;\n/**\n * @since 2.6.3\n */\nexport var sequence = RNEA.sequence;\n/**\n * @since 2.6.3\n */\nexport var traverseWithIndex = RNEA.traverseWithIndex;\n/**\n * @since 2.7.0\n */\nexport var extract = head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: map_,\n    extend: extend_,\n    extract: extract\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var nonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    ap: ap_,\n    chain: chain_,\n    extend: extend_,\n    extract: extract,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    alt: alt_\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = RNEA.bindTo;\n/**\n * @since 2.8.0\n */\nexport var bind = RNEA.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = RNEA.apS;\n","/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nimport { identity } from './function';\nimport { max, min } from './Ord';\nexport function fold(S) {\n    return function (startWith, as) {\n        if (as === undefined) {\n            var foldS_1 = fold(S);\n            return function (as) { return foldS_1(startWith, as); };\n        }\n        return as.reduce(S.concat, startWith);\n    };\n}\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.getFirstSemigroup<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getFirstSemigroup() {\n    return { concat: identity };\n}\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.getLastSemigroup<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getLastSemigroup() {\n    return { concat: function (_, y) { return y; } };\n}\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.getTupleSemigroup(S.semigroupString, S.semigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = S.getTupleSemigroup(S.semigroupString, S.semigroupSum, S.semigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getTupleSemigroup() {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return {\n        concat: function (x, y) { return semigroups.map(function (s, i) { return s.concat(x[i], y[i]); }); }\n    };\n}\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.getDualSemigroup(S.semigroupString).concat('a', 'b'), 'ba')\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getDualSemigroup(S) {\n    return {\n        concat: function (x, y) { return S.concat(y, x); }\n    };\n}\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = S.getFunctionSemigroup(S.semigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = S.getFunctionSemigroup(S.semigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getFunctionSemigroup(S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n}\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const semigroupPoint = S.getStructSemigroup<Point>({\n *   x: S.semigroupSum,\n *   y: S.semigroupSum\n * })\n *\n * assert.deepStrictEqual(semigroupPoint.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getStructSemigroup(semigroups) {\n    return {\n        concat: function (x, y) {\n            var r = {};\n            for (var _i = 0, _a = Object.keys(semigroups); _i < _a.length; _i++) {\n                var key = _a[_i];\n                r[key] = semigroups[key].concat(x[key], y[key]);\n            }\n            return r;\n        }\n    };\n}\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as O from 'fp-ts/Ord'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.getMeetSemigroup(O.ordNumber)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getMeetSemigroup(O) {\n    return {\n        concat: min(O)\n    };\n}\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as O from 'fp-ts/Ord'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.getJoinSemigroup(O.ordNumber)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getJoinSemigroup(O) {\n    return {\n        concat: max(O)\n    };\n}\n/**\n * Return a semigroup for objects, preserving their type.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const S1 = S.getObjectSemigroup<Person>()\n * assert.deepStrictEqual(S1.concat({ name: 'name', age: 23 }, { name: 'name', age: 24 }), { name: 'name', age: 24 })\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getObjectSemigroup() {\n    return {\n        concat: function (x, y) { return Object.assign({}, x, y); }\n    };\n}\n/**\n * `boolean` semigroup under conjunction.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupAll.concat(true, true), true)\n * assert.deepStrictEqual(S.semigroupAll.concat(true, false), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * `boolean` semigroup under disjunction.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupAny.concat(true, true), true)\n * assert.deepStrictEqual(S.semigroupAny.concat(true, false), true)\n * assert.deepStrictEqual(S.semigroupAny.concat(false, false), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n/**\n * `string` semigroup under concatenation.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupString.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.0.0\n */\nexport var semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var semigroupVoid = {\n    concat: function () { return undefined; }\n};\n/**\n * You can glue items between and stay associative.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.getIntercalateSemigroup(' ')(S.semigroupString)\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a b')\n * assert.strictEqual(S1.concat(S1.concat('a', 'b'), 'c'), S1.concat('a', S1.concat('b', 'c')))\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getIntercalateSemigroup(a) {\n    return function (S) { return ({\n        concat: function (x, y) { return S.concat(x, S.concat(a, y)); }\n    }); };\n}\n","import { constant } from './function';\nexport function getFoldableComposition(F, G) {\n    return {\n        reduce: function (fga, b, f) { return F.reduce(fga, b, function (b, ga) { return G.reduce(ga, b, f); }); },\n        foldMap: function (M) {\n            var foldMapF = F.foldMap(M);\n            var foldMapG = G.foldMap(M);\n            return function (fa, f) { return foldMapF(fa, function (ga) { return foldMapG(ga, f); }); };\n        },\n        reduceRight: function (fa, b, f) { return F.reduceRight(fa, b, function (ga, b) { return G.reduceRight(ga, b, f); }); }\n    };\n}\nexport function foldM(M, F) {\n    return function (fa, b, f) { return F.reduce(fa, M.of(b), function (mb, a) { return M.chain(mb, function (b) { return f(b, a); }); }); };\n}\nexport function reduceM(M, F) {\n    return function (b, f) { return function (fa) { return F.reduce(fa, M.of(b), function (mb, a) { return M.chain(mb, function (b) { return f(b, a); }); }); }; };\n}\nexport function intercalate(M, F) {\n    return function (sep, fm) {\n        var go = function (_a, x) {\n            var init = _a.init, acc = _a.acc;\n            return init ? { init: false, acc: x } : { init: false, acc: M.concat(M.concat(acc, sep), x) };\n        };\n        return F.reduce(fm, { init: true, acc: M.empty }, go).acc;\n    };\n}\nexport function toArray(F) {\n    return function (fa) {\n        // tslint:disable-next-line: readonly-array\n        return F.reduce(fa, [], function (acc, a) {\n            acc.push(a);\n            return acc;\n        });\n    };\n}\nexport function traverse_(M, F) {\n    var applyFirst = function (mu, mb) { return M.ap(M.map(mu, constant), mb); };\n    var mu = M.of(undefined);\n    return function (fa, f) { return F.reduce(fa, mu, function (mu, a) { return applyFirst(mu, f(a)); }); };\n}\n","\"use strict\";\n/**\n * @since 0.1.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.insertMany = exports.upsert = exports.pluckFirst = exports.getDisorderedEq = exports.join = exports.all = exports.any = exports.elemFlipped = exports.length = void 0;\nconst function_1 = require(\"fp-ts/function\");\nconst NEA = require(\"fp-ts/NonEmptyArray\");\nconst A = require(\"fp-ts/Array\");\nconst O = require(\"fp-ts/Option\");\nconst Foldable_1 = require(\"fp-ts/Foldable\");\n/**\n * Get the length of an array.\n *\n * @since 0.1.0\n */\nexports.length = (xs) => xs.length;\n/**\n * Like `fp-ts/Array::elem`, but flipped.\n *\n * @since 0.1.0\n */\nexports.elemFlipped = (eq) => (xs) => y => A.elem(eq)(y)(xs);\n/**\n * Check if a predicate holds true for any array member.\n *\n * @since 0.1.0\n */\nexports.any = (f) => xs => xs.some(f);\n/**\n * Check if a predicate holds true for every array member.\n *\n * @since 0.1.0\n */\nexports.all = (f) => xs => xs.every(f);\n/**\n * Join an array of strings together into a single string using the supplied\n * separator.\n *\n * @since 0.1.0\n */\nexports.join = (x) => (ys) => ys.join(x);\n/**\n * Like `fp-ts/Array::getEq`, but items are not required to be in the same\n * order to determine equivalence. This function is therefore less efficient,\n * and `getEq` should be preferred on ordered data.\n *\n * @since 0.1.0\n */\nexports.getDisorderedEq = (ordA) => ({\n    equals: (xs, ys) => {\n        const sort = A.sort(ordA);\n        return A.getEq(ordA).equals(sort(xs), sort(ys));\n    },\n});\n/**\n * Pluck the first item out of an array matching a predicate. Any further\n * matches will be left untouched.\n *\n * This can be thought of as analagous to `fp-ts/Array::findFirst` where\n * the remaining items, sans the match (if any), are returned as well.\n *\n * @since 0.1.0\n */\nexports.pluckFirst = (p) => (xs) => function_1.pipe(A.findIndex(p)(xs), O.fold(function_1.constant([O.none, xs]), (i) => [O.some(xs[i]), A.unsafeDeleteAt(i, xs)]));\n/**\n * Update an item in an array or, if it's not present yet, insert it.\n *\n * If the item exists more than once (as determined by the supplied `Eq`\n * instance), only the first to be found will be updated. The order in which\n * the array is checked is unspecified.\n *\n * @since 0.1.0\n */\nexports.upsert = (eqA) => (x) => (ys) => function_1.pipe(A.findIndex(y => eqA.equals(x, y))(ys), O.map((i) => A.unsafeUpdateAt(i, x, ys)), O.chain(NEA.fromArray), O.getOrElse(() => NEA.snoc(ys, x)));\n/**\n * Insert all the elements of an array into another array at the specified\n * index. Returns `None` if the index is out of bounds.\n *\n * The array of elements to insert must be non-empty.\n *\n * @example\n * import { insertMany } from 'fp-ts-std/Array';\n * import * as O from 'fp-ts/Option';\n *\n * const f = insertMany(1)(['a', 'b']);\n * assert.deepStrictEqual(f([]), O.none);\n * assert.deepStrictEqual(f(['x']), O.some(['x', 'a', 'b']));\n * assert.deepStrictEqual(f(['x', 'y']), O.some(['x', 'a', 'b', 'y']));\n *\n * @since 0.5.0\n */\nexports.insertMany = (i) => (xs) => (ys) => function_1.pipe(xs, A.reverse, Foldable_1.reduceM(O.Monad, A.Foldable)(ys, (zs, x) => function_1.pipe(zs, A.insertAt(i, x))), O.chain(NEA.fromArray));\n","import * as A from 'fp-ts/Array';\nimport * as E from 'fp-ts/Either';\nimport { Lazy, pipe } from 'fp-ts/function';\nimport * as TE from 'fp-ts/TaskEither';\nimport { join } from 'fp-ts-std/Array';\nimport { Errors } from 'io-ts';\nimport * as t from 'io-ts';\nimport reporter from 'io-ts-reporters';\n\n// Convert functional to procedural code >:)\nexport function valueOrThrow<E, A>(res: E.Either<E, A>): A {\n  if (E.isRight(res)) {\n    return res.right;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-throw-literal\n  throw res.left;\n}\n\n// Convert TE.TaskEither into a simple promise then return it's value\nexport async function valueOrThrowTE<E, R>(\n  taskEither: TE.TaskEither<E, R>,\n): Promise<R> {\n  return valueOrThrow(await taskEither());\n}\n\nexport const errorsToError = (errors: t.Errors): Error =>\n  pipe(\n    errors,\n    errorsToArray,\n    A.map(e => e.message),\n    join('. '),\n    message => new Error(message),\n  );\n\nexport function errorsToArray(errors: t.Errors): Error[] {\n  const result = reporter.report(E.left(errors));\n  if (result.length === 0) {\n    return [];\n  }\n  return result.map(r => new Error(r));\n}\n\nexport async function decodeForFunction<T, U>(\n  params: any,\n  decode: (x: any) => E.Either<Errors, T>,\n  fn: (params: T) => TE.TaskEither<Error, U>,\n): Promise<U> {\n  return valueOrThrow(\n    await pipe(\n      decode(params),\n      E.mapLeft(errorsToError),\n      TE.fromEither,\n      TE.chain<Error, T, U>(fn),\n    )(),\n  );\n}\n\nexport const logPipe = <T>(x: T): T => {\n  console.log(x);\n  return x;\n};\n\nexport const logTE = <E, A>(te: TE.TaskEither<E, A>): TE.TaskEither<E, A> =>\n  TE.bimap<E, E, A, A>(\n    e => {\n      console.error('logTE Error');\n      console.dir(e, { depth: null });\n      return e;\n    },\n    x => {\n      console.log('logTE Info');\n      console.dir(x, { depth: null });\n      return x;\n    },\n  )(te);\n\nexport const logE = <E, A>(te: E.Either<E, A>): E.Either<E, A> =>\n  E.bimap<E, E, A, A>(\n    e => {\n      console.error('logE Error');\n      console.error(e);\n      return e;\n    },\n    x => {\n      console.log('logE Info');\n      console.log(x);\n      return x;\n    },\n  )(te);\n\nexport function taskEitherWithError<T>(f: Lazy<Promise<T>>) {\n  return TE.tryCatch(f, error => error as Error);\n}\n\nexport const switchCase = <T extends string | number | symbol, U>(\n  value: T,\n  cases: Record<T, Lazy<U>>,\n  def: Lazy<U>,\n) => (value in cases ? cases[value]() : def());\n\nexport function assertNever(x: never): never {\n  throw new Error(`Unexpected object: ${x}`);\n}\n\nexport const assertEither = (\n  condition: boolean,\n  errorMessage: string,\n): E.Either<Error, null> =>\n  condition ? E.left(new Error(errorMessage)) : E.right(null);\n","import { EthNetworkName, Magic } from 'magic-sdk';\n\nimport { LocalStorageKeys } from './constants';\n\ninterface MagicConfig {\n  publishableKey: string;\n  network: EthNetworkName;\n}\n\nexport const getMagicConfig = (): MagicConfig => {\n  const storedNetwork =\n    typeof window !== 'undefined'\n      ? window.localStorage?.getItem(LocalStorageKeys.ETH_NETWORK)\n      : 'ropsten';\n\n  return {\n    publishableKey:\n      storedNetwork === 'mainnet'\n        ? 'pk_live_966F443FC2D0DF5D'\n        : 'pk_live_A7D9211D7547A338',\n    network: storedNetwork as EthNetworkName,\n  };\n};\n\nexport const magicClient = () => {\n  const config = getMagicConfig();\n  return new Magic(config.publishableKey, {\n    network: config.network,\n  });\n};\n\nexport const createMagicProvider = async (magic = magicClient()) =>\n  Promise.resolve(magic.rpcProvider);\n","import { formatEther, parseEther } from '@ethersproject/units';\nimport { AxiosError } from 'axios';\nimport { BigNumber } from 'ethers';\nimport { pipe } from 'fp-ts/function';\n\nimport {\n  ERC20TokenType,\n  ETHToken,\n  ETHTokenType,\n  PositiveBigNumber,\n  PositiveNumberString,\n  PositiveNumberStringC,\n  Token,\n} from '../types';\nimport { valueOrThrow } from './fp';\n\nexport function payloadId(): number {\n  const datePart: number = new Date().getTime() * Math.pow(10, 3);\n  const extraPart: number = Math.floor(Math.random() * Math.pow(10, 3));\n  const id: number = datePart + extraPart;\n  return id;\n}\n\nexport function formatError(err: AxiosError): Error {\n  if (err.response) {\n    if (err.response.status === 429) {\n      return new Error('Rated limited');\n    }\n    return new Error(JSON.stringify(err.response?.data));\n  }\n  if (err.request) {\n    return new Error(`Errno: ${(err as any)?.errno} Errcode: ${err?.code}`);\n  }\n  return new Error(err?.message);\n}\n\nexport function sleep(time: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, time);\n  });\n}\n\nexport const ethToken: ETHToken = {\n  type: ETHTokenType.ETH,\n  data: {\n    decimals: 18,\n  },\n};\n\nexport const eth8ToWei = (amount: PositiveBigNumber): PositiveBigNumber =>\n  pipe(amount.mul(Math.pow(10, 8)), PositiveBigNumber.decode, valueOrThrow);\n\nexport const eth8ToEth = (amount: PositiveBigNumber): PositiveNumberString =>\n  pipe(\n    amount.mul(Math.pow(10, 8)),\n    String,\n    formatEther,\n    PositiveNumberStringC.decode,\n    valueOrThrow,\n  );\n\nexport const weiToEth8 = (amount: PositiveBigNumber): PositiveBigNumber =>\n  pipe(amount.div(Math.pow(10, 8)), PositiveBigNumber.decode, valueOrThrow);\n\nexport const ethToEth8 = (amount: PositiveNumberString): PositiveBigNumber =>\n  pipe(parseEther(amount), PositiveBigNumber.decode, valueOrThrow, weiToEth8);\n\nexport const amountToQuantizedAmount = (\n  amount: PositiveBigNumber,\n  quantum: string,\n): PositiveBigNumber => {\n  if (quantum === '1') {\n    return amount;\n  }\n\n  return pipe(\n    amount.div(BigNumber.from(quantum)),\n    PositiveBigNumber.decode,\n    valueOrThrow,\n  );\n};\n\n/**\n * NOTE: 'quantum' value is required for 'ERC-20' tokens,\n * and should be retreived from the '/tokens' API reponse.\n */\nexport const tokenQuantizedAmount = (\n  token: Token,\n  amount: PositiveBigNumber,\n  quantum = '1',\n): PositiveBigNumber => {\n  switch (token.type) {\n    case ETHTokenType.ETH: {\n      return weiToEth8(amount);\n    }\n\n    case ERC20TokenType.ERC20: {\n      return amountToQuantizedAmount(amount, quantum);\n    }\n\n    default: {\n      return amount;\n    }\n  }\n};\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { Contract } from '@ethersproject/contracts';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { ExternalProvider } from '@ethersproject/providers/lib/web3-provider';\nimport * as E from 'fp-ts/Either';\nimport { flow, pipe } from 'fp-ts/function';\nimport * as T from 'fp-ts/Task';\nimport * as TE from 'fp-ts/TaskEither';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { BalanceInfo, ProviderPreference } from '../types';\nimport { erc20 } from './abi';\nimport { LocalStorageKeys } from './constants';\nimport { createExtensionProvider } from './extensionProvider';\nimport { taskEitherWithError, valueOrThrowTE } from './fp';\nimport { createMagicProvider } from './magicProvider';\nimport { ethToken } from './utils';\n\nconst getEthereumProvider = ({\n  mustBeMetaMask,\n  providerPreference,\n}: {\n  mustBeMetaMask?: boolean;\n  providerPreference?: ProviderPreference;\n}): Promise<ExternalProvider | null> => {\n  if (\n    !providerPreference ||\n    providerPreference === ProviderPreference.METAMASK\n  ) {\n    return createExtensionProvider({ mustBeMetaMask });\n  }\n\n  if (providerPreference === ProviderPreference.MAGIC_LINK) {\n    return createMagicProvider();\n  }\n\n  return Promise.reject(new Error('Unknown Ethereum provider'));\n};\n\nexport const getProvider: TE.TaskEither<Error, Web3Provider> = pipe(\n  taskEitherWithError(() => {\n    const providerPreference =\n      typeof window !== 'undefined'\n        ? (window.localStorage?.getItem(\n            LocalStorageKeys.PROVIDER_PREFERENCE,\n          ) as ProviderPreference)\n        : undefined;\n    return getEthereumProvider({ mustBeMetaMask: true, providerPreference });\n  }),\n  TE.chain(\n    flow(\n      E.fromNullable(\n        new Error('Ethereum provider not found, please install MetaMask'),\n      ),\n      TE.fromEither,\n    ),\n  ),\n  TE.map(provider => new Web3Provider(provider as ExternalProvider)),\n);\n\nexport const ethBalance = (address: string, interval = 5000) => {\n  const balanceObs = new Observable<BalanceInfo>(subscriber => {\n    const updateBalance = (provider: Web3Provider): T.Task<void> =>\n      subscriber.closed\n        ? T.of(undefined)\n        : pipe(\n            taskEitherWithError(() => provider.getBalance(address)),\n            TE.chain(balance =>\n              TE.fromIO(() =>\n                subscriber.next({ balance, decimal: ethToken.data.decimals }),\n              ),\n            ),\n            TE.fold(\n              e => T.fromIO(() => subscriber.error(e)),\n              () => pipe(updateBalance(provider), T.delay(interval)),\n            ),\n          );\n    const run = pipe(\n      getProvider,\n      TE.fold(e => T.fromIO(() => subscriber.error(e)), updateBalance),\n    );\n    run();\n  });\n\n  return pipe(\n    balanceObs,\n    distinctUntilChanged((prev, curr) => prev.balance.eq(curr.balance)),\n  );\n};\n\nexport const erc20Balance = (\n  owner: string,\n  tokenAddress: string,\n  interval = 5000,\n) => {\n  const balanceObs = new Observable<BalanceInfo>(subscriber => {\n    const updateBalance = (provider: Web3Provider): T.Task<void> =>\n      subscriber.closed\n        ? T.of(undefined)\n        : pipe(\n            taskEitherWithError(async () => {\n              const erc20Contract = new Contract(tokenAddress, erc20, provider);\n              const [balance, decimal] = await Promise.all([\n                erc20Contract.balanceOf(owner),\n                erc20Contract.decimals(),\n              ]);\n              return { balance: BigNumber.from(balance), decimal };\n            }),\n            TE.chain(balanceObj =>\n              TE.fromIO(() => subscriber.next(balanceObj)),\n            ),\n            TE.fold(\n              e => T.fromIO(() => subscriber.error(e)),\n              () => pipe(updateBalance(provider), T.delay(interval)),\n            ),\n          );\n    const run = pipe(\n      getProvider,\n      TE.fold(e => T.fromIO(() => subscriber.error(e)), updateBalance),\n    );\n    run();\n  });\n\n  return pipe(\n    balanceObs,\n    distinctUntilChanged((prev, curr) => prev.balance.eq(curr.balance)),\n  );\n};\n","import autoBind from 'auto-bind';\nimport axios, { AxiosRequestConfig } from 'axios';\nimport * as E from 'fp-ts/Either';\nimport { pipe } from 'fp-ts/function';\nimport * as TE from 'fp-ts/TaskEither';\nimport * as https from 'https';\nimport { Errors } from 'io-ts';\nimport queryString from 'query-string';\n\nimport {\n  errorsToError,\n  formatError,\n  taskEitherWithError,\n  valueOrThrow,\n} from '../libs';\nimport { IMXDClientMethodParams, IMXDClientMethodResults } from '../types';\n\nexport type ImmutableIMXDClientParams = {\n  imxdPublicApiUrl: string;\n};\n\nexport class ImmutableIMXDClient {\n  private agent: https.Agent;\n\n  constructor(private imxdPublicApiUrl: string) {\n    axios.defaults.baseURL = this.imxdPublicApiUrl;\n    this.agent = new https.Agent();\n    autoBind(this);\n  }\n\n  public static buildF(\n    params: ImmutableIMXDClientParams,\n  ): TE.TaskEither<Error, ImmutableIMXDClient> {\n    return taskEitherWithError(() => ImmutableIMXDClient.build(params));\n  }\n\n  public static async build({ imxdPublicApiUrl }: ImmutableIMXDClientParams) {\n    return new ImmutableIMXDClient(imxdPublicApiUrl);\n  }\n\n  public buildOptions(): AxiosRequestConfig {\n    return {\n      httpsAgent: this.agent,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n  }\n\n  private get<T>(\n    path: string,\n    decode: (x: any) => E.Either<Errors, T>,\n  ): TE.TaskEither<Error, T> {\n    return pipe(\n      taskEitherWithError(() => axios.get(`${path}`, this.buildOptions())),\n      TE.chain(r =>\n        pipe(decode(r.data), E.mapLeft(errorsToError), TE.fromEither),\n      ),\n    );\n  }\n\n  private getDailyPointsBalanceF(\n    params: IMXDClientMethodParams.GetDailyPointsBalanceParams,\n  ): TE.TaskEither<Error, IMXDClientMethodResults.GetDailyPointsBalanceResult> {\n    const url = queryString.stringifyUrl({\n      url: `daily-points-balance/${params.starkPublicKey}`,\n      query: { date: params.date },\n    });\n    return this.get(\n      url,\n      IMXDClientMethodResults.GetDailyPointsBalanceResultCodec.decode,\n    );\n  }\n\n  public async getDailyPointsBalance(\n    params: IMXDClientMethodParams.GetDailyPointsBalanceParamsTS,\n  ): Promise<IMXDClientMethodResults.GetDailyPointsBalanceResultTS> {\n    return this.decodeForFunction(\n      params,\n      IMXDClientMethodParams.GetDailyPointsBalanceParamsCodec.decode,\n      this.getDailyPointsBalanceF,\n    );\n  }\n\n  private async decodeForFunction<T, U>(\n    params: any,\n    decode: (x: any) => E.Either<Errors, T>,\n    fn: (params: T) => TE.TaskEither<Error, U>,\n  ): Promise<U> {\n    return valueOrThrow(\n      await pipe(\n        decode(params),\n        E.mapLeft(errorsToError),\n        TE.fromEither,\n        TE.chain<Error, T, U>(fn),\n        TE.mapLeft(formatError),\n      )(),\n    );\n  }\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export const constantPointsHex = [\n  [\n    '49ee3eba8c1600700ee1b87eb599f16716b0b1022947733551fde4050ca6804',\n    '3ca0cfe4b3bc6ddf346d49d06ea0ed34e621062c0e056c1d0405d266e10268a',\n  ],\n  [\n    '1ef15c18599971b7beced415a40f0c7deacfd9b0d1819e03d723d8bc943cfca',\n    '5668060aa49730b7be4801df46ec62de53ecd11abe43a32873000c36e8dc1f',\n  ],\n  [\n    '234287dcbaffe7f969c748655fca9e58fa8120b6d56eb0c1080d17957ebe47b',\n    '3b056f100f96fb21e889527d41f4e39940135dd7a6c94cc6ed0268ee89e5615',\n  ],\n  [\n    '3909690e1123c80678a7ba0fde0e8447f6f02b3f6b960034d1e93524f8b476',\n    '7122e9063d239d89d4e336753845b76f2b33ca0d7f0c1acd4b9fe974994cc19',\n  ],\n  [\n    '40fd002e38ea01a01b2702eb7c643e9decc2894cbf31765922e281939ab542c',\n    '109f720a79e2a41471f054ca885efd90c8cfbbec37991d1b6343991e0a3e740',\n  ],\n  [\n    '2f52066635c139fc2f64eb0bd5e3fd7a705f576854ec4f00aa60361fddb981b',\n    '6d78a24d8a5f97fc600318ce16b3c840315979c3273078ec1a285f217ee6a26',\n  ],\n  [\n    '6a0767a1fd60d5b9027a35af1b68e57a1c366ebcde2006cdd07af27043ef674',\n    '606b72c0ca0498b8c1817ed7922d550894c324f5efdfc85a19a1ae382411ca2',\n  ],\n  [\n    '7fa463ee2a2d6a585d5c3358918270f6c28c66df1f86803374d1edf3819cc62',\n    'a996edf01598832e644e1cae9a37288865ad80e2787f9bf958aceccc99afae',\n  ],\n  [\n    '3d4da70d1540da597dbae1651d28487604a4e66a4a1823b97e8e9639393dbec',\n    '45cdef70c35d3b6f0a2273a9886ccb6306d813e8204bdfd30b4efee63c8a3f9',\n  ],\n  [\n    '1e448fdbcd9896c6fbf5f36cb7e7fcb77a751ff2d942593cae023363cc7750e',\n    '30c81da0f3a8cb64468eaa491c7ae7b4842b62cb4148820da211afc4caffb3a',\n  ],\n  [\n    '6531acf1a7cb90a4eb27de0b7f915e387a3b0fd063ba6e1289b91f48411be26',\n    '31330f5daa091889981a3ea782ae997f5f171336ed0487a03f051551a2cafa2',\n  ],\n  [\n    '54be016394d5662d67d7e82f5e889ed2f97ccf95d911f57dd2362c4040ed4f4',\n    'c6cb184053f054d6a59c1bf0986d17090d25089b3fdcdaf185edc87ef113e5',\n  ],\n  [\n    '35b9ecd0499ca1d5d42dcbb0c6b4042b3733c64b607ca711e706e786ef2afc6',\n    '5624b476a5b21c3a544f0712d4817b06ad380a5a6529d323bf64da8ef862d8d',\n  ],\n  [\n    '4ce0378e3ee8f77ed58f2ddbd8bb7676c8a38bfb1d3694c275254bd8ca38e23',\n    '5a16fcbff0769c9cf2b02c31621878ec819fff4b8231bff82c6183db2746820',\n  ],\n  [\n    '648d5c6f98680a1b926bfeb01c00224c56fdcf751b251c4449c8a94f425cfcf',\n    '72c05ac793cd1620a833fbe2214d36900ebe446e095c62fcb740937f98cca8c',\n  ],\n  [\n    'bd09be3e4e1af8a14189977e334f097c18e4a8bf42577ef5aafa0f807bd89b',\n    '6e0e72ed7eb65c86cee29c411fb4761122558ee81013344ba8509c49de9f9b6',\n  ],\n  [\n    '35ea4e339b44ae7724419bdfbe07022253137a4afb7cbaffad341ea61249357',\n    '3665d676a026a174f367bb4417780e53a7803cb02d0db32eb4545c267c42f14',\n  ],\n  [\n    '36457bc744f42e697b825c2d1afd8f4029d696a4514710f81da52d88e178643',\n    '7c93715896735492a68c7969a024b3a8fd538bffc1521538107de1a5f13ce9c',\n  ],\n  [\n    '5b3a08ebcf9c109cc9082f70d9df2b9c11b5428ee23917b4e790c4c10f6e661',\n    '9d7b42ab0c20f5510df7ea5e196eec99342739077e9a168198c89da859753',\n  ],\n  [\n    '21883ef8580fc06e59481955d52ece3aca6e82c8c9fc58e216dcf46f96990c6',\n    '51a6423543e6e8a43e71da34cd90f5b520b8d33b67c4bf857573ab9e301aa4c',\n  ],\n  [\n    '19e86b77f9b581e81092b305c852faf53940a8f15f0a6990c414f04c0fa7ef9',\n    '515630e35d4398c9c79fc4ee08e1023fa47d8e03c6e7819c6d2ccef45398fa',\n  ],\n  [\n    '888ab8eb4c31bb2ac5b54aa320dbe1a69c96b864e8a5f54d89c1d1a6b86c24',\n    '730e148467f6a55ce22c5296f5380df88f38de76ef0b2de844cd3094aaaf3ea',\n  ],\n  [\n    '75e79ff13a894e7120dac17b7429c0c32ce7828f726c9973728c0977a5f5977',\n    '4960526e59c1c736561a201bc56f7d762641b39f609d273cc996f5d9197cfb8',\n  ],\n  [\n    '640fe009249115d7254f72ecafb3006139e4bed7e9041af51458c737282d1d5',\n    '3cc6c978a575246e2ce4f7ef1fcc7f63085db9ff98a1b1f3fe374087c0332c',\n  ],\n  [\n    '6d6fd09ccab7c26de9b3906191235deb5c34685580c488275356a05e209ca96',\n    '7157f81a34213dd8f91dea4f6df1bcfabc4ee091a3049eeeb3b7923d39b8645',\n  ],\n  [\n    '5531ca1d00f151d71da820918f74caf2985b24dca20e124721fff507b5a5876',\n    '518529643d3f25e47f72c322223ba60a63d6bfe78cf3f612215d9c19bf29200',\n  ],\n  [\n    '6192d454e4f8fe212bdfccd5b15dd5056d7622ffe456c6c67e5a7265aea49c4',\n    '2377a45dc630017ae863cb968ddb38333a70c7946d8684e6d7a6213f634b7bc',\n  ],\n  [\n    '542fb44b4ef3640a64fdb22a2560fb26668065c069cf31d1df424819a39ff18',\n    '5dbae9b0948e0361aea443503840341c322aa1a1366ce5390e71bf161f78f8c',\n  ],\n  [\n    '299ff3e3412a7eb4cb4a3051b07b1be2e7b1c4b789f39ffb52cba3d048b71de',\n    '1951d3175c02761b291d86b6c0a08387ad5e2a2130ccc33c852530572cb3958',\n  ],\n  [\n    '628ce3f5367dadc1411133e55eb25e2e3c2880d6e28754a5cb1c5d109627e73',\n    'ae3e9b7d50964e28bd15380400b7659b87affdef5d2586cbefcd9be7d67c0d',\n  ],\n  [\n    '6ea54aff064895eccf9db2283225d62044ae67621192b3346338948382f5933',\n    '6431507e51aadacfaf39f102a8ff387756e9b5e1bc8323d44acae55130d93db',\n  ],\n  [\n    '28097d50d175a6235320fe8cfe138dd9e46895d189582e472c38ad7a67d923a',\n    '7f9eab4133d7d09a7ff63368d6135c26262b62336eca1b5ca33f2096ce388ba',\n  ],\n  [\n    '619fd09cdd6ff4323973f256c2cbdcb224f7f25b8aef623af2d4a0105e62e02',\n    '2c95f0ae11d47eeae1bc7f1350f75f9185c5bc840382ceb38a797cae9c40308',\n  ],\n  [\n    '641c18982ced304512a3f2395942a38add0d6a7156229c2a7c8b8dfbe9beb96',\n    '6f6288c9c659b6af5ac975f4180deffe53d516399b2cc62f31732e9d4ba9837',\n  ],\n  [\n    '58ab546e51fe49fc5a382e4064a2bd6cfc268904412f86c26de14f28a71d0f2',\n    '124b7217943e7e328408e8afdfa7da00dcbc94a2bb85fd8e01fb162d2c2c0a9',\n  ],\n  [\n    'a82c2fdedbb26c3c762a12f7e86b0e01e65320e0a25a8399d665f6e266bf74',\n    '1a1de28e253f3e10f44d0111e8074f882d7f42e5900780ccbdc31da372d3fd8',\n  ],\n  [\n    '744c725a7455a992e3cf5bd007bc234dd4668dba285f553f38350ad94c1615b',\n    '7f721a87f48798bdc4a9c0eb88559e2ad7a74112fd901e70ea159e67a9c33f',\n  ],\n  [\n    '434df142ddaa60f7881b6348d91687de40457de7ccfb07f0304b9e820705d0c',\n    '7fae425e3b53f97dd1f5b20e49ed9fe24ff1efc341ba5e017ac89cf8df0cc39',\n  ],\n  [\n    '7a1e2b809dff46277021cbc376f79c37e1b683bbd6bca5317014f0dc0e1ae73',\n    '56790278a231912c334eff05281e08af1558e85516b4411ef64647c13bea431',\n  ],\n  [\n    '4931b7990348d41cf8907be79f45bb7991fd18f8a57868351c92fa7a34cbcd7',\n    'ca35091815cdf0837d396e25aad6052ad32d497a33b123256cffdc008bc50e',\n  ],\n  [\n    '250b815d352fd89f8210b624b147ea7d0a4f47bcac49f3ac9b777840da93ebe',\n    '1173f10e9691948b7da7632f328520455aadcba46e017f891e0a1d7da2bef04',\n  ],\n  [\n    '2223b85032fa67292f6e1f822628e6756e5c3cc08fc252ab88d63d624e4dfb2',\n    '55619ba96a7dcec77832fcb22cd5c21c7dcebc0280d730cba0002b67e0a8c63',\n  ],\n  [\n    '249b131e04de73af9820d3e22492d9ec51bdc0c4c4f34d95352fa44dd61f245',\n    '7576d3b5d136368ff01170a77d8286d0d1c7c40688862fb40813b4af3c6065e',\n  ],\n  [\n    '6777915d9b4769027eb7e04733f8a2d669c84fe06080f55e8a55674dfbf9efb',\n    '640d0ff384c9635e1af364760f104e058e3c86209fa9d2320aeac887b2e02d8',\n  ],\n  [\n    '2abe3f237681052f002414399111cf07f8421535af41251edc427a36b5b19c9',\n    '636ce4deaf468a503ab20ccb2f7e5bdc98551656ebf53e9c7786b11dd9090be',\n  ],\n  [\n    '4d5cc5414758ea1be55be779bd7da296c7e11f1564d9e8797ceea347c16f8ea',\n    '1a680c4c410cf5ddc74e95ff2897c193edaaecce5b2cde4e96bbae5c0054eff',\n  ],\n  [\n    '46c375c684b30adf4d51de81e92afee52b1a3847e177403372c82109373edca',\n    '1eaadc5783c90a0261306423d52009e991126b3f620e9cb6cffca41ca096f4f',\n  ],\n  [\n    '2ddfb71f51205888118cbabba8fd07d460a810289bfdeeb7118707e310cb152',\n    '1fd905d07b3933be886f2518246bdafa6f33259a174668808223cd7c28183c7',\n  ],\n  [\n    '386f3879960713d41fdb3b1e41bbebf26b1c0e27a9a75bb1adcc1a0d3e8547b',\n    '2b21498c0f34ec6f17c720334dc0f36021c2f87afbbbc8847d0bd536eb265e5',\n  ],\n  [\n    '407eae62c6c4de3b942195afec3f45efec71ddb5e6edee3d427631bcdbf9b90',\n    '436e7f2d78268ef62c4172d2ff1469028bad1f1d0f97ab007064418e61caa8f',\n  ],\n  [\n    '1b881175e21201d17e095e9b3966b354f47de8c1acee5177f5909e0fd72328f',\n    '69954b1a9b8bfccf8ec384d32924518a935758f3d3662ef754bcc88f1f6f3ec',\n  ],\n  [\n    '7d545a82bff003b8115be32a0c437f7c0a98f776bcf7fddb0392822844f3c5e',\n    '34b6e53a9565a7daa010711f5bf72254a4e61da3e6a562210a9abc9e8b66d69',\n  ],\n  [\n    '299b9fcd4fadfc4b6141457a3036aaa68501c23df579de26df69d4def89b913',\n    'b95bf2c2bb303c38bb396382edc798ca6a4847e573ce19b7b08533d1912675',\n  ],\n  [\n    '551f5a4dae4a341a3e20336a7d2f365ddd45849351ec6dd4fcbedfe4806d5d5',\n    '5865c977a0ecf13ce85ae14c5c316872080bd36f0f614f56b6dfc7ece83792e',\n  ],\n  [\n    '7a1d69c08e68c80ad8b310736e6247a53bcba0183b9b8798833bc696a0fb6e2',\n    '3ce803a20ebb3b120d5eaf0ad64bed0522fad1a0f2ce39a5c5cbae98c4438f6',\n  ],\n  [\n    '28acacc0bc41d84e83663f02b36981a2c8272ecd72d3901164be2affb09c504',\n    '7a5aee0b160eaff5b5968ab1a0304ce58c3d5ae0148d9191c39e87668229e5b',\n  ],\n  [\n    '1f78cfdbcc767b68e69a224a077468cdfcb0afd6952b85bccbdb96d1fb8500b',\n    '4772ba173c6b583284eb001cfc2a124104833f464ff9df096443e10ef3e9dd4',\n  ],\n  [\n    '2774108962ca9897e7f22c064d2ccedac4fef5fc9569331c27cdc336c95774b',\n    '9e13d79b68e8dc8091c019618f5b07283a710ddf1733dc674a99fc32c12911',\n  ],\n  [\n    '770d116415cd2c4ace0d8b721dd77e4a2ef766591f9ec9fa0b61304548994ed',\n    '42165d93c82f687635aa2b68492b3adffd516beb4baa94520efa11467a209fd',\n  ],\n  [\n    '5e6e4ece6621e2275415e1fda1e7c4f496de498b77c0b913073c6a6099394b9',\n    '3d92ce044fc77fa227adc31f6fc17ef8b4ec1c5aafc44630c0d9195075bf56d',\n  ],\n  [\n    '6e69c717b5d98807ff1e404a5187a9ceaf0110b83aa15a84f930928b1171825',\n    '1ee7cfc3a9744d7fa380ba28604af9df33ac077724374c04588bd71fa16b177',\n  ],\n  [\n    '404318f2d2ceb44f549c80f9d7de9879d8f7da4b81e7350c00e974ebf2daef1',\n    '3934831b5af70d17a3f1da9d2931bd757e6acf2893236264fc7e0d92ff1a1cb',\n  ],\n  [\n    '20dcb6f394fea6d549b2e75748f61b7ec03b6e52319cb14163373a9c22bb9dc',\n    '106a8c96cfb95a331618b7416d1498554730499e194a58fbf63019890480fc7',\n  ],\n  [\n    '119000f277ccee013e6bb121194ec1ab5460fb6a96eb702a14079865f4170aa',\n    '1737a32f5415e8720a5606ec1dd4756f02e7c6817e3723b453d091f2d192773',\n  ],\n  [\n    '45d0fb5cd95db76d05dec3faa12e467a308eabaad363a062353db3cd2d9b749',\n    'ae08691b5b0cdd19ec499132421638f470f493320e4003d123ab1da761b965',\n  ],\n  [\n    '1257b3e65cdfb6367c6d0942327e799bc66eb221e70c6573a9862889eb51c38',\n    '593309fd45755dd2cc4afd2b9316bc4638b0c5ddb3009694fcb7b250d0c8a2f',\n  ],\n  [\n    '186dcf9950f72e868014a8accf14aa36e82a7a2a29f86ba37f6632da4189db3',\n    '55684c9f7a043fc523ed78f756f834b4db823d5e4161bd79602c17d55a5cd8c',\n  ],\n  [\n    '58791d5569f282f5c3b01ecdc9388df7ba3ca223a2dc1eed5edaf2a1d302fb9',\n    '6298d7dd51561a045bb4089deda9f40b2865589ed433e56d54554f8b45e79f0',\n  ],\n  [\n    '13fd87144aa5aa4b24d5a7bf907d8280d15937fed262d41084898cb688fc28b',\n    '3fa54367770cc4479a857411ddcabe86627b405ce1cd14ad3b2863bde13abe4',\n  ],\n  [\n    '48118139445415f0c1879224e2dee744ed35280ff00537260402a1741ec3676',\n    '4dfa39dadaabecfc54ecb7a25319444f8e952782d863790e42a9887064fc0c1',\n  ],\n  [\n    '4ad031bb9eda84f2fe5d354c7948d41558ca657a04508654721810ee72ef158',\n    '620ebd5d0086b92c6009a42777b946a351c2c7ba852b57d3c9905fc337459ef',\n  ],\n  [\n    '4a34abb016ad8cb4575ea5bd28385d2348e5bcc0cbba90059f90f9c71f86e8b',\n    '4f781829ad83f9ed1e1b6de0e5f4ac60dfdfe7f23cb4411e815817e705e52c8',\n  ],\n  [\n    '7fc632d7512aab5356b7915dca854c8b12b369ab54f524fbce352f00eb9b9f9',\n    '2ce80b944fc9158005f630b34385d50c3ad84450a9e1e529925b3211dd2a1de',\n  ],\n  [\n    '65ed10347503cbc0216ca03f7536cca16b6abd18d332a9258685907f2e5c23f',\n    '3be1a18c6bfa6f2f4898ebefad5a8e844c74626d5baa04a820d407fe28bbca6',\n  ],\n  [\n    '1a8abba1be2e276cdd1f28c912280833a5ede1ec121738fcca47dc070dcc71d',\n    '21b724378bc029a5199799df005922590d4e59cae52976f8e437bf6693eec4a',\n  ],\n  [\n    '3a99c22dafcfe9004ebb674805736a26aeed7ed5d465ae37226dcbe270a972b',\n    '5bf67552af08e1e6e2a24bf562c23225e89869cab9bef8becb3669175a3c94f',\n  ],\n  [\n    '4a6a5e4b3501f2b7bbdd8da73ea81ffca347170bdfb6776a037cdd74c560fb4',\n    '5af167ebb259c2da88740ec559ee04052bb66480b836cadd0e2590c32d7111b',\n  ],\n  [\n    '6890d95308525f0bac9dc25cc1189eb92d29d4b3fe61bc8aee1c716ac17b1e8',\n    'e6f23f78e882026b53ea4fac6950e56e3da461e52339eb43d2fdb2dade7ca9',\n  ],\n  [\n    '748f4cf4f027efdeaed7c7f91ef3730ff2f2bb0bfc2db8f27aadde947f7d4d5',\n    '3a1cbc550699411052c76293b8c41a3a8a1ecf12cbbc029a1b2b6ea986fca93',\n  ],\n  [\n    '7321f3f581690922cd0dec40c9c352aae412ec2ccdf718f137f7786ab452cd3',\n    '5be5130c9277cdb76d7409452438ec15d246b211dd1e276ee58e82a81c98fd4',\n  ],\n  [\n    '6c4d6cb7e7ae70955224b8a912ff57ca218635a2436b36cee25dce8a5cdf51f',\n    '32f8c03c6db3246946e432e4148e69f5628b200c6d7d72449df6eeac0998039',\n  ],\n  [\n    '1dad5f2e795ea6fa5177f110989516eacf8fb37bd6a091c7c93f1d73a2fe309',\n    '56b2298c538180e99dea3e171dbb5c6fba0bd0a9ed40537277c0c2373a8e2c4',\n  ],\n  [\n    '1610605baacc9bc62c4cc923dc943347cfece7ae241e746fbe6c2c878221dbd',\n    '431a82d657e0d109d00dea88cf3fa9b999845221b7b5590a20c40fc71368c1c',\n  ],\n  [\n    '6a4f5c787fb09a5be2b04d2eafa1e6f3d3c863ee22960eb0b64f6eaf6659162',\n    '14dbc3eaea6146ee7eaace5a91ed9430dad3a47e9ca2f68b455171f8fe6a7b3',\n  ],\n  [\n    '738415b73e55412b0e582e45ff0d7bf4b1bf2922db581783fdcc75559f40e',\n    '33825aeb3fd8459999eb418d15102ba5864b069c6ea517f0c6e9eab8d9aca47',\n  ],\n  [\n    '2603e72ce53985c70782774057a17944f7b4ce224a809be4e2b5af3606aa1d8',\n    '92822921809c42318f42dac4d773325f41c43069e990adac7818a45e2554dc',\n  ],\n  [\n    '181cd967ab4615357cc96c82eae9152ce7598c1a1dfdd91a458bddb016ae9fe',\n    '5d562fdaeb0e12647e230e50eaf216bed52fa73c6b7378821a3bfc4cd66d4ff',\n  ],\n  [\n    '1121726069b9ef5954ba6490100b226e0be53fef3e071b7c58a1286174b789a',\n    '4b25594cf4e9eb2d14b3f52f2661a9992234fc222c0a0d44517cb77deb9c16f',\n  ],\n  [\n    'e543663969b915337f105f80995a77b356f1a51d8b4a4fb12d44364130e873',\n    '34b2e3c009fdab4cb7349a580df2e64c0098a123280078e5da6623a9ec6b44f',\n  ],\n  [\n    '4e2f8909bb62de5ef65600e61bbf969293815296b6e23702875e049b3ce5c45',\n    '3cb81f2c21f22a7add26fa38a9ce5d9cce1bb251bd2698f90c34ff0a84f7af',\n  ],\n  [\n    '37b546e403a1ba970c17b67c2f1361ab9c803f8d2b5cd93803014faa08861ed',\n    '37079184ea46272f5809b523d060686633f7995167897a153be1772fd6566f6',\n  ],\n  [\n    '27bddca77f7bd7f66b3693567a4238f2e6751d95b0bcb409f6b24d08f84798c',\n    '6417a85cbfd6fc02df560d3963a241a986baacdfa423f65d7227ce49a96c57d',\n  ],\n  [\n    '2de71a39aa043057d1bc66e45f804542acddf18f7a6d88c0d7fb0ca240debdf',\n    '306c1ce39ab46300f7cca0f3a2fbfa77296a27e24bc66b0b8044968ec0ee413',\n  ],\n  [\n    '307c877154364c0c03534e7327d5a88e1380ceef6481567ade37a14ee7c1a72',\n    '3404bc7dbfb33b95d922d0693aaf9358f77888d7d95e773c38d83dbe2e5f995',\n  ],\n  [\n    '79f09ff7c60850e5f5ea020722659a1ed27db4c95dca131f99552f785c8afbc',\n    '40429528c099349b426ddbf129497176951a64a53db5f9d8bd2be0252cb22b2',\n  ],\n  [\n    '4027dc6b56d446e5972f35464eeac85c5254ef377c902d9fe37aea841bb5292',\n    '7c3ea37689ef679fa2f5c7e031a78e23d484a8317990fd34d44d95cc1db3717',\n  ],\n  [\n    '645dbf78a3c228c4b7151450b5e65edb58e71f37e1e4bc5f471e0f1abd6d9c2',\n    '15cfe7850f327b256e23b00627451560c5c6ab60db78d45b7ab286afb6f13ab',\n  ],\n  [\n    '1503ca373757677ad1d911a2b599d01c46eb879d1ce21ae171c7e439846a85f',\n    '583eb269b7030da6a0c324026919de3f9489d2ff6ae0e6320c36f05469ad66c',\n  ],\n  [\n    '66e1819ba3ec4ad4ae9f7d7588d23baa004e29d3aad2393d52af204a81626ca',\n    '505249980cbe6273b82ad5038fe04a981896f4117345ac1abcc67e2525c0ee4',\n  ],\n  [\n    '5ec20dbb290254545f9292c0a8e4fbbfb80ad9aab0a0e0e9e9923f784d70ed1',\n    'bdb1ca3a859227cf5d00eaae1f22584e826ed83b7ccdb65483ed5213dc4323',\n  ],\n  [\n    'a5c1a5011f4b81c5c01ef0b07c0fbf0a166de77280f0ae241f2db6cba15194',\n    '4444521fb9b33d7dfeb1247d0ee1a2b854ad166cb663d9dd2e686909362a689',\n  ],\n  [\n    '1f35335de40e00c62642dac2fda8b30f071986ce4f11db849df11bc45ad4e0c',\n    '7801a2c761b90fd4477ba0be9a775003d5dfcd959b1ed198b4681f15e7acbf',\n  ],\n  [\n    '48db4798cf6821c1ffb8178b1d3bb6020e04186c96aaf4670972d367f4ed5f',\n    '781019494df95b888f1578f1b4a3f8e125ea60eca47ef9207a10630671217a3',\n  ],\n  [\n    '17f653d904210148a8e74d8e719a3061683c164aa6d79c902a19f185ab437bd',\n    '6780e97985932c3860d810af1e065d454b1cb4be0e7ffe2d8cea7d52526e223',\n  ],\n  [\n    '5c4d0c7432f9b0070436240f9855adae1467cdc9826952ae01b68cd52a3ad89',\n    '1c5747f968ed91261b7ae9bf1023c999da9816e37de602d6a1a50d397752bff',\n  ],\n  [\n    '6fedd7639fdaa2f7bad4ca0b391710f6f8a7e890250ae8ae4252bb8b39a1e58',\n    '436a215f655a3fd3778b2335ffdc9aca6b98474e43d764c1f8362830b084f0e',\n  ],\n  [\n    '7fbd45a889c5e9d127bb4f8474d6be7cb9796bbfff923b75e42a1ad4cae37d6',\n    '484bd12622a6ba81cd53049c550d9ed682a8e765b656b1cbff9bbea637bd1f4',\n  ],\n  [\n    '17d984d47937263f7966a3e7b1eea04071e678494bd749c9e02b48b3234f06d',\n    '7b341ff08722c4e161005d0037204a7a2001fdda7af2cc1a0b04a027f115a0f',\n  ],\n  [\n    '7f1822045db45ea07e1519c3ee1f7705915f35fe4dd8db1e8921b5d1c740edf',\n    '33d41e06b93320ad1b3d9580380ec797a05dac3f1cc8008899110ebefde2f78',\n  ],\n  [\n    '7b19453ecb74b7d0e2a66b9890ff73bfbbcd61a266abd6d82dbe665bf32f34d',\n    '6dba2355420dac582b1f349609ea1c89b89bba2d1a68a0642f1dd12d86e73cb',\n  ],\n  [\n    '273e82a15f395ddf2489a95685bec8bac62c4b459d1b28987d3cb27e4bc9128',\n    '653375b48a4cf5d5b101c9ef533039bedce5dbeef3f59e8f168bdc99b06ca5f',\n  ],\n  [\n    '3006c9e7fc6a553d8eb4e8a47ce9f10d1a39576ac255ae9e0a4ce3869e76212',\n    '65fe9e2ef2aae608be309332d464f57e28f1df5de1a6a519751b056971f932e',\n  ],\n  [\n    '5e8f384c8a4607fbe9789fcc52d54249d304d698562597d114c1d81452d3dee',\n    '3c8bc78066b5d947dc1e405e326ee55ea606c7988f666748d259850fa259a22',\n  ],\n  [\n    '7841b2102e9aa103fb53a642b3e167b21113ea44751ab38e0b5ef8312654db9',\n    '71bf5c8308fcf9c4a7847494cd9bdd946fddf7d3a37e8bb0b201ff2343deb8e',\n  ],\n  [\n    '40f68027420c11e3ade9aae041978dc18081c4f94943463aac92d887f922a62',\n    '499c6062594a6c7e21a3cb91ea451813393bff365a27a08f1a515439b83cf42',\n  ],\n  [\n    '6ce77a50d038b222634e87948df0590b79d66087b01e42b9b6d8fa30ebb1465',\n    '35f5c46bb1be8555a93f155a174d54ec048c2ac8676e7c743054ddc52709d37',\n  ],\n  [\n    '604f8b9f2dacb13d569262864063c2d4bb2b2cd716db6eeb2b1eeabc57746f6',\n    '68c6799e24f3b44eec3049973445174727a66970f1614a782efa2b91ab1e457',\n  ],\n  [\n    '73d620f3bfe77f672943d448d7dc05327adf64b8e7af50039c469d7f7c994c4',\n    '4859deb36eaf0c802f0d1514602368143a33ec6ce8fd55248b59025debc6afb',\n  ],\n  [\n    '3fd2bcd1c89d706a3647fbd354097f09c76636e93ae504973f944d8fc3bcc1',\n    '677ef842cf5eb2444941f527abec567725e469469192354ad509a26ebb3d0e0',\n  ],\n  [\n    '39222ea924ac17b533c72ffb2c47ffdc11d6a7f7c70fbde3a10fb0b8f35eb2f',\n    '20dc4bd1089019bc1d7379b4feb3eae6eb5af59e9f253845da9fd633057e952',\n  ],\n  [\n    '326f58994e1347f62e4102183215b5db956378d2f61f14aba4dec94577f53c',\n    '7a03284c296003bbe05178a1d82efdb7b8125511d63e20e50aed789c2e52e1',\n  ],\n  [\n    '53aa8939c74d4ee58f03bc88bace5a45c7bfcf27466201da05dc6723a5f5632',\n    '2e32535ca7732904a048183247b04b426ecf9b39fc393a9cebe92fb1dc7a7f1',\n  ],\n  [\n    '6cee1a03145e93b3e826e6067005f09c06099c98198c91c222407ba5c8c132e',\n    'beaecad1274e7c6e5476a100c271aa1a6f86ee5a9fa5c2f26124d5886fa63',\n  ],\n  [\n    '3ec659b8175e1be1bd5a252108714776b813e330393f587814f5f1f32a73332',\n    '529a5cf9f8c237ae69a94217d173c8d19c156952041f5c980da557990863fa7',\n  ],\n  [\n    '3d66ec5963d0c534d4139c8cef2e1ac48b3e7965fafabf58be26f903318af4e',\n    '3d3f2de7a95f59b683725ee6283cbaf31f97c4b600df9a4621413223a468740',\n  ],\n  [\n    '7fb38ace8e0932fac2ea0d3eb676db8d684db1817e2e4d59da7996ce398b4a',\n    '68f92bd5768cdd4710249f9d49ef1d5654e497b9a4ba10bd2971366d83fb400',\n  ],\n  [\n    '1c4a49314d6b4969cdd142c76ceb7682bfb868ace7f7568b0fc8635bda5a9fb',\n    '5fc0519f1f4cc10b5771312458748c036313b87707ed0540026ac64a5955aa9',\n  ],\n  [\n    '3073c95d08d3b97caea5f0be16b2789bee766f76b7e5499f8ce8f96abb0f344',\n    '52a8974b4eb9a1f6a0ae2c83cb4715bf18d73f057255fcb3f63b74f7e78f590',\n  ],\n  [\n    '44485b16d597a5de3604df6f7ed7e00b8aeef9e7e8dea8688255153b8bb16aa',\n    '6cccb0ba170123266f24b5d93a744397dc2c44820edc4f8f5b9a0f5c9b3b940',\n  ],\n  [\n    '7618f77b7b32d512688dd62e0b48231d9574c6361e8be353a7dc04f7c3a115e',\n    '78ffcd16d80636381ca231aae70d99c9e20298b4f5388fd823ea9fa2b8ddfd9',\n  ],\n  [\n    '7dc82fee1ef95cf5b3720fcc07f63246654bfe39762627839da40e51c75654d',\n    '4c0ccdd70955da74558de20c88352df8a02aa97e4d5971c500e884740a8cb62',\n  ],\n  [\n    '7fa5d460dc10cbb418b444d9bde97e92c70a99a222b99f244dccee7e62cc04c',\n    '636163901baa5b7576c38c43407af578b8c4607e01e86011ae2dde587a89f84',\n  ],\n  [\n    '758930d46006623a756c89bd0cc378f6a3c1f43c9a0edbb42274c35e75c16d2',\n    '1d74dd9f81c2fec811b8cbd6168a745b0a111932b2a345265ef2853b50b6245',\n  ],\n  [\n    '7332ee0626b044d664ef228f8cb84df7c643e52f6a2591ae1c9007ad61ec16e',\n    '229bd8e630572cbdee54283234cf3e9f060e6382f99943bf234119d47b54470',\n  ],\n  [\n    '78a16ef803aa20a075bb2f66c61bb2dae5698bebb94a0995fa74c3d53de1614',\n    '246d588b68edb6fed96c128349908c42dcd64c46341b205e79f4aed9b5d3675',\n  ],\n  [\n    '6e1933939bd03b67bba753cc0cbe7d2f25bad68c993887ef8c9e2fcd59b0647',\n    '599413f7c204a11a5ce315eab11299ab7326603412bb00bc1c59ff75a37d6b4',\n  ],\n  [\n    '4a79957a5a1888ad063b51c69565a2b48e8eb917183e220a1c8d3374526d30e',\n    '1f092de0e069bba7fc5386e2e9a114c1618f88c4b95e220cd35ffe96f99fcad',\n  ],\n  [\n    '3148aa3df9ece39aca84f59489f2710522216f14be6055ee0027529d1d55e2d',\n    '617e9a52a92975db0ba1977f71116f7058a0d31b869ac7f3ee2fd80b0c5100c',\n  ],\n  [\n    '5c1188e72384160ae39d07328346cda4f6c12d227448e6236f04dc971625287',\n    '1643006eb3a3bc6aafd5f685cf054f2a572e6ca58c0118bcec0b833741f116d',\n  ],\n  [\n    '3f72efc93c9b71adc4c51d8fc69d3940b20d08733af2b7d05140fdb1d1c1004',\n    '7399259987c8f4ebfab46e522380707e58427d3962ee0c2a91760813f76d232',\n  ],\n  [\n    '3129b34c03c51aa8f611e91d5cfcc9bd3ef108ee66e6d3ee35a0e0e50055bb',\n    '563b18b5650085efb4cf179a029e6afff27b1d3091cd28eaa68d24fa1f801c6',\n  ],\n  [\n    '16eac0f9fb4c67cf89a7fa4ee615bbe731d8edcb709a1b9b50c7d873a530f52',\n    '7ff8288b6e199ca8f316192881424a37fb080c29daa76b1f0edaccaf580a80e',\n  ],\n  [\n    '75f6b6028c43ce832f65d7e8e620d43b16cba215b4b94df5b60fc24e9655ee4',\n    '35e9ccfaed2293a8b94b28de03bcb13eb64a26c831e26cc61a39b97969a2ff0',\n  ],\n  [\n    '3c6152fe093bd6316897917ec56a218640ec1b2148f21db9b14fc7a5ff362e8',\n    '6eef2df27ae7d63a28856b07b73e7aad7ca94f317201a1e675ffc6f9a1710dd',\n  ],\n  [\n    '54e01b5fe4fd96052aad55b3f26b1d254dfc7e2525fffb9ae0a77eb8cc5579',\n    '7c3d39232ab333675b219abc766ed9b4782c840e6b046614dedb8a619696eb0',\n  ],\n  [\n    'd1e63f8ea8a76429cf254a6d3b668761f0dc572d4bfac4fd56d9eaf58fb6c0',\n    '2bd0a84d3908a63085824c9329a0983913006ba155b56a58eb3f9becab29c45',\n  ],\n  [\n    '2d6122f2a702edd4da7385b1580796a71d13bd72be94cfb3fec01149c006c2d',\n    '70eb282fae992efa6f5915e578b640653549f23385ef3a29ab29b1b9b8ad63b',\n  ],\n  [\n    '752fec14beaadb5ddbba6b3a17fcb86579fa588ef407fad0ea07dbb22a640d3',\n    '3feb6728eca21a1e84e8f9f23010387a53a96a1cb62d86fb37996150a1299ef',\n  ],\n  [\n    '63f94a92f27acde8f5ed949b459506f51d70c85bcc61a34d647264ecc53c65e',\n    '37e5dce0646ee66f4fdb93b82d54d83a054948fa7d7fa74ab6b36246fc7383e',\n  ],\n  [\n    'd6aa909287a2f05b9528690c741702c4c5f4d486c19a46c38215f52ef79c7b',\n    '5ebe1128dd81093df4aca0df365d58adab848d1be1a94b95eeb649afd66a018',\n  ],\n  [\n    '12866812b3053e2f7a9572bdaf5ef2b48c6fb62a0eed9ff0356df50e7d05557',\n    '6785f7eb2cd1c120e4c7167b46861d10117040a2e9f2ca86a71e9d67df90613',\n  ],\n  [\n    '46a730d05330b1b13673cb8a1b8f45460035e4a9f1a1751cfba099c4355c1c',\n    '76fb0ec6cd16a8141cdcd875c8b2de9fce42d296072643d148ac7e7fa7472df',\n  ],\n  [\n    '4bd4380a22900bd34835e0a908eacf4b6edb61eda0cf483f9212453b37e7516',\n    '5e9551cd20d8d7ddbf4366880b7d5267385afa1966ff30da4baaf273b009d29',\n  ],\n  [\n    '71f1994ad40baa2922424ae222663a64f93d8b67929e9a10f9e4c1ab19f3833',\n    '85320fe68ec0d37cc19fdfd03589d66906ffa4046c80e1b094a85f27676346',\n  ],\n  [\n    '5a63b1bf5232f28f808765c6be7ce1f81c52145b39f01c879fae0f4303bee61',\n    '3bc5d6df68bb6d0577bf9ae2ae59ec0e9b2dc7dd56ea179fb38a41e853db950',\n  ],\n  [\n    '161ded55ff1087032381e6c1449704f63ad2d88df82dfc44a71890fa09b3941',\n    '78a52e0013842037274ea75daaf8eb4afc04ccc4b07bfaf3f5ee47d165e01b',\n  ],\n  [\n    '1bfce5229c5fbff5c0f452a22317fcfcd9262f23df41840f84fe7d44cfba1a1',\n    '66b387872c00e63c73006a955d42cf49c46c5708fc9d1579b9ae38341b24a3d',\n  ],\n  [\n    '56d47dadc9cbd1dcb2ee3efcd5d4af5e6aea71df10815c68b54a14e81d11b44',\n    '47e966ba54df48e9b612a903685e0060a67e4725402e8cb4cf654e54e813a3e',\n  ],\n  [\n    '4b1c44438afd4ddf20a2cf612df2ee494ce84c7274c5529e857693e73018491',\n    '430403bd31d8f0677e06abff7159384560f27b9622943fea1a3192f14bf40d4',\n  ],\n  [\n    '7f7281728fc2214aa1dbf13176a4624b53814734abd570eb6ef7c7e32379606',\n    '312da47be347fb3fa2c9089b38df372560dcace2effeeacab4d96ab11567295',\n  ],\n  [\n    '16a28884a1be8183e0d3fc0db84a9afbf47126fd3be548c2a584aaafbfa7dfe',\n    '7c3f57b3b895564ba562c1cd80b71fda6d2e611665c6ab87744f5390858fe24',\n  ],\n  [\n    '323339f37b327a731232a9580e79952063c7c232bd1380146d8a83c285f4b8b',\n    '4f16be1d983c7232f92cce6b9690695978d42cecc8eeb8c206e125d1098a265',\n  ],\n  [\n    '624d26cbaa197e104eb83cebf2adeed09a5cdad359993fe5e3529d4d0def21d',\n    '261b7da3cfb55c788977e0d8d640e3e93ae5a325d962ce85c816d7d32cfc430',\n  ],\n  [\n    'f24ecb7ee83a3e28dab54a330dc93d0429a7aea36412e922dce8fbff40d60d',\n    'b043e36a258d1df1d21b0cc7be9c4dcae1bd4ed326c110e668ac23d86805a6',\n  ],\n  [\n    '686cea46b710bde1231483bfdbc700cfa3da6ecd5841c0e0c782f9ea24328ec',\n    '7eb7407aa58edd6911c7c7e8d1e03bb52ead4a2415a0c33325872ff3a521dd6',\n  ],\n  [\n    '3866ee1186264549df3dfcdf8705c0380c9372eef6d4081c2454d3aded1720e',\n    '634c6d3e8eb8af652a4be73e3b613452c2213104ca875b66b4b15ee5b1716af',\n  ],\n  [\n    '484c687cd2969a1d20a58cdfb9a60f280a473284503b1ecff5de514aaf8206b',\n    '34d44d26b7427e51a646d1b924084762f5b461685450f21d6a472de565bebd8',\n  ],\n  [\n    '203561333771fa0fe22c4033349f7b877d15b0542a5598e81e067968768247a',\n    '2b6a533aff6e2163a36a2a89cb7415848bef48db40f952ffd380f47676707c2',\n  ],\n  [\n    '2ffa6cca6233695760251206fc5e34c8d3692498589478cdd3d5b09f0b7c05d',\n    '6c57d605478fa9626c4ed769554d075daa53e1a1d0bd4d94174d3bfeeb11ad6',\n  ],\n  [\n    '5dccf0fa46a5571f204d0b033b45f299cbb3d9f80fded57253ea4f1c64faaef',\n    '30a38e131ee8756ee5ea2a3e16618a5dbc28b5b9311308bf037ecc2039dfc7d',\n  ],\n  [\n    '57b0a2eaebeafd950221facdd24790d7d1ab8883e5c5d55635f0d14a1ee4741',\n    '7b41cc478fa6be38417271db8ed12efc0da6982552c1496025d2df0576bf4ad',\n  ],\n  [\n    '611b5725101f611c387ccaa13889ecf3bb5595071a179ce350029bfca4ad7f1',\n    '3129755977abc8995fec7eec1123a1561e429fde37ff36af002d3211831ecf4',\n  ],\n  [\n    '1c06bbd0c52fdab9fcaf680c7a93fb821e538a2ed79f00f3c34d5afb9ea6b31',\n    '3873d3bdfe0be0157bbc141198dc95497823cc222986d24c594b87bd48dc527',\n  ],\n  [\n    '275cdbabc989c615130d36dabfa55ca9d539ed5f67c187444b0a9a12e5b7234',\n    '2b7f723e68e579e551115d56f0ae71a3b787b843cc04a35b9f11084b006521',\n  ],\n  [\n    '6cc702eb20f8b5940c7da71f8b1801f55c8c2d8e2e4a3c6c983f00bc1ffdd95',\n    '5d15b3727bc66f3aba6d589acdd139fae115232eb845abe61fbdfc51341352e',\n  ],\n  [\n    '44defb418700cee8c9bd696b872adb005490512d8bba081f8f99a9f15cc981c',\n    '3b2072cdb1d919b2b65b5cb3557f0a3381d7ca293c267ca4a38f83e77bcc96e',\n  ],\n  [\n    'fd83ce77b1578b3a9b8c3cbeaddb1504d2fd4a19c901c21ac65961224e4966',\n    '110cbe64fc10c6b9c66f15ca406a35f50b723b35d83c5eb9797a57f8395f4f9',\n  ],\n  [\n    '9dc6ff90e341875e113bbfb507724dc7095a280d2f32cb6ba61a1e0c2d2aef',\n    '4aeb622896c852c2747454e8f172c9482955a42ecbe522d6ce07ecde79d0a51',\n  ],\n  [\n    '71c58b0e47b9dd9107ebd8a8c8fa9f0534e78231bac612c1ddc7a94edf33eb7',\n    '7f90edaf4792bf8334adbaa0f4ee7c654312725af188682d75f34874c4eccb9',\n  ],\n  [\n    '1f6de1f14988778ceb2dfe844f92394f1f1e72fd1581ceb3bf336c95ce50345',\n    '4f6007ed4e022d2ee9fe4ca8207c5f6c766c4f3b85260e941fb24ad0dcbf0bc',\n  ],\n  [\n    '3ddc3ac25ede4a67a97547ed27dc920239b585fb3624177e2e8d59eba678115',\n    'a9afd8f8bb759cbd1dff2addc63f47da4ba1291ea34229c09c0637dc5c8d24',\n  ],\n  [\n    'c56b0269d8431556e471cab9d70edda3a37b391696f107b2dc370631de51d',\n    '729c52f6b134f733eb750c14bd9f95c077f0f6f6ff4005701e5bedc6544599d',\n  ],\n  [\n    '44d32ce19ac6807cb22e4f25fe1486a36a13926f147fbfa054b63ff0446177d',\n    '212a21e8c124c9cd37c80d2dd66913ceaa6b6f666522f115c39382b2d5925e8',\n  ],\n  [\n    '35dfc16f3ae6ccc06a267bf6d931601e52f3e45359ffc513570b65b96adc4f',\n    '74311d10f4bece01b5ae65a6affe5c931463aa1b73a3320eeb41bbb7bb1ff62',\n  ],\n  [\n    'e0acd9d2d907031b319b80121dc90699d003d220ea785d50e5033cdb3b1a03',\n    '3911ba78d6e507485d6374b0f7d2e6198f6462a7d6d3cf046404a07af690357',\n  ],\n  [\n    '3c57918ca254c0cb7dac251ef4e10c7d82327969552eae15d26c4c52660922a',\n    '5fd5f5ff3f14e671548074114c72c48409df8a2e71fc8aa3c8acb506e2a88df',\n  ],\n  [\n    '222ad8b61e219ba2b581f606b7c996516850a46a3db72fe1f72b5a9be6c324c',\n    '72015a5e2db648112abd284fd867b59fc5606645177d26cf6e9a655c9912d42',\n  ],\n  [\n    '3c86d5d774bc614469768ad38f7be9a53e9a233942c5c553b82e49aae684764',\n    '480febea8229e130dedffff89c11f3c43e11724e6bd89d5566d78752859d41c',\n  ],\n  [\n    'adb73bb8352d0c10175df371f7868ef2c9e0c79ac788430c480c0f7d85c187',\n    '60b564785248111502e6f39c4994d6293fac22bc25f4d764b2fb1957d3c9bd8',\n  ],\n  [\n    '3836ab8b46cf4f453a22532c886940b982029b29c42adca90ded5bf77e6bcb9',\n    '7b15e91d6355f147b171a90b064a9d8b2d7bf3699bbf4987664c61c950d8996',\n  ],\n  [\n    '12ed96af1a97c45ec31f1531e96f6fb28a03ba52ab8484545fbe0dddc97bb32',\n    '6d1f522b6c6cad0940cff8e23decc72bb8d4164696af031415508b025aa8be1',\n  ],\n  [\n    '27382994ae5878223ef802e9b4882f481a1b4008f1eec8484483471f7aa742b',\n    'c31750d242b3975b0026a0e86ccdd17d0f680a8c6f53f197fc25eb1f777917',\n  ],\n  [\n    '431677eba3715455bc235557518a74f3b111a88844ef13e159ad44bc16de3e6',\n    '30000e1eb6a17d9df776981e65c6e500fded1ac12003adc9446b269812c9197',\n  ],\n  [\n    '4b563e6f42589671579eabfa2cda5502b361c46a5ac8d45c8ed44741a925b33',\n    '627bdb41678443fdd1aa607709e9699b652308615f4bea760a3b79ee0d9ab5c',\n  ],\n  [\n    '2932fd3f81fc973ca9def6b7f1bb50f980fe589187cfe9e9f52ba4d356cf2c8',\n    '1e6bfd00fa976c4770263a227048214c38850fe0f059e7b3d2c7871ef07d68f',\n  ],\n  [\n    'e44e4f3d96d9dec775b996be57e57fdc28e7c68023109b221c414a244a0dbc',\n    '58b1e52fa274812e5184e00e9ad812bec2463140adfb4bea3b2d665867dcc9',\n  ],\n  [\n    '7fcb89be1f4bec745887bb891e53fefd665c53d00a9e74de16b8a7e1f7adfb5',\n    '74af0b06633f779897e199609c71cc5649bbb65bc2c0abd4c678f0480c198d1',\n  ],\n  [\n    '62a381ffb904ea3ff4d451d4c8459457cdbc3dc2fd2da646a95d8c1e90c0b7b',\n    '1ba058658e09db9e319fa73de8ab4a992b71e4efc22c273725bdcab84e2a315',\n  ],\n  [\n    '1b0fbb7a84c67e668450a54449c7a46261a2d355589f8b84ebfbaf9a77ee938',\n    '44f8fffa33dd33a6146c35d196595e22cc4a215f61ee9197cd751400970a1b',\n  ],\n  [\n    '78fe920bd96a356d4d95ee34adafe8fecf071d3107c36f047b4024ddc4b3eea',\n    '6162f29607fdbec10181fbac6e57d5cb41b922c5791fb24bd28bcdd75d16c41',\n  ],\n  [\n    '5629b849e026e65d119ac11821d7ab7efd9c52226f75c7427505d6818bb0c8d',\n    '1539c0f90970ee8b490e45bbe5568170e5708521a0e59f976be680595906feb',\n  ],\n  [\n    '62bc853f349bac8c6e5921d27ba85dbd9ba20a375d70a7bc008928f3e123b04',\n    '6acfeb1de05ba43c3ef1a9110a983a320e77b3ca294abbc04aeca19b194f26f',\n  ],\n  [\n    '4cf4bed663464418285cbae359b5d84ec76b5997d24f3640984c7663421190f',\n    '941f818e3e3e8fb1568da85217d17f9250ebc948379014d900a7b1a848494',\n  ],\n  [\n    '52ff3d9ffe9a302f6dfaaf74bab57c08027d5cb699a69b30830540c0a2d47a1',\n    '987dd8876873778d933fbfed37aab2f7d6f669c37024f926b1edcb2ca55782',\n  ],\n  [\n    '1109ee32f0bc53de6bfa457060b366e909d7c18061ec9845f46ac715496897f',\n    '38f36f172bdfd454b9285f86e6bdece8fdffc95182c7d801b03c671cc55139b',\n  ],\n  [\n    '4b4482f1d84efe23dadf3bb10df3dcaa251312dcdd604f616f1eb540e1f3232',\n    '7c9c149dcae9135f940fb54482f9c3cd8193721643a6e23157b8020410d439c',\n  ],\n  [\n    '69cb459b9e415b7581ca163611c470d875971d5d7949de732d1f0f200544a73',\n    'a7136fa9dd00c0469863b7def3f83a5611ed628810d7e807e7a873da5a9897',\n  ],\n  [\n    'b66a4e32ac9a4baa8f64780acd94ed3628b2b0ea874ba4dece629af65f9e62',\n    '24328ba9996a24389658e3467b8b90dc3927ef8419fe28b3f55b1c1aaa51915',\n  ],\n  [\n    '5ecc3080062dd451236de0e4eb91c5c75100733364bc5469f5fa76f79021ecb',\n    '6da4abb9031a27b5be94529324fad8026e7d871570780081b0f424d4fe543c9',\n  ],\n  [\n    '1e3146f00880bb22486d5bc73e54367d54251f4002bcf342d0393b05a4b9ce0',\n    '23b6fb8e945d3205f633ba724202db5a99305f807137edf942cd60eef867699',\n  ],\n  [\n    '2e1da8013285598b899f026c6974185db12c97b4c63509769d3d4ad1d18a4e5',\n    '1e7e7b668674d1593c39d58bc7bccbf568208732b3519bc2cdf93db34366862',\n  ],\n  [\n    'd26c3f389d81709506f184b53871497c8d36c5c9eee8e3737358204c1acba3',\n    '34649c3d39f3b825947fedbca215ae30c5a5995e93b1c8efca4944cf85a082a',\n  ],\n  [\n    '91300478a83595d548f32f259033291fc7d083953b0b8bde88c7559660c563',\n    'e5d2bff57fc6551e9b80c06ac7314a71907cdcc66ce82f2cce721a670df10a',\n  ],\n  [\n    '1f7abcb9d462c63ffe92aa56619ae8590089cca4d93ee3e5f34a63882452cc7',\n    '7e9f85c7b7ca6e9a4f3a026d1048adbeef69ea9d876c6f647c257b879a81bdd',\n  ],\n  [\n    '4d2caa1323012e4c83b0ad387308b8aef5637bc35ddd882e7f5e41cf2ca410f',\n    '47150e808c81a540b6f8864e9d6636589cacaa516f82caaa96506edfbd6f0e',\n  ],\n  [\n    '3c10a6083c38351deb3e6d1b386827d0acf48979b66b95249eb8700ec26b069',\n    '47e34bfe561d903cffdd1d849b85aa3cbd31cb4a9bbd8cc2e5fd2f95016cabc',\n  ],\n  [\n    '758bd54868eec045d0b4d3d2bc415d24bce13fee47cefdfda46425c109b657',\n    '3392a7c66ea3bd7b044680bbe9f78ae86752097404c067e9d2572f55330df83',\n  ],\n  [\n    '19e718e0ca1d2d6fadbc6006ee7dda7a385430e29f5e239cdd4bb7c3fdcb2f8',\n    '5c68249b7fe03ea2e13481a63b6cd4bf74ce42009a89fee0b3f8f968b3ec709',\n  ],\n  [\n    '28077f57ea62401806367e6d54fe45d02de5b072db787ffdcc3854e12a3e855',\n    '14f3762689072f5fb41d03e94b01808c739f6d42b7b785b0e464100b150efd2',\n  ],\n  [\n    '3b8a8cefd017363ce867265af3293cec081fa589fe561830f0078778cbd338f',\n    '69ccf2383cb7b4f9c806d72535812483e7c5e9a1a5928529d64ca7e085e758d',\n  ],\n  [\n    '77878f388d22161a2953e5aca6bac1ea480e102f329574b4b201640d44a296b',\n    '7eb35706a90a03aff7c2fecca72659136547cee98038746db5aba16fd7178df',\n  ],\n  [\n    '97332e6da70961f2ef31b7b628f1018d21db8db015922a301fca7d6fc6a8e6',\n    '2e37b06f639fc7a82601b744570a2619e543cbfaf60e474107fcaf4686d3223',\n  ],\n  [\n    'a81518d452d3aac48bf0386c3ff170ef4e684a4def242c964e129c64f4d647',\n    '37506e44c85908ec7b7adda9547fbdcc2e3605151fefa77fbf127ce3bc938f2',\n  ],\n  [\n    'e80336b2220b1d666074f6b0dac85353d0e4c2e8bd0f37055a2236a6a9fadc',\n    '1cae76d73eda7a5964c5d9d3ad6748aff51f5543c56441d2fdb7b444a39846a',\n  ],\n  [\n    '2c01fd8430ecb44e066f352c4f697fc9fda177dbe162f82862d7b9ea8c918de',\n    '6e1dfa99640fdf5b30603d34c7c97c1aa6e6b7f3a2c52a21fc64b0fcac7d591',\n  ],\n  [\n    '744e37b511cd0ddcfe15f3581947014c159de81ed055d15a13c7a2d1fa39f0f',\n    '685caa8ff6979a6c63640ac638a3f9c75737f2031bd55322a47384357af164d',\n  ],\n  [\n    '40e627ff84e1a7a9068b4368770f5956128a4d9e9e33e9cf5e24d9a242149fd',\n    '2465bd6cb20bbdf810e2bc5c3c458cecf4f3aa163a7ac99c2579e5f33417f2e',\n  ],\n  [\n    '5f635af7f554a17bceb6ccb6e637abf89ab6dadd399189b0a0390e87b1896bc',\n    '2aa6238a69f89665646c0e3ca2ba5f709cc6e14351cf71e1b00ec45201417a2',\n  ],\n  [\n    '5edad3063c9fa8305978d7e6a4e037c9fa519b8023c7608dfc3b66e5c1e8985',\n    '49f405d07d7d01919da51159ecdad1031a5ac208c026fdfc14d38f633d92183',\n  ],\n  [\n    '2fdf2e8a45858c12926a1f25a62255fb2d02d0149a15ef669f859806683e649',\n    '61cfb686bb31e2524470d4ad2ae09e3cc91b16305a21d748098feb1d8ce3b3d',\n  ],\n  [\n    'ecdbd7c37f1dffa3943977278da3bb429afdf948b4ea6cdebace3d3be82381',\n    '190b67fb34f7f3ad6afd3d6b6427aa327547d8ac0fb4deeb0feeba1f63d6c60',\n  ],\n  [\n    '233021b483f578dfa5222f8cccba5766ceee0ac65f6d4a3b1673b302a21fb3c',\n    '7d4b6d44d175d4b593f06f5a6dcba2cdbc4eaa2097abaf613123546866cf4ef',\n  ],\n  [\n    '42db4e953c2a7a743de9fe20c5798f2247f51db4eabc6f40e86c13909a310ce',\n    '12c1a0764a0b9f3666e431923ce15e7fcd0ded5ab153f0b48d362cca1604e65',\n  ],\n  [\n    '30d539e2b545fb957e40e2255f6463b52d227c9808472cee6a3d521aa283a44',\n    '5f9eccf747fe6313570f99e845db32b40070acee9ce9e34da7f3c29ca53a07a',\n  ],\n  [\n    '4bd64e5ade3e2733580a6116b4af328751198e7128f9acfe3a3496b545efb5a',\n    '4d584768900dabfc0dbaa086632b8051bb3905ef79b84d96c01514441d0cc93',\n  ],\n  [\n    '62d6e771f02e591557197d13c3e77dfa2d1794ac1808407bd8227c4be31b466',\n    '5c6f5607c1808e899ba36a425911fa8566b7ea9cc80de8a80538c0fceb837c0',\n  ],\n  [\n    '5ce406218cb2852b1d2fe1836b19462f664631785216e87ffbce26030e2101f',\n    '5225f107743c255ab50e7be4a090fe39478d1ef4ff558468559d8cfa87bb94',\n  ],\n  [\n    '670286486e8dda3dc66b0ed3149be7697d3e06c8279844079daa7e42d5af728',\n    '26becabe7430380c56e320f5ae3329569cae7b0af06fd5327ee23979d200eb0',\n  ],\n  [\n    '3ef448df33a4394c43e93e5850cd0c5a6dcb18ae1cd865d00fe8ede9336a9f5',\n    '56711f6ab7e0e4f7365ac34e284ac2879f40208c46f6febcc1dcf7146ecf015',\n  ],\n  [\n    '4b63fc130288e92f2d6ba238caa7a6364804e29829ac037c57df32fbf762bc3',\n    '1eb8c80af55278b4113286c038fff2bfad2da62763bb03426506b869139da0e',\n  ],\n  [\n    '4e7e998557b29a95f805a6e2e26efc1e970108272d4755738c04f28572295c0',\n    '97cfcc2f447bde61bde71049d8200a74a3028b21703bc139143d81a3623f09',\n  ],\n  [\n    '574b67898f02964c408f68e9470e7b615be037e40b824e6617f89cb56c21219',\n    '49392d5f8e6740a1b0b7444f56d7a17363f8656c6e4c628678c86223f2e46c8',\n  ],\n  [\n    '7e8cb50ea5d5c1b09e219e7305bcb601d99b6d7185b1c388aa8e36fe1e56554',\n    '47fefa308645455c12ccb5817da338f0c4f423b341aff4a9d158891a4fd69ba',\n  ],\n  [\n    '67266dea9e71b4ed2bf24a597a823dd048cf31e725db511edceac72998c9ef6',\n    '39babd65850befde1f7c28e41dbdbb4caf82bbcf3bcb5b33161f1c2960b2d8',\n  ],\n  [\n    '63e99c2cb9c74eb9227d48065e27abb8f606df8fc83b2c44e4ea38b046bad2b',\n    '60494a53dd13ecf34e08079d343c88fb655d6d810785af81f08d5aa9bcdcf9',\n  ],\n  [\n    '3cf0600b0f5a2a4eb78c487cd385350e8c7848e3f6983231881d7f1bbe28543',\n    '56dee4288528de609976ef6b903b652127c37b0590e91a2fdbebc3f11df2628',\n  ],\n  [\n    '758f09245fa4b8b23d290ee2b3bfcede199b4fdb11f3cf2502a8ceedd61b129',\n    '622d9baadfde781e985d9722e0a04715666769a4cc7a9bea0b96d6386be1746',\n  ],\n  [\n    '38e1a45b81492aa95d7abea2b08b8c14dc0b8a41108b036871fb737910ae18c',\n    '145c611262656385e5ed6243568cd3f9f59dbfed7a01ba11e22bb8bb272e08e',\n  ],\n  [\n    '206e54ca53a2f155bd4fc45bf2edb77798ae6623defd4cf22f2dd4a7d119dad',\n    '6c94e7f0825ad81680e4cdbcaaaf4df806d57a0d1fb2331926c3fe2b79d22e8',\n  ],\n  [\n    '56e98d2862893caebf66180e84badf19ffc8b53041eaaa313ae7286a8fac3d',\n    '526306f9c01afd6e0c1198ea5de17630f5a39c4ecd02d8e6f0d613c355995c6',\n  ],\n  [\n    '4fa56f376c83db33f9dab2656558f3399099ec1de5e3018b7a6932dba8aa378',\n    '3fa0984c931c9e38113e0c0e47e4401562761f92a7a23b45168f4e80ff5b54d',\n  ],\n  [\n    '450cfaadfecdb8a2fbd4b95c44cb1db723ee5ac9677c9c188b3d7c8eff4ca58',\n    '1a552bdfc0c81be734f1f6ca9a6dd3ab4daa61c11fb53ebb7046eee25d617c7',\n  ],\n  [\n    '6fe20e5c8a8004e33eafc84d16ef770f2f0b7bace19adaaa150f987d295a34d',\n    '28a35040a2ebe9a14a162d3208d5eabc6e2f3a8310f926bd80be65aa71775e2',\n  ],\n  [\n    '1bd65f45a35bf62ae8f9ffcbd7de2976b90518b6820c219f039c50043bb1edf',\n    'fb5f0f8659f9b6ed7cb0ddd7999506d0c20b26bbe69d1915a31842cfac41eb',\n  ],\n  [\n    '4ba4cc166be8dec764910f75b45f74b40c690c74709e90f3aa372f0bd2d6997',\n    '40301cf5c1751f4b971e46c4ede85fcac5c59a5ce5ae7c48151f27b24b219c',\n  ],\n  [\n    '21cfbc678f5a279ebb6ed124273c8df37eaf12a2d04180403ae6b5ec0b1e1ef',\n    '4478ed6a346d899ad7b0b10350270aad39ddd5b68529297e4c91a54357f0a7f',\n  ],\n  [\n    '350bfefbe3d864eaadac9cc1195c14159bb736be743aed7380d2384cadd2046',\n    '5e2a4b3ad0e1d7b9b8ef72b10d68a80e5ee691d7db591fcfbaad6240d41da8b',\n  ],\n  [\n    '529acd569127f73c8d34345f87e96cebfb48ee12a00a3861cda209337ed94e6',\n    '3120671a89b705e5bfd99b0e7fd2118b4914a3ac309b3d74527cacb5ad7491',\n  ],\n  [\n    '55d3d7956a97d10e65a4d8ffeba40deaf0db0b57f8e022cdb3df6df613f5c6d',\n    '159e59a6f92f48fcf85aa96c1a03749a4c4e2cf9e2bc94dd36796daebd9b8b9',\n  ],\n  [\n    '405f019ee8f2e972a005c549b0884b5051f63d1e78480b73208dc07d8c65a1f',\n    '4301a3d0c285ad309ff24a12c100ead7f48ba1368143712f32ac141ab4d9e8d',\n  ],\n  [\n    '376d59b298d982f02dccad0edd5bbd4e5e8fad7898750675ed0856850a7babe',\n    '5233b12bbc50564eb61cc098a17d3d97f06ec7a230380e4c5d3b725cc318eba',\n  ],\n  [\n    '2f55624af6109ef04b2ed035a44a904ace8627f55889f011f768aabf4de9a38',\n    '7f64209ce7dfb63337ccf3d8c14f4093295f86996cabfee23b1655549aca089',\n  ],\n  [\n    '3b8965e942bed2714bc2e685fb103496e1e3595ac6a343d6df45fb5ef6979ed',\n    '5b7cac7a165cb69ae103dd9052fb39c00ed0aad47989005aee53972d82d45b5',\n  ],\n  [\n    '7abfe3accdec1eae1a50049efdd9a8eb7c2921a08e8bf1fe606e9d5a4039ec4',\n    '3af178e7e831f8148244d2d2b284a32991852db6212ad0a9d77540ef648a5fe',\n  ],\n  [\n    '4983196df6ad7d6f0a8d76f86af3863ad8611374a03fc0fd00793181dbde9d',\n    '204c1f91b70f975a21d24a8face664e496f00f602daaafa69a3b56098a4cf89',\n  ],\n  [\n    '79e2b91c1531a3b16dbd53e72d94e16bf265cbec261658151acfaea3718ea72',\n    '3d9bdb47e8b148c1c5e9e694ffbc2cf71aac74ae1a85e8d8c3f77e580f962eb',\n  ],\n  [\n    '297efceec61b3be17565843cae465c52524b4ecd9331a4170f54f7de8c4556c',\n    '6ccef1733624cc8b973ac63dd54e7a53604929affe81c3439525ae5ed6af993',\n  ],\n  [\n    '44f04b1966264a23ccdc870c8563ad2efcd4c8087b5469b90e792287a5581c7',\n    '1c417f0e9829fa3d3cbb7c3cf4dc7aac04c5bf66ff3f86b833a42c533aed1fc',\n  ],\n  [\n    '6ff83f5d8b51db3be0bda80eed2e2adb7037f2f58f705e88f0f98197431ac26',\n    '64f59b8428894c2b7afd740866065ded42e716c7d48accd3f117f22768ed9fd',\n  ],\n  [\n    '14aa8187c9559f77cd1cf96b2dfc949182529936f2b0b4050ea56e134073b24',\n    '5f36508c68b1dc586f3fd3f4e2bd29c6d8258491b8a6aa19ede811ce0d3d0a1',\n  ],\n  [\n    '95e8882a68c5000d1c2be7c0b43e7f2a6f8de906485241f0285a5c73a27a83',\n    '1e4cb67207ab73bc1e5d19fa2146fde6d03021393b77a55df4ddda1fd28f5b1',\n  ],\n  [\n    '2ae0704dacb3da47d564514b4c3543505b403ba09a248c6e74593cba1867ff5',\n    '5a4b5818088dc9ef4066b90a8893ae80fc89584f987ec1928ef9d72cea2bd67',\n  ],\n  [\n    '61a10898a76fb99989e51c0e823cb60b95ec7ccccb917c42b2b28014f5fd94d',\n    '23d8ec1de45366d3b86c64c2da05a2ce3d171adf52ca5522e652ffd0eeee795',\n  ],\n  [\n    '79884133c879cf07734976fd64de220c5a972e04c2a3afb74c362d6c3beecbf',\n    '2aaa0e6d4891b792b5643fdf09873343cd0e3fbba3cbd0601b481a4083f32b6',\n  ],\n  [\n    '45f73d2fa82be6c5ccd0f62d2237efe8727c479967d27cce28e42b9a44bad5b',\n    '2fa4932215f72d56d8be5205c5851c9b3e5f2a14468e4a7acace5437c6b27dd',\n  ],\n  [\n    '37f53f771850f52f9c8f87b53c6bf0c93c2bed76f5fd1d5697356d0b2325007',\n    '50f1a052b79b446fbc7b93ffa1a4515f6c3be3a76a2b0bc5eb8ff327549960c',\n  ],\n  [\n    '71bd6d23e0d2f312d47582efa609101f15b9ccc571fca8ac4fe3457c67fbc9b',\n    '3b3fdf86bd4c7fc26d60540a6439b4d179dcbf7b91efb0ddc60dfbff9a148c6',\n  ],\n  [\n    '78219ba049438385b829c13a4993874a4a326c4143de0dd581c7b9956f99b06',\n    '5505f1268dcdd4ee01b77abac3bfdcbf3f0513ab097c69ff777b4a631aaf256',\n  ],\n  [\n    'b81e924a86536dcf68bc5a2ca2065a61103ba6c9eb0ae4cf8cce9dbe286f15',\n    '653a6dfb51acfe8a844fb8362795e5549d424aed88d3a090366a44f840b5b83',\n  ],\n  [\n    '441c0d7b7aa705046dc0e07ba5f33a7d9df23f694a05192ff8c2d7be2aa3fdc',\n    '4c06568c0902bb99d428bfa0a946ed0f0ca0a51fbf07cad88e06e9c78e38a59',\n  ],\n  [\n    '2569c8c78b6d6b92533f29f767c95720d377fa63ad5a3b9827ee0a74b0488aa',\n    '4b59c81d3cfe08834f946d9d57614f5366e0bcd9349475aaaebe01341196fe0',\n  ],\n  [\n    '3f2fa285a0471647b214eac652bbad9d58a9f2dd2e812aff0210d0d8a6eb32f',\n    '4cdb18e1c2848c2b52c1a6557165bd1a8f55c2f7562f5cc0b326f73c25b696c',\n  ],\n  [\n    '5bb5141ab4fcc5290ae9151b8045a2cd8391547ce7b3b33cbbb10f8fb538092',\n    '5a36bfd52acc6a83a9913b937ec086cc27fed030b5fa70dbc5d3c12c9515f56',\n  ],\n  [\n    '3f3fed272edf91aa7f8ca5d70005d390fbc67830ffc69c5fa3ae17582d2771',\n    '459057e0883c44d8776fa217405f443e5954f08c4a5db68e437becaa664a999',\n  ],\n  [\n    '5237ca6656237a717a739a4509f70db1b9dedbb6cd232f60c9bd8c4563a6b1f',\n    '56c7799dd02896dbe7d69dd8bb9718270549592099569d107b7b49c34bf5a49',\n  ],\n  [\n    '1cf6b8499ac881e0b2fc7def9bc1a28937033b2fc52de99e75909a620c7a281',\n    '5769cf4f735366fa386b6858043dc99a100f86fbc77b16d57d77766197ba27a',\n  ],\n  [\n    '1b74b8a6b86dbf9638cdb0601e1a332b8d880753423d38c3394902c57f15e40',\n    '6bb2dc10d2ecbb913219d0ebdc8d3337d644ed8b6c4e70637ef4c7e50887488',\n  ],\n  [\n    '61e4da415661bba52a4737e2bcde1a837787c4796b2e1854778534f1582c29b',\n    '27c43e632cb7652e8508c9c38e3b4ad0d3dd6ba748d42dc84ec2685e64b9aad',\n  ],\n  [\n    '7c460a204d23f20ce86596dae6ac9b36734e4a9f7c5b43262c97a36c6a41c6e',\n    '481a11f9300ab4c4bf6924c5ca884728cc361247377065920966785d043fbbf',\n  ],\n  [\n    '124ff5e55e4effa40daa5b9618d75c49c8b6fad95cbe8c0bfdd83cb9bed8316',\n    '33a2ea15d0f71f58a00de71acd7f22ccf9002115e49dd1f7631faa0d32f9987',\n  ],\n  [\n    '61c9f8fc86715e95ff43583a865c5a6515f93381839d557ef884a68637eaf4c',\n    '5877daaa42bbab9083b571e12648a9d62ced4470d71653092b6546f4a5acceb',\n  ],\n  [\n    '70a6b9a9e5d1fcc07dd9ebef6d8f5fcf04c6cb34932d0fe2335330ac6dc8d3d',\n    '3f0cbd332ac56922e886656bee74f6e9bb4bb88f7af7bba9098678af1f38fc',\n  ],\n  [\n    '41db8a0f1ea78443a39e08a54323743c8897eed1ddc28f41aec6f2655040d9f',\n    '7d4bf32f8f4719c2e4af8b7889f3b65cfdd033dc2f971798a12170f2b26efce',\n  ],\n  [\n    '62f035e01acdfe841104942d6c8c07f0fbd618cb85998ea24bcc24cfac1f8',\n    '1caa886104b7d753fda93645a746989794cd825c62473b526ea34b3d51b5771',\n  ],\n  [\n    '441c6f016d270e86c19843727b83b864cec060cafc813b23d7e41e5abb1a60a',\n    '29fece4e40400f3acae0586f4fc8ed535e805e472123ec38d662d8a0b01c086',\n  ],\n  [\n    '2c791ba0fb0b66177815c98191fa6188dba9c795e34a7c3c8a19086215e3cee',\n    '11123151389d4b330db6a665a560407e7cd8c3807c749e2b0cffd9c3074ba77',\n  ],\n  [\n    '5292da4ca71ae75ed0554c267747e39c7a129b3b863e1af3ebb3e368439c4ea',\n    '63af6a5016deea8cc674c44f16c63c1db31f09af4fb4d2ea7917c28116661fc',\n  ],\n  [\n    '3367388d5d1b7758dc3d92e244f227bb8a54e3d9909e7b7dd62ab5965e3efc7',\n    '7ffb4833071e4b03ea755ccb9938487a478248fe9b1158a08f1ac298801c092',\n  ],\n  [\n    '95c863314b7f18090f8eee602403be823a367a1b416d54c32e5f914e67d922',\n    '159c2824f899171deee23e0ed520d4825bd667983df0a8d45d3a1f7156d91f9',\n  ],\n  [\n    '621c6e08b3c57404644ad49ac7629832c141273fa1f323781b3395393fe985c',\n    '65d1eb0140652958c4371ebec791e03317d6b2e689d90e304666f1b610783dd',\n  ],\n  [\n    '54313129bf13993952cd2b31ed06013aba85e74c1b8a00e062031f32188a84e',\n    '680129efc9eb8ec07fc180e8f6877e5f0f9f44e3000a2c586ed4ce49d12a313',\n  ],\n  [\n    '21ea57a1c8286bb45872e78617853c47b89091670ba51c124afa3362e7260d',\n    '7087e5c1536df233ec9bfe2f983e8d7622892b9bf64c450c9823898e2cc2fc8',\n  ],\n  [\n    '3793b05b99e7a57d88db4ed0dbc3b771285abcd9052da50f88595354409f3f3',\n    '12164105041c056f127e737c7cd63981e05f246bd2b6b65d1f427019c7c3801',\n  ],\n  [\n    'befd345cef5fcae22ac37dacd6b9128cc58cbba3e3fd774e11b421c2ba392',\n    '6209d25f24f88f7876ca604db23d05f78e6b3b67fb033f2f1bee221f352b8c8',\n  ],\n  [\n    '15fa536045fda4c65ff74f10b4e669ce88b9996c6772288289d3ad725987fa6',\n    '30e0c2124a35e265e931ccc66ce5ac3697d982814beb407144ff6762cb691df',\n  ],\n  [\n    '38b795bd77ac573576dc204857a488cac2cce19809882631ca2069598c577c8',\n    '786ba555d55ebef688b068bb9186a34a08cb00bdfef51619bbf911890ae9a13',\n  ],\n  [\n    '6c66853592196c3eb8d9526dc155205e2c64097adf8684bb0e15eb460ce1c72',\n    '1bb4ebf654f4250c8dd1061a4e1b464b31a8a9999ac9960446ef8108a66871a',\n  ],\n  [\n    '5b08dfbc87ad9c00b88e78816973ad2f9c10c70f2156908892cc7b7a2a1fd30',\n    '1151f407a77e2556073173d8f5c9ff561d8a23742121ca15f7d0ac391af50ea',\n  ],\n  [\n    '309190eba106aa6ead54b5ca5817969aa68b4b4c627700799a49fc6bdd32ba1',\n    '505b6a2bc7b0d78ca6ce2abe7dfb7312369918a4599cccf8a615f6701cfd851',\n  ],\n  [\n    '89cc205966af08acc8910d563af7443d5dfbb5d88dae79c013c678c65dcecc',\n    '1f8cf955694b246a423ac725791231257b88936e00347ecaa1e17045c0ab540',\n  ],\n  [\n    '480086b61a80c36cf1e1a350baf554e58ee8d9333186b70c9c512fb9e9d5a84',\n    '511edfe58f8d36a6170df743731da1ff525cfd5108be20e30ac4183d1281570',\n  ],\n  [\n    '3caf14fb1d2e90a13ad4eb091250fe37133aabf6029633e905e5a93ead41dbb',\n    '49122aff6059dfda19e4b973aba5ebe3804c91728936c6381c1ed1ea9380920',\n  ],\n  [\n    '66d1b8fb2cabc46cd79741ce1cb7326077ad8ea3227a6427244bdd3806bdadd',\n    '4a52eb74f4d5371ba3265dffd61c844f9e68d4ff0b44dc4936182f9280bb66b',\n  ],\n  [\n    '373330c5afd53c31257fcc9050fef873e15ea9f81d9810f30744309b04e02b3',\n    '5889806607b3dc97a9c5b0c8a2f16d1792099a22866b879ca480cb89a11ef5c',\n  ],\n  [\n    '26840d0ec69a22c6818ff64b8b14633b531508c866e21d1dc9239778ae9e8c7',\n    '157971f9a6e3a24d3b307be0e7c8cd352e2eb5cad33cf276270c0f309ee63fc',\n  ],\n  [\n    'ebb84848f1c38c19a754d1b5d9460e39624dadbb30800987c9419c0f933b9f',\n    '517b297cf32f4064e6d6c8e761ba8db89809604a701c7b3aa1a9c6beb370ea7',\n  ],\n  [\n    '25780380bc0795ed0dca727c55240f1d63593e552d224adb40df2d3721c0f66',\n    '10215fb5a893e0275e9f1f66b217dde35addee91ed0e8f7d79531a2ff57b8c8',\n  ],\n  [\n    '243e1581cd1abfbf18c31c19a4c3d1cedfe69a40bb57b607c9af2717eefc742',\n    '1296c27929f14535718c3a4ebe045f00afdc60afc74c7d398d8ce1b6609dc0f',\n  ],\n  [\n    '48babb8649e054bc8e0b902c89e6940c265f48464520649502ef1064eb94562',\n    '3235be7852b0526d1a16f6969ec0e5b0e09cedaadc65863dea4e47f4f398264',\n  ],\n  [\n    '592db7c27e63489ef4bcef2eafce89f40067cd9a1ba48bc3dc76b5fc62ad9ca',\n    '48b7711b570cd9ac65910e75e752f4b751fdbfb4091a28f59b8c046d3d9f8bc',\n  ],\n  [\n    '31d133456222586ae42a9ec7ce8539ee04afbe0b2ed00a2564dab0798d9b55d',\n    'a77c52fa1fd718db5c83e7fda6d7d4d9aafef9ad95cad621470f2b753729e5',\n  ],\n  [\n    '4651668379883521e7983aafcb93811b4a72ef2975b3277773746708ef3e3fc',\n    '512507f3f544d80ba5d47f73b571881e8d70d7b1d305b9704bdad036b7abc47',\n  ],\n  [\n    '26069e359b2e847affaef604f772f36224608b7642245d0e643889ed231bddc',\n    '75ae1ec379f074ebc91270077c74b4d34347ce183b676b4dbe100bfff143b9e',\n  ],\n  [\n    '3196d01d1fa11dc3803b4813c4bbc6326869f61410f2bd14bc0f570d875aebe',\n    '20313217cac79875bd2a503db1e86d1e5559911667a02524759344468d9561d',\n  ],\n  [\n    '483256607f75f06fb126addc60cadddd602154cc4782bcc08351a48745d0b97',\n    '2950a7e500ebbe9775f08be37cc2e62ccf9030de18948d1bab07a4a9173f75d',\n  ],\n  [\n    '65f07b6050a2fc6eebe2c29ffa62f764060f7f9d3c82d2cb5e4e368aaa442c9',\n    '562c9654b646cb84a213b41de203c871b3eae0a05c9c105a66a53c319c06373',\n  ],\n  [\n    '284870f6181c43f3b01d94baa9c5b6ada0deb861145523ad9169580eb7bed35',\n    '5e03e6c40c1cfa3cafb01fd0622349871832a9d35499d06408a83edc1b76d02',\n  ],\n  [\n    '32229810a52137f0e6c3d37595c46f6132822d4b05f42674b48d7a7ac3ad85',\n    '7babde959a0cf2c53ee59fc52c77c3adf899453f077f441965629f9aead30cd',\n  ],\n  [\n    '1ea8b98a6b85e74e0a2fbc18b206e290f3ed94ce99ca665e8e2351dfade990a',\n    '478e93c4724115fb1648c8d5347422adbc1a0bbf962b2312e14aec80e1be742',\n  ],\n  [\n    '270cbaa08c79140c85b864475a0bf569cc03ac785e57f543dc444f37ce746cf',\n    '3a9b8d894016680ae9d1bf3deb931d8987d4d8d8bfed45b81ccc595ec79046b',\n  ],\n  [\n    '6943922708b8ae5b40dd7031ef2e487abc4ac39a3591368285e83d6c9c51f4d',\n    '5f157c37d09634e8cbfbef90ea50af59815d011e419a691c67ca3402b5efc33',\n  ],\n  [\n    '48ac6a80979fab4912cf0cb557d917a0bd68825d8658ec100496eaae6ff62e1',\n    '2b6931350ab183402e39476340eb1177b7006f7a552915581e29a79bd7203a0',\n  ],\n  [\n    'e3adf9517d92ef22d1e2a787740a292ba32d5ca69faa9e8675f63ed816dce5',\n    '36bccf69bb12dadd610145a3399213248d193660d8dc90a2e206f23bf2c7997',\n  ],\n  [\n    '5e6c8ae5afb2fa470f767581f3d578cf6a49547e4b78665edfd45776948bef8',\n    '6cbfc11953dd7e195d2ce74e52a60df524767b44c4608bdd755be4bc85eb74c',\n  ],\n  [\n    '15a576a1242d39300f0db3ad770983825988da0457718ecd596c63a0a0eb4a6',\n    '69a42e5f6f5a63349b57683a4609bba90f556a1680fa1ec3b02ee7d3211f903',\n  ],\n  [\n    '274cd14e4fbf2ed07402e8ad8075b320c5f76b7ea45ea36af523e95ed63ab50',\n    '6ca640f9557c5f2d8b27f6ce95b108880ff4e4816b26b70b6506114389ce656',\n  ],\n  [\n    '4d8284e132e2fe81c5f71be1e3c79ab51b229e2c56c323e207cda179999d123',\n    '116cfc00e9fbee1cf16af6282123cdf20eed13021c2037ef4c86f94eb6e6cba',\n  ],\n  [\n    '4056194fb5643e97991942ef5b63cadd89080bf57a01489c4398aca03f0980a',\n    '2e2cddb434fa6f6da7859c3d518f0ced8795eea043a6c9613fb3e020103339f',\n  ],\n  [\n    '5d119d5c5ce532afc0875e0ee9b026d878c8773d34237f90a0d0670da6f01b3',\n    '4a79fc025ce076b6a4742fbcc8cad313d0a8220c58024a41a5a674c0947e64b',\n  ],\n  [\n    '11800ce4061d99b9d53fd4138802335258f7798c5a935c9979f5a949ce1d483',\n    '36745a4741a5c7290eaa8f2a3f9ec955ccb7ca323272e5d35d35c2a724ffac8',\n  ],\n  [\n    '4302525bceb97fa642fd5560a4a39fba3d2c06f68e6aff3332ff1854439ebb3',\n    'e31edfd081ce82f8177b2d7d96e69851d09e908c2517114ffb37ee12c0ac64',\n  ],\n  [\n    '2f5fcbb96f0a66fd3bdfbcc78bda361cb812570f50e7c476533d56eee01c0e3',\n    '527428a34855b5695c479d8fb7e831a299f7897f36682a74169cc60d160df2d',\n  ],\n  [\n    '52167df045ad0dc999b98de3d035aced9da4434211149b8cf4bf20e774580cf',\n    '19051d2a1ad3fab190c5dfaf45188b49b4e90cca22aae54f0a785562d3d3f41',\n  ],\n  [\n    '541b5332491dbdb2b6f6bccceb7634970c046963891fae936dd950f4432b961',\n    '78fa54da996a51e3a9c06091d58c2405a806649da2bb1f323807c4eec50eda2',\n  ],\n  [\n    '5f11e973da659b7738f87ca5bd4f3bd02207dd3c8d978f0d3e83fe81030febd',\n    '137aba7027069f62d25caed416e13537687bb1428e71e5f0a0c52d52f2e65bc',\n  ],\n  [\n    '15ec941ee6c2110b819b5541be52981c09d83484c9dc735c43f39f5778718b4',\n    '4561826142dc5b56acfcf605a78a4090472bb61235bcd605a765e05d0a7e549',\n  ],\n  [\n    '68ba398736d659522f484406110b43c68158bf4992094acf797a38979c587a4',\n    '7c1d9e1702e28afddf22fed7a7a79df4315c174d0c6c4f4c75bc77d9b56777f',\n  ],\n  [\n    '67889cea31c81a429fbae643a4fce0ecd690a5c32b99397e39ed6d7a08702df',\n    '7ea277c80b671146c9e455b98f42f45b941ac95ca2d15c8fa9ea82ee9b45e01',\n  ],\n  [\n    '596f2c68390ac26505d3c2eca5c77d46f8f3acbed192a2649d8c525a58d2334',\n    '49f3bd8c62c610d5c19c52d970bde24b270c4ff7ae900453b909e72483974a0',\n  ],\n  [\n    '567779fb8b0afe592cea284629e3621ccfae3c4d7d3dc559c9fed750591a395',\n    '6010bdc33f1cdb374facefff537e7910b72a1120502f312a7ce41df0d552ddd',\n  ],\n  [\n    'cebed0233e810aa6a29a8b0829d28f1c92f303d14dd73d6b12da98117dfc7',\n    '4bdd51e1192a00df23aa8d0673e4915877ca41ddb8c9eaf21d39dd167fde7b7',\n  ],\n  [\n    '4c7085f066adeb6781596771972b188177e63f2e2b3788d03e033cdd5af1f06',\n    '2929ee89f525862b0cedb3ab9b5166e1680cb77fb4668f10a6a3d76b5434566',\n  ],\n  [\n    '760e341bd836899c226176f47685f69438270c150c6fe7744cd723cd1e72359',\n    '1bf09f2f1aac1a10ce8bdf20d5d178db747f01a4aa0aa8a5e4bfeef562cd94e',\n  ],\n  [\n    '6016b94c00b54920027ef64902c61478244b1936337d2ad41d9a8d43dd6a4b2',\n    '3bf3dd9bce7f6d6f120de87fcbce6219340b59c2c1d75ee0d45105d33aab1cd',\n  ],\n  [\n    '4929e44ff692eb944d1045bee96e750219cda3bda0500029f0df49a1db30b5b',\n    '2e138dcbd092242699004b4ce98764ffe4e892841f56830af298581cd1e523f',\n  ],\n  [\n    '5972d0e526311bacb70a04e88969b6c63c7399b578f0dc28bbd00d65ef01da7',\n    '76b22bca9ac12d26530e7b0757e646beb3bbc5680d0f3f82fb8ee57ed4b5e39',\n  ],\n  [\n    '2ca0a42a26e26934ca2d48db960b4719113d87c5e57fb437d557c5eb4e03ac7',\n    '62778c02561d4ec5d83a132afd7763a8349207c6b5d01fba70b56ba660cba2e',\n  ],\n  [\n    '5137ee53f076e21a2c23da09f63c0d275408c31e4634a6b6373be5cf13e6c00',\n    '14fb446c077beb78e04de3282a63bfde12f9af85caaca4ddfab506cee31c0c1',\n  ],\n  [\n    '7d944853d1627b63f560aeda33acf640d35a4ee4d23a744957a2dae9d5b7c6c',\n    'bcb411a210710acbcb9ea12680d89e3e4e652228b6786d3886e95f4d9e6970',\n  ],\n  [\n    '37d412c2ffb173a728477446b60b2b702d07a5243cb5fc8963e623a5ee75843',\n    '672c79968908f92cd0cb0b4c65ba86e8f359b015623a89441e1bf859bba84cb',\n  ],\n  [\n    '5b37f472aa80398bff12cc74c8ee784c4fc89757292580d3a498bff17e9f114',\n    '7d79da1aab9cfef58a5f3d1c9ec466956a45f8d2af0c1da6dd4c93f720fae6e',\n  ],\n  [\n    '25c09b3f1188c562571536202eb0f5fc4b9a7590417b8ea58b4343685d88a63',\n    '3d5b817c73b37e9a1d24ca923351359b42ced2f3cafbcac8c2d6322dc767bb',\n  ],\n  [\n    '32e60904e73f9756f71e0a918d302aeca17cad4acacc81bab15702ab5ff78f0',\n    'bcf4c0204f8275072f98a65b09ac58b87cdc9c70c4edfe99fe18870a3a5459',\n  ],\n  [\n    '49c35575996c1517d2daed90d2fe4a58e674d6b4aaa7288d0642c8bf59e562f',\n    '57eeee00adea4ca80eeabab57852cbf03f1a57e21872cd44221e0550b9193b8',\n  ],\n  [\n    '10e1776b4c2a867bf1b028c6edec224cc6616c747e272f49e69b67b02a893dd',\n    '8d45d62ec8e627b56950f2f7622a0438647f9e9f28e723e4a37cebc039a1b0',\n  ],\n  [\n    '79a93a75ecbe943acc964fd39ecfc971dc6555b2bc335e7b53f52f4eb16cd36',\n    '146132a68ce2ca8b48363612226771ac547eb3cf52b6eb7981718faac08aa3c',\n  ],\n  [\n    '6b22d32e0590e169504e7f19864fd646d0994e7ed3e578a5b88f6e095913439',\n    '68c3b22d859fb85e5c8fa0a8aea932285945b230957e603394333e9ad5acd82',\n  ],\n  [\n    '71ce5ec8286eb8c93b8481c6d19cf0a288ef4da4397e9c80f65023e516bc097',\n    '54470babc742780cd8a05499026e738ccbf81d4170d1731734de68a8e5b402c',\n  ],\n  [\n    '27beb13a43bc6a1f6ce046da438b0beac5899ff4d57962dcfb6476b563f74b',\n    '14074e9e93ee45394dfbe833998b9d1691961f8ba3166224b36404448c61bb3',\n  ],\n  [\n    '6b1de6c8f161aa6509a1dcacf2c0aa1bcf6ee9d9b40e032a9d72f77a6fa298c',\n    '5e9312eb5b59d6cbadd7d3dcbc39f1b5bd9a8346fdcfdf1107bada6f9cc048',\n  ],\n  [\n    '32670fc3fa43bf39974ba72ea51f0d045d92d084a81fe5282dfc8309aa900b9',\n    '518fee521bf1af62356aac3b7e53fdbf57121e030c6e9572b3de69912ca4eb4',\n  ],\n  [\n    '4b9ca363eabed9c66091a347375f7065cd28f49f914447de7cc1461f1375f1e',\n    '3a1a3a2e5e7e72476befe2571ece708052d740d02cbe6fed58740968ae609c4',\n  ],\n  [\n    '4cc6da42863a3deca62fa218b7a3b50e034eb4bafd393eccba3f4cbe192ef10',\n    '20bfa683c884f203713953b26d2821287ecd305fa2cb70570474533fc07f918',\n  ],\n  [\n    '87705353c44a5ccec8de65cf5433be6b3d9bd21eea49b60e6c907cf1a67a6a',\n    '112804b13eee56e3b01aff75fa08fa8374c44fc461aed8a30ad54acd09c24eb',\n  ],\n  [\n    '6cf6eeeb9d339c0a05f72fd5af73fc7588e6d957100ee8999109437bc126cae',\n    '54fa257cea22032eac272fcd034dadf2e00d602ef9e519cf7072023c130aad1',\n  ],\n  [\n    '19b32925048c5519d929650c833661b452ef7be7963fab0b6b328ab7dd7a28a',\n    '1bd0c14a10bf9b88ea61011c0b2e64d07da151c6203800d5a5d12063838a510',\n  ],\n  [\n    '12a5fc5559428bc3b4eff97b21b63668b866e0722807f1db1f19696bacd9b0d',\n    '4c2eb07f0c24047a3d73b560144f3fd32c99d6dbd9fc7cd2fd2a72a6e4b24c7',\n  ],\n  [\n    '13662b7a7d390aa76eb86a7c3bff6d9913eb28db6bd1a7c42de5cdad2e35ce2',\n    '40626aded7f56f82cc431ae30527b096f57fbfbc04d3e12a5abae3edf301cf1',\n  ],\n  [\n    '255825bd49b8a2cce114360bd9c8fe8c641af64c8e7710107213cfcb006f43d',\n    '3619cce4482335232f9e76a1460be9d296f2d468d26e4f95a78c71524fe59cc',\n  ],\n  [\n    '7f83009eeed4f12f54d341bbf06066480cfcdf51dda103ac54d4bcecf6b3b31',\n    '4269519d28faafd7fd68bebfd8404d71ba05d62c4bb6d65d24aa6802fb84ab6',\n  ],\n  [\n    '2f325650eb316646b4eec903fe44828fcb11054f1bd42ca3a77f7e734110b35',\n    '44f976082271016f9048e22c507d97d628722bb431f8d5cc1890524e6c386bf',\n  ],\n  [\n    '750b166bb6edc0ee80fae39c7c106879036738df2d79fb2294e1c21e9a24d6b',\n    '54f8aa297a1afafe2a17a3254f45861167414327e918d17003c6aad01d0b24c',\n  ],\n  [\n    '3aedb10db9cf3285cdeee375879396fac1fb50dd259e1716f8c01e66f67ca72',\n    '7feb9400f621f58c21601f23b7ec7c94a9b6b193c1cd74a8a60846aedadd359',\n  ],\n  [\n    '4ab7151702de76faa493e7a0b1ac20ee4d10c33b83fec9477547cb1236973eb',\n    '63f1f122e3ef3acc46b0915ac69c3f5772879799cad889a817f55f5853d1235',\n  ],\n  [\n    '1675ead0d20e5bc3a7a7331999a87ac4c916ae29669e54197bb02aa6364520f',\n    '4d1122da90d49e491922d9b533a6a668e2f65a2737ebb391ebb29fb7c1f8a9d',\n  ],\n  [\n    '2f7148111ef53c613157aeec12e16a20f13481da4390b6ce18a85d1d8547087',\n    '2eeda779ab395597651d2a0b833ccf53b10280750139916ae2baf4ec57c633d',\n  ],\n  [\n    '4439c7810e7b2ba772b701ec3acdca0b80c9df23047710b87f7dc3f13b337d3',\n    '5029cfe704c602a8a4662af0a5860ec03fb88f046d0e3400f2ce7638014c621',\n  ],\n  [\n    '2248eec40b5732a6a488b681f093643af7937071bc73118acae295a32b51b05',\n    '1577e4aec30a97b648de4d0b19cf8891151b4eb11f8de9c6d7312f091552e19',\n  ],\n  [\n    '4738424e558d4e0d87a3124ca02ea24f0adc6b7a9768b0d3945ed2a6104857c',\n    '33576f92aca3f0c8ae689c3c274c2de6b918940d86a6852e02fc99e35d1614',\n  ],\n  [\n    '7829edd8b866ebf7baaf604ed13d19a9797578f44bbc51b1cd67ca53803e96b',\n    '5559040a6083f2af1f9133ccaf5bc2ce06e56ddfc7dd410e9635c0116b62722',\n  ],\n  [\n    '7f927b881f2cdc05e1a69e40bb714af47b630d1425f08ab5d574ee698f33d51',\n    '26a465288e96572de303203bd38f4a03031e8158da0591cb037c0a5111d1056',\n  ],\n  [\n    '36a65598552f8753580d1655417d645a140966e10a1e1663015f9fdfae44881',\n    '33d5bbfaebf59eae72b89b1aea12ab2ba3c9617f8c3baed1ec16bdf668381b5',\n  ],\n  [\n    '403becfa545c826782026ff409cc16c9d4fe428f1b5b6e630c92439d2fa5fd',\n    '47bd6f2bf5d74f710ecb479c79b01fb774fbdad590e683a415cdedf33f71dc5',\n  ],\n  [\n    '3a747826d241b877d3d56b16e0b810cf088eda4fd6048da174c9991a942a5eb',\n    '2c7ba19b0a3486a2cdb84d4a388d34beb077a0e467ba44590166f93f6a09d2e',\n  ],\n  [\n    '3d60cd375842714b37bda89dd1f13a7e0f3ff133b522209617d031bce05a537',\n    'f77f216451ab01ad5226844d2162a7f32744688bcb4325445539e2ce5cec4',\n  ],\n  [\n    '235bf66f67c9100e7f0e22bb299cdfaa603644b240e0770aec7e7fd163e2a65',\n    '37110b3fa83ece3990afca2bea8d5ebb3c7aace60a0147f8e6ab733e2f2b4d5',\n  ],\n  [\n    '3b796d4eb69a55471fa86108f787b3604874e92b6887a7667a6c2bfbbd9a42b',\n    '4912d6dc0419732ef82cb3278415851d4e2d7ca89e0f4d7128cc9de51b810fe',\n  ],\n  [\n    '48d53516dd51e49faa7ab46c8c10db1befd10f23c6a9d9bc3640a2f0da44518',\n    '73a2fb3d064adadf21aa1362c04affc660598f38a9e069b3afb74d0a99ae9ee',\n  ],\n  [\n    '48c32cff161ed145da0d5b73084897647abb777adf65738559ceab6939cf3e0',\n    '3d99308978e828f857c382df32b472bda81e8ec8e30c8844077ba6d6d2ba903',\n  ],\n  [\n    '2947ff091a8ec9684affbc9a62e09e598841c4a6dc638088492aa47dea57097',\n    '19a2cc97975e547f97a4d02e42f89e6ced6f5a953cfccdec347867d26926541',\n  ],\n  [\n    '1960d85f30475615f82484eba0bdafb7ea7cac3809f0518a757d66f02b01676',\n    '36c8f77baabf0cc8805d993bbe62041fcf4e3239cf9d53278a4fbd91e75eeb7',\n  ],\n  [\n    '2765f28074d21d5a055340b6d40092d2bbef807e02009fabfa08ec0b9bdf38b',\n    '7fb189e0553d5df52b6843661814824b3f3cbebbd54988f042fb256c6bf30b',\n  ],\n  [\n    '348836cb2aaa00212f4b1a4e2d7fc5417f246bf2fe5c9a16ebabda449e2e08a',\n    '3f7276fd7d69e0d55ce5ee1d2d830534a27227fe0b6d8a36c93f9a78b872969',\n  ],\n  [\n    '7afb9d34b6a42ea8c6d870e4b8191c274201dc1f93a1a2219a2392b7e345a31',\n    '42bbc20dc7115e0758b364a110227b16b64ec58fc535ce5ff1a9ad8b8a09fdd',\n  ],\n  [\n    '2cae0c2afee1767fd4c66f52e1f176d217e92e89cc19eb36d5a6c1715f641a',\n    '5335efe2d9bc3667d25ea88bf76438a4d6ab9ba5c512f9da7d0529b79b62d83',\n  ],\n  [\n    '1cc5fde334707723c3a06f00c106db88664284a2df47bb6b144d9f960aea3e2',\n    'dbbf610d100316938bcd8bcd078513512ecb50d4579690dbefaa419c05980d',\n  ],\n  [\n    '54e90cb8f3a2998d2675c5780679e06c0556b1e618f8fdf07f9a4b2466fbf1e',\n    '16248676b6f06ec5e34994bc3115f85c8147b54f34d8500928f2fdc051e2089',\n  ],\n  [\n    '525c70a2ba0dbdd68d75640f47f13d0d415ea595f7030f533f4625c2a46523b',\n    '58292c8675e5e1a438f49e0c05648d9a7aa997f2f1fd77d5de1944afe5d7eea',\n  ],\n  [\n    '54726d78d099007393348787a03107ab492e59690a46c87fb02ec554f2353bd',\n    '53b54b77184ba75a3391e0ebfa6d6974db028f3f8e34bbd5460759a5848dd76',\n  ],\n  [\n    '4ac81a66903537769d3aac6c483ccc08535cb767b6b5e1ec8017a7393ab70ae',\n    '2cb22b77a8a05d26f11a4dec80eff292633aa05553a889c5ab16b6ac6e2ab17',\n  ],\n  [\n    '21d0175349e21114988a2930b9a607d43245783cb4a0c984ce27f4c4206708',\n    '59f1f49342cc5496213d3329bf4ca7fb0044337449c579bf53147a1dac9e67c',\n  ],\n  [\n    '167f821b381f4c8adcc39789475fb55ba639e5124fe75f26dd61be396dd5e66',\n    '22002c87d4cafb47ac9d27286d5cf5ff7a6715d69814118269b0729be9e4b3a',\n  ],\n  [\n    '31010666c6db83a9f9e4db4c48173afd405783ac53852a6e38a8ff925528843',\n    '1f466dc9b5d9094107c741dbf380f9fd98d8549cd50f67169901516f8cce74c',\n  ],\n  [\n    '1ad3875769a5053388a86edc85dd80fdffbbda6a456aea497ff81a0f1f6707b',\n    '2de7cdec5e2bad56a71bd2f33a4ae4c874e1ad4210a6ac32b443cfa34e85b1b',\n  ],\n  [\n    'c489650fb7f459ce09cd05a456fc5a46b849b38a671298ed645bcdaab168b0',\n    '45610d092b8af1c43ceed474cd17f7bbee65120aa6fa4d37f949e7e41f25327',\n  ],\n  [\n    '394256a5ef4d7af5459587a0bd2edb8acaf5ecfef2563c9a04daf34a4abe4c6',\n    '1ebee390dae1403c0c53994e1d064fa64e20fcb45392e209b2b99486a559ffd',\n  ],\n  [\n    '410a1511fead6151e9bedb089b9832d0fe01fab76d3f8459929f767525aeb27',\n    '361f0a5ffe09fcc3ad4eff3f5e89508ac247af80267100b69de3c59df561cfa',\n  ],\n  [\n    '38cd437c9f659e110a869605c182ee9fdc26de36baf559d9229e258267bb734',\n    '624b1128ea7739bf1cbd0e423af92a4884323c868d2ba0ee9d362946edee2d1',\n  ],\n  [\n    '78b126e50b7042d2a019f95cb87a3213c664ca1bafe345999b1e9e2dac1e608',\n    '19e398196b22f4488cbe854c614ad8c353839abc5ab3a4f3f5c03c16ba8a198',\n  ],\n  [\n    '6d3a5ce91132f385a91823c5c8046c4b638f5fe63357424410d901457cdb867',\n    '7b80bae16d2d487e122495174f7a70992bc5dafbed72bf84127ead7c57302bb',\n  ],\n  [\n    '32d053a904dc4d88fbe7d0b96e0cbeca22a00aa5c79c753d52b0b60abf31602',\n    '3af6a02e5cae6d6490354ae51185149e3fdb6d0d9caab90e95ff58aa0c40377',\n  ],\n  [\n    '49b1fbff5bdb0aa6938b066dde0ed772c0d81f9eff52e7fe038b0ccbd78adb5',\n    '1c6e57834eb14d507eed8b36c81ddf92fa91c242467061927a742fafa82b43d',\n  ],\n  [\n    '2f28b8994ca6f234d9293d26196b43b9d1d5306844348c4a638102c05de85f5',\n    '759cfb172eab065d477248b3569f4ff5791055f01e95fe71b94b8e615d73c96',\n  ],\n  [\n    '3c2ee954ff534f856f59188fa0f29ed8a022aee0cac52d634f6dc58cd514d70',\n    '22bd162e74925f0a876bd8a206b8767dfdd7c898576a73a490f138d9a7f99c6',\n  ],\n  [\n    '5763a7cab001e1aaeabf9ab5b9b2fffe6cc2b299ab04ec4933da74d960e1ab',\n    '715ee4f8ee93ab5a1dba00f0a6abc4eec47d49b61254cc27fc36a031e32f0f8',\n  ],\n  [\n    '19976ad8d7b7f47c785408243a227401996b36e47c7a78a7bc7d4256233ba9a',\n    '896b713c5d7777b0703821a73c1d9a4c3755501042120534ff13990975e1f5',\n  ],\n  [\n    '61674b992c29827186cab5ff454758dbbed8e89bc23d0bd33193afccc3a04bc',\n    '38e1020744c13903809ea30a0662fdb5226ae760cdcf10800faabec452e00f8',\n  ],\n  [\n    '2ea2d48bcb83c0c9cda4efe11f07165cfcbc9ccd26526e5fb12556316d4b1df',\n    '1d2d68b74ad384c5c4a9c85453104216357bfcdf635680b40215f0f800974cb',\n  ],\n  [\n    '7881212050264c40c336ed3a15dd2cd868ec9a558f5b728869eab66e8b8ed54',\n    '21aaefcc8ad8a161b8971d6880321781dbd939570c540da4c330922b8c81e9b',\n  ],\n  [\n    'b6be88ce0461d20f59c5199573cda0170b61decf6e8e69a6d32f1695adc4ed',\n    '5536e4808370716f2bb3423a9a49a38ddbfe91faf3b7a35eb53d3519238b6cf',\n  ],\n  [\n    'e5972af1655eb6dde2e8c77cc58044299922441b5ee41ceaf5cafedc765bcc',\n    '550282f37a4783dd60801c237045992d6fbe82a5902e7d837ea25f6f98c7b3a',\n  ],\n  [\n    '7efc1aad1f580d8f50274f1c114c40056be19a8c96fa8c4cb5bf85e1e7f3e4',\n    '2689f1c3898b114d668be6413643ee9f879913d40c262541fd0316264c60a4f',\n  ],\n  [\n    '7939db98037f59b0113e9d60051f75ac9c3cfd1a3eb535c73e2d945068c6c5c',\n    '410914ca8bbf3c65cdf3e9772ca790c19131c50068d34b7346c10260a578a8e',\n  ],\n  [\n    '225b77ad00a2b83d26690190b74867326eca4f55bfbc3a13be036225ca3b1b5',\n    '411faafef89042ce6beb64309fdaff70fa53e9d32d79a21e7f82f80e79ff05e',\n  ],\n  [\n    '1501e64c99c8b6658b0479f2c05c9142d246eaabfccf2fcec8dc4399539d8e1',\n    '3bab1e3339e42c9ee66c65b0b20236fdd9362d3ce786ad3a9779ab578af50a8',\n  ],\n  [\n    '59b907b941f24fb8ea2458153e55f07534b388e835af7b69f3c9f54392a335',\n    '1d5438c4f2f68a417f3d56f916d899a6ffe910f5f2989ca31687f1b10f60db8',\n  ],\n  [\n    '2887d08a26f484546f360e33abbf7a998b7170a5b30070938b84f072c676bf3',\n    '62a78e8d00e5d3a59e2fc424ffa08961567ba1ef24c8531cd7bceee6074a535',\n  ],\n  [\n    '6e3cc8076b3d45377929033af35aab0c6d19ae4fd47c0daf844079ca04c46eb',\n    '7b90f338e4d848aa8f19d0b5c3bca916a2a9024acbf14bddb278bca2aa39e5f',\n  ],\n  [\n    '34844dacdd3ec54a3af328bb9d67715ab33425e194ac9977ca02ef22e8f7a88',\n    '3c1affc6372f32a1634748124f9e1a03c4f0c993971da0dc28888b0801279d',\n  ],\n  [\n    '436b192e03a49796cf9bc5e93c88268b71c9c24f9c3a85322bba634ebea309d',\n    '67a8091ef69d62abcb28ce5df4dc7d53f8dc2b9690344f75ecd03a6d9386044',\n  ],\n  [\n    '592d25b68baff87a6d7fd41ff0dadbddc1bd1316683de3b2d677501c0eb14e4',\n    '27ad1e1099683f54589010faeefb19e38569ace43653be8787a42b0591e7bc5',\n  ],\n  [\n    '89a5111ae911512ba62e87b97f643c0219702f235c70f62c6678a129302009',\n    '557fa3d98e9ce7b83b47545013a4498f3de43787fb66b1a54521222242f7c1b',\n  ],\n  [\n    '1c9b5e53377e72da5066cb08566bbf9ec31ec1877f455d932cd9b1aa375d34e',\n    '72f79555a8bc207863f32d482fca54692825449fd8963fcea3de3a8183a739a',\n  ],\n  [\n    '574a6e05eb14591729515be239ea8c1fa9e12d4049d42876f76c8ff37bca03',\n    '5f99b3af43ca68c1c73e8190d5f73c8de162ba643d7d5f0cd73cfa8135db6d3',\n  ],\n  [\n    '513fc5c2e16505b2b25a2f284e167d5401194bcac0dc3ecf8b7c9acb560daa1',\n    '687ee7a1a8954d08d3856e1a16ded808e419e789736d3f55f79f7693bad69f5',\n  ],\n  [\n    '53d48bd1205274b1c2b0a0ceb3d21c5fcd7c8892a784931603240b288a598b9',\n    '35387abd7ea59c9b956de44d36533cad1f6668c438d666651695ff3862159be',\n  ],\n  [\n    '213eb1ea99e08825110dd61094eb6e8145119dc1c507636f068730b1e086d44',\n    '744f6853f4f02f4f042468d0739e0c9f64df720b87ed77d1979547084ef7a89',\n  ],\n  [\n    '735ef017d091ca23264ad0aa7bb9b2be3309b4539605e79ed4a652ccb2fbe3c',\n    '7f0ccc7a5747c4e921fff97d431169f690763427e2cfd1ad74d7a0308d7faa9',\n  ],\n  [\n    '3f36babc5a30070b610ed97db44997e6d9115c9c0579ad8f75d295a17130001',\n    '79047908a2474e32d5c712a07bf5c4ad522590bb5d6cefda410d30528e12ca8',\n  ],\n  [\n    '51c04907ae88a5926b242fb2862cb1f2c651a94e6caad5bff8601c079fded74',\n    '10a585a269f460aed43f54c7de13cdf623fc8de5957526997278be939ef32ad',\n  ],\n  [\n    'c1e1bd626a735aa2c065831317217ecce68e377eb1f67e54ce2e97bc2ef2dc',\n    '53c5af23a9b482f420be6dfd37b6886154cfd130794098e1f51c1885ac2556a',\n  ],\n  [\n    '5aff3b30775ae4758e604a4a6262803a545f5ef4e7855fa245ac6a6431a9ece',\n    '39a4799e5519047f29333bee9c86c99bfa8056d4aa381c396c4a44331fe795f',\n  ],\n  [\n    '3d753e9723701a8e9d99b91bb93dee2eda7ffa5072fb2cd5c5fd99aebcdb299',\n    '15798bf5c17d6d5880fed1553af32dd8d8baf2888c715a886575448a24c7975',\n  ],\n  [\n    '6593e5078466b07a4222d2e544da826d2c583c9cc5f2eaea148b129b00d4aa0',\n    '11b352b08a0a61d3cd67d1dc08069dec3bde907b3da0f56de5011b956bf8744',\n  ],\n  [\n    '7a6eb353c5be9ff03fe4a06c01fb71aad2b38144179a291ebcbb2c2417cca65',\n    '3de3ecb12f2fa699b46a9d399abf77ca17bebc3e491bfb2542dd0fba991e2bb',\n  ],\n  [\n    '2c7ead583d6c32162091034a9eddfa775b4e84b8bdbea939edb2a80dcf64f6',\n    '461790ce40d9c276d962b2a1e9a74d66e9d7335962e234e8a2fc6963d31722d',\n  ],\n  [\n    '34285af023d9b4c2c2b88e8704bf2c05a9b553b00b2e70ff05f8c2970cb134f',\n    '33fe678e7671760a83836107428dbade68c3593fbe568f3f8f1b2c568099c44',\n  ],\n  [\n    '6222f720a24466263db6a11842f117fc4bb78da6705f140e48869db3e087441',\n    '6eff5b9bf3aeedc962bc5a24b66e7bdad2153450ed53a058bf2c8dbf2907693',\n  ],\n  [\n    '17c6ec5ea206eb97cbf53851e37ce391080e0d2bf1e5395610f79ab0503f7ce',\n    '3adb71ca3523d88ceb1e365f12dfb24895453c14daf0046b2626cddadfdf5f7',\n  ],\n  [\n    '70859f9771a713e54974ce11cdaf44b0dcc3e9befa0c0834908d877eeaafd27',\n    'd18f794bf0cc0623b711e7450030424e52326c45ba9b03341883ae4828a5f8',\n  ],\n  [\n    '2a820cfd0fd4ab0871e7b303cd545a3086caf8fa818c087a4017197da74efbf',\n    '5f992683ff37f6c041b84bfc01503d333ac9763505cc8f69473da01812969d1',\n  ],\n  [\n    '5b0526de2c07fe7cd73e3884f642d57a0ac5e13c68590ed03a14e530616e8c1',\n    'eec69d0cbd92c9fca31ec967dba848bec368e792d6678797946a5e34fe3487',\n  ],\n  [\n    '6cf6b3efee707210cb3a72f1e885c3d0953aefb43e5e148c740aa1641725c61',\n    '911cb630b898e2c1a9115f9e45bafe3b819edfb1eab6e15612d14289939984',\n  ],\n  [\n    '74e913de55f1e46143cb2ecfc580f8d3d3908f200281322b84e21c989cda293',\n    '761d2736c9ac7670ba905bc2629c6c0dbe988820a4454ff415ba68710f7df92',\n  ],\n  [\n    '44084305e0c911a40b7cbefe5f13cffe9a99375d1a584c4a2200958050af7a9',\n    '249c83877371564708ea525b64b1e7e12785460d83364446531c9adcacba5f0',\n  ],\n  [\n    '2bf71ad4d1bee1a67fb300477029f54bdb0e09f78bf2ac2e8afc7465a7adbcc',\n    '6244dd6cad282539049be57487bfd9900bb0d5da805d02b535096368fcb4cd5',\n  ],\n  [\n    '3a62d8f763b62def36e4089458046a49c5ecb91b861549530773e0548ff2bb',\n    '6a10a03ba61e6ac657270465c09aa9526cf1ebe96bdecdf0e7000476a47b9eb',\n  ],\n  [\n    '284eed3a17c51e0677d4fe897f056abe9def8af07a4630e6ca5723e2aa6677',\n    '516a06ac1d5626ed03d2eee9de6f60f0311eca703a99b0fb31b9c66b01c27c7',\n  ],\n  [\n    '2a2c63b16cccd685f731d06fe93ce2cffb358d34d03dda9a7368185c1eb0c32',\n    '7180baca0ba81284809f92eca1654cd76b925a9242e5d5e0f18d0a55d13c6ec',\n  ],\n  [\n    '5f9466017ec09769611389ea5370ad68dda936d3f5816c9e928ff9574abf9a7',\n    '6619b5b145bb5f4f29deb7a4cd68ef4da3995312fa6537f0d01684da4267ece',\n  ],\n  [\n    '74f229babe01b4962b3307589c1a13019134b1db6822698388bebb55d21c30f',\n    '156ae857ab3279f754facba0db36398dffec8c31e5e160473198f2f891b7531',\n  ],\n  [\n    '334b9fe3a5fd99bc966ddd1309698fd32afd1f235062f2c275b6616a185de45',\n    '221a60053583cc0607f6f2e6966b62fc9dac00538bb7eb1148e007a92116d2',\n  ],\n  [\n    '7ad710ba002a67c731efbaba2149d16fec5d2f7aa3d126fd9886172e9f4ea30',\n    '3a10f8e902a7a13aec94d66415347e1314f9bac83a7db176096b809b25ffb86',\n  ],\n  [\n    '4306dd0a184a3283c3097ff8f7434cec80912e9dc04b7df21ba73fda9f8e6d8',\n    '6d42bd3d1a8dbddafd09e872e2aa3891ae79ec939dc1b382196bc21c4ab749',\n  ],\n  [\n    '1c3f2124e1135c32a426d1d14e471edd9e0f2c7bd703ee123cbbd608e8c4be7',\n    '3cc607a3c3f1ab68dd5fa56c65996002721b8ad8ad4b0dd9e5b1467d316583',\n  ],\n  [\n    '294af33272ffcee0b56a436de1b73759cbddebef4c07888b42c2f92b0b68e1',\n    'd837164311d5dca8d37b99ef9eb22708643c83d1cbdfe852f63ea07b06fbad',\n  ],\n  [\n    '753bdb5439a19bbffdfa02b1dc24e8368f22d0a8276b109c11e6feb26f56f39',\n    '6ed396231af93647633eab467f1a034f38e76823eb85baf97cae56e2dcd9f75',\n  ],\n  [\n    '5674f0cb892b733fc0b50e121d8679afed0a925c32594cc65ffe83bebe7748e',\n    '7fbf0325dd38dd94905adab2c52758552292a6a103d9edfcb11938828e828c8',\n  ],\n  [\n    '4a8f053573a0a74251059d0229d89b6660407ba0b491779fd10f87a5117c81f',\n    '21b70112485398bf67ec9d733df24a1df30dea718a93b786f41ed04e3ae3c5e',\n  ],\n  [\n    '726c01ec4a08df8fc8de173311f50d4f3b97c5a9cf68c1536146f827db95ae8',\n    '15013cafadefa7f1c4e4dfdd70bd4d3979dd18bd7f0332572ce2a3fd8773d12',\n  ],\n  [\n    '38ac0fbfa98937257460db7e6645d7e5112b6fce7234813fc8a704e8ade8da2',\n    '73c0109f86048aad08c443f781ae60ad13b99f7b9cfdf3128fe6d6eeb799a7b',\n  ],\n  [\n    '6f6d3a38621582ace092eb50ecfe9eff265df141ebdcab8653299116fcea291',\n    '4a1bf3f39bc919c8f1b720a0b1ce952cad17f2ba98308ee6b76dd9b6f3d7b75',\n  ],\n  [\n    '6a307fc28e1df8d9ad01766419e097797d65cb674436fa1c8f012d3de2c2a1f',\n    '26911a635ba824db004875d79dd84834a97ac12643e42829015bf88c1fd6f05',\n  ],\n  [\n    '2a74860e3336d6db916555894cc8028f41508812925db1925457afe40257155',\n    '5f8da573f4c39816ce2dba8a20224223a7cfec53117ec78973930c0e9b60244',\n  ],\n  [\n    '4d2b49e1ed0799f719b8269f092cb489a466a645bc0ccabafdc678864c176d7',\n    '5410083df7d256f18cbf5697ae5e52c31e075d8a3b27e21d6f5177ca882f6c1',\n  ],\n  [\n    '110ecb9fbf6c333d168cee473cc5ad98809b6cb9eb5d1f6cd28ab5fab504fd3',\n    '7e3c54d7533d9f8c3310f219dab0cc3ea4d39b418a748eeffd6bae2b8637a43',\n  ],\n  [\n    '5be4d711b80da70e6d3ac493250bbfd16f20b25f31919b3a91cf14ffbac1096',\n    '7f55a0919f082e8885f1515e83c5b39b6022404503507498e1b4422d79c43e2',\n  ],\n  [\n    '2605125b95ca4ba93a21cbbba5762898a7cf9e988f07ab9e64cb3868e3b139d',\n    '62f0ccf55b9fc0eaf9736fc8ee484e2acdbe259813af9803cf815829a5e9d3b',\n  ],\n  [\n    '1092bbbf206f2a3068167c3dd99a72de31e206f6c504c071c8214d105ff814d',\n    '309f489f68a62089f53b96df5d4fbc3ecc5a1a42eb7ece0e49bad17ad490ff4',\n  ],\n  [\n    '2abdee9409d9c92559ca3f4e6bddd649c31aa09b90bfcb4a612af491241e18d',\n    '3ffa8eac180a29de3f8a69efca84bac046f921f5725e96a6ff0530be1436aaf',\n  ],\n  [\n    '376313f27d00bb1aae7ec991745efe6ee28c6b50de0c6cd9845cc4bb4f83543',\n    '6a8e0a9389ba528b156fa94ac090a895d7b795818d4941c29415d9e2984c547',\n  ],\n  [\n    'a80380c71bd466a696b3f0fbf02817c9459d9798f4f3899cf32edf647fe066',\n    '6a09805e814e7cdfc76eba4b79f1df5ae559e0f0aba9f728d3cba4ea5c57471',\n  ],\n  [\n    '223694b921d247d989a79b9b2b2f07496036c40cb043eab074a9d6a2cd2ffed',\n    'c247217f1b1df35e30d9e15fdaadf42d6fb0edd3a5a7e265d4cdc426c120aa',\n  ],\n  [\n    '102333620df278c6714bbc880fc087db58c1b9b4d77ed4d61b32a74bfc7c3e2',\n    '6a77d37727ccf71c2caeb151faf4404d4b94e9047f9f0a7c3966367f3b53c65',\n  ],\n  [\n    '891626f466536929ee7eadcd18b41925706dedab7528ed5f0f7abf039eb9d2',\n    '5f73d11c141c933a35b2d0d06e5cbae614a20d17dc3b439f8bcdc3413c5ea37',\n  ],\n  [\n    '215c23fd3f073f870e5e80303967391bf173f8adcdbeec72d131c557babc203',\n    '10634332e9d9439a321597dc5b0fac9ff478834c3d6e281735f21a4a5e13266',\n  ],\n  [\n    '21ea0bdc1332bc36e6aeb43be9071651c27e4ea2eadec636c8d818d4af72a36',\n    '3a523d9643dccc6bb9c7c58413312caa3e60ba9c7c7f0177e0f3f469a3241e3',\n  ],\n  [\n    '60deaed1bffb6190beed40caaf2bfab5e43d3707aff7ad3f278d571aa247eae',\n    'e41f71ff254c1418e6a66992af307789fe04d6606fb2670900bb1a089fd879',\n  ],\n  [\n    '1e1fac4a1646253fb1332fadc21fbdd3e3a24a840d129400f520ae4116a4cf5',\n    '69c406f9f46576afad68808de0ab7e8922b6226af748e721d9097e21f1800f3',\n  ],\n  [\n    '5db0ddcdf79ffe74d6454c12d2bc60b06776db03c75dc413f5be42ea9a91b5e',\n    '134c3d6c699841f17306835bb193785228ffe7ab212a01a861c56b086a18cec',\n  ],\n  [\n    '626814e320fb5bea505b248fd1c1389ad586c1cfe04923fe2f83173e915f4f8',\n    '7ae407a926e887206a8b85cf485f1f327c9bb8ccbb6897024e2d122877d8ee0',\n  ],\n  [\n    '23186237dc7d3b570cea645282ad4c359731bbfa54e7f036426bf6493812cd',\n    '7d1fbab7e61a22d3b00993290d9f4cd5d820061573e787f66c2cff9a18e1eaf',\n  ],\n  [\n    '54302dcb0e6cc1c6e44cca8f61a63bb2ca65048d53fb325d36ff12c49a58202',\n    '1b77b3e37d13504b348046268d8ae25ce98ad783c25561a879dcc77e99c2426',\n  ],\n  [\n    '13961b56b9fc0e412e468c385c22bd0680a25624ec211ffbb6bc877b2a6926c',\n    '62f7f7792c77cd981fad13cb6863fe099c4d971c1374109185eae99943f16e9',\n  ],\n  [\n    '47abd7308c70659af3f00fafe6837298af3cb530b6c2ba710ffd07a6bc1ae98',\n    '75d0c8a7377aa9f0663d0c124a5659750847afabc29e39893fd27534a4a03cb',\n  ],\n  [\n    '2c6276b764fb398fa555857dbe0ce0ec18fab7a233bf23851295739801f0585',\n    '5d8f4897ce44007ec5bfcb9aeb78b8f6e1d40a514f72d213c9300d2770d2b8c',\n  ],\n];\n","import BN from 'bn.js';\nimport { curves, ec as Ec } from 'elliptic';\nimport hashJS from 'hash.js';\n\nimport { constantPointsHex } from './points';\nimport { Instruction, InstructionWithFee } from './types';\n\nconst DEFAULT_ACCOUNT_MAPPING_KEY = 'STARKWARE_ACCOUNT_MAPPING';\nconst DEFAULT_SIGNATURE_MESSAGE =\n  'Only sign this request if you’ve initiated an action with Immutable X.';\n\nconst NFT_ASSET_ID_PREFIX = 'NFT:';\nconst MINTABLE_ASSET_ID_PREFIX = 'MINTABLE:';\n\nconst prime = new BN(\n  '800000000000011000000000000000000000000000000000000000000000001',\n  16,\n);\nconst order = new BN(\n  '08000000 00000010 ffffffff ffffffff b781126d cae7b232 1e66a241 adc64d2f',\n  16,\n);\n\nconst starkEc = new Ec(\n  new curves.PresetCurve({\n    type: 'short',\n    prime: null,\n    p: prime as any,\n    a: '00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001',\n    b: '06f21413 efbe40de 150e596d 72f7a8c5 609ad26c 15c915c1 f4cdfcb9 9cee9e89',\n    n: order as any,\n    hash: hashJS.sha256,\n    gRed: false,\n    g: constantPointsHex[1],\n  }),\n);\n\nconst constantPoints = constantPointsHex.map((coords: string[]) =>\n  starkEc.curve.point(new BN(coords[0], 16), new BN(coords[1], 16)),\n);\nconst shiftPoint = constantPoints[0];\n\n// Instruction type mapping encoded in BigNumber\n// see https://docs.starkware.co/starkex-v3/starkex-deep-dive/message-encodings/signatures\nconst instructionEncodingMap: {\n  [instruction in Instruction | InstructionWithFee]: BN;\n} = {\n  order: new BN('0'),\n  transfer: new BN('1'),\n  orderWithFee: new BN('3'),\n  transferWithFee: new BN('4'),\n  registerUser: new BN('1000'),\n  deposit: new BN('1001'),\n  withdraw: new BN('1002'),\n  cancelOrder: new BN('1003'),\n};\n\nconst ZERO_BN = new BN('0');\nconst ONE_BN = new BN('1');\nconst TWO_POW_22_BN = new BN('400000', 16);\nconst TWO_POW_31_BN = new BN('80000000', 16);\nconst TWO_POW_63_BN = new BN('8000000000000000', 16);\n// Equals 2**251 + 17 * 2**192 + 1.\nconst PRIME_BN = new BN(\n  '800000000000011000000000000000000000000000000000000000000000001',\n  16,\n);\n// Equals 2**251. This value limits msgHash and the signature parts.\nconst MAX_ECDSA_BN = new BN(\n  '800000000000000000000000000000000000000000000000000000000000000',\n  16,\n);\n\nconst MISSING_HEX_PREFIX = 'Hex strings expected to be prefixed with 0x.';\n\nconst ORDER = new BN(\n  '08000000 00000010 ffffffff ffffffff b781126d cae7b232 1e66a241 adc64d2f',\n  16,\n);\nconst SECP_ORDER = new BN(\n  'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE BAAEDCE6 AF48A03B BFD25E8C D0364141',\n  16,\n);\n\nexport {\n  constantPoints,\n  DEFAULT_ACCOUNT_MAPPING_KEY,\n  DEFAULT_SIGNATURE_MESSAGE,\n  instructionEncodingMap,\n  MAX_ECDSA_BN,\n  MINTABLE_ASSET_ID_PREFIX,\n  MISSING_HEX_PREFIX,\n  NFT_ASSET_ID_PREFIX,\n  ONE_BN,\n  ORDER,\n  prime,\n  PRIME_BN,\n  SECP_ORDER,\n  shiftPoint,\n  starkEc,\n  TWO_POW_22_BN,\n  TWO_POW_31_BN,\n  TWO_POW_63_BN,\n  ZERO_BN,\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\nimport { Signer } from '@ethersproject/abstract-signer';\nimport { keccak256 as solidityKeccak256 } from '@ethersproject/solidity';\nimport assert from 'assert';\nimport { BigNumber } from 'bignumber.js';\nimport bitwise from 'bitwise';\nimport BN from 'bn.js';\nimport { ec } from 'elliptic';\nimport * as encUtils from 'enc-utils';\nimport { hdkey } from 'ethereumjs-wallet';\nimport hashJS from 'hash.js';\nimport { Bytes32 } from 'soltypes';\n\nimport {\n  ERC20Token,\n  ERC721Token,\n  MintableERC20Token,\n  MintableERC721Token,\n  SignatureOptions,\n  Token,\n} from '../types';\nimport {\n  constantPoints,\n  instructionEncodingMap,\n  MAX_ECDSA_BN,\n  MINTABLE_ASSET_ID_PREFIX,\n  MISSING_HEX_PREFIX,\n  NFT_ASSET_ID_PREFIX,\n  ONE_BN,\n  ORDER,\n  prime,\n  PRIME_BN,\n  SECP_ORDER,\n  shiftPoint,\n  starkEc,\n  TWO_POW_22_BN,\n  TWO_POW_31_BN,\n  TWO_POW_63_BN,\n  ZERO_BN,\n} from './constants';\nimport {\n  Instruction,\n  InstructionWithFee,\n  LimitOrderWithFeeParams,\n} from './types';\n\nexport function isHexPrefixed(str: string): boolean {\n  return str.substring(0, 2) === '0x';\n}\n\nexport function checkHexValue(hex: string): void {\n  assert(isHexPrefixed(hex), MISSING_HEX_PREFIX);\n  const hexBn = new BN(encUtils.removeHexPrefix(hex), 16);\n  assert(hexBn.gte(ZERO_BN));\n  assert(hexBn.lt(PRIME_BN));\n}\n\nexport function getIntFromBits(\n  hex: string,\n  start: number,\n  end: number | undefined = undefined,\n): number {\n  const bin = encUtils.hexToBinary(hex);\n  const bits = bin.slice(start, end);\n  const int = encUtils.binaryToNumber(bits);\n  return int;\n}\n\nexport function getAccountPath(\n  layer: string,\n  application: string,\n  ethereumAddress: string,\n  index: string,\n): string {\n  const layerHash = hashJS.sha256().update(layer).digest('hex');\n  const applicationHash = hashJS.sha256().update(application).digest('hex');\n  const layerInt = getIntFromBits(layerHash, -31);\n  const applicationInt = getIntFromBits(applicationHash, -31);\n  const ethAddressInt1 = getIntFromBits(ethereumAddress, -31);\n  const ethAddressInt2 = getIntFromBits(ethereumAddress, -62, -31);\n  return `m/2645'/${layerInt}'/${applicationInt}'/${ethAddressInt1}'/${ethAddressInt2}'/${index}`;\n}\n\nexport function hashKeyWithIndex(key: string, index: number): BN {\n  return new BN(\n    hashJS\n      .sha256()\n      .update(\n        encUtils.hexToBuffer(\n          encUtils.removeHexPrefix(key) +\n            encUtils.sanitizeBytes(encUtils.numberToHex(index), 2),\n        ),\n      )\n      .digest('hex'),\n    16,\n  );\n}\n\nexport function grindKey(privateKey: string): string {\n  let i = 0;\n  let key: BN = hashKeyWithIndex(privateKey, i);\n\n  while (!key.lt(SECP_ORDER.sub(SECP_ORDER.mod(ORDER)))) {\n    key = hashKeyWithIndex(key.toString(16), i);\n    i = i++;\n  }\n  return key.mod(ORDER).toString('hex');\n}\n\nexport function getKeyPair(privateKey: string): ec.KeyPair {\n  return starkEc.keyFromPrivate(privateKey, 'hex');\n}\n\nexport function getKeyPairFromPath(seed: string, path: string): ec.KeyPair {\n  assert(isHexPrefixed(seed), MISSING_HEX_PREFIX);\n  const privateKey = hdkey\n    .fromMasterSeed(Buffer.from(seed.slice(2), 'hex')) // assuming seed is '0x...'\n    .derivePath(path)\n    .getWallet()\n    .getPrivateKeyString();\n  return getKeyPair(grindKey(privateKey));\n}\n\nexport function getPublic(keyPair: ec.KeyPair, compressed = false): string {\n  return keyPair.getPublic(compressed, 'hex');\n}\n\nexport function getStarkPublicKey(keyPair: ec.KeyPair): string {\n  return getPublic(keyPair, true);\n}\n\nexport function getKeyPairFromPublicKey(publicKey: string): ec.KeyPair {\n  return starkEc.keyFromPublic(encUtils.hexToArray(publicKey));\n}\n\nexport function getKeyPairFromPrivateKey(privateKey: string): ec.KeyPair {\n  return starkEc.keyFromPrivate(privateKey, 'hex');\n}\n\nexport function getXCoordinate(publicKey: string): string {\n  const keyPair = getKeyPairFromPublicKey(publicKey);\n  return encUtils.sanitizeBytes((keyPair as any).pub.getX().toString(16), 2);\n}\n\nexport function hexTuples(hash: string): RegExpMatchArray | null {\n  return hash\n    .slice(2)\n    .toLowerCase()\n    .match(/.{1,2}/g);\n}\n\nexport function truncateMintable240(hex: string): string {\n  const hexArr: any = hexTuples(hex);\n  const bitArr: any = hexArr.map((val: string) => {\n    return parseInt(val, 16);\n  });\n\n  const hexMask =\n    '0x0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF';\n  const hexMaskArr: any = hexTuples(hexMask);\n  const bitMaskArr: any = hexMaskArr.map((val: string) => {\n    return parseInt(val, 16);\n  });\n\n  let bitOutputArr: any = [];\n  let ctr = 32 - 1;\n  while (ctr >= 0) {\n    bitOutputArr[ctr] = bitwise.bits.and(\n      bitwise.byte.read(bitArr[ctr]),\n      bitwise.byte.read(bitMaskArr[ctr]),\n    );\n    ctr -= 1;\n  }\n  bitOutputArr = bitOutputArr.map((val: any) => {\n    return val.join('');\n  });\n  bitOutputArr[0] = '00000100';\n\n  const hexOutputArr: any = bitOutputArr.map((val: string) => {\n    return parseInt(val, 2) > Math.pow(2, 4) - 1\n      ? parseInt(val, 2).toString(16)\n      : `0${parseInt(val, 2).toString(16)}`;\n  });\n  return `0x${hexOutputArr.join('')}`;\n}\n\nexport function truncate250(hex: string): string {\n  const hexArr: any = hexTuples(hex);\n  const bitArr: any = hexArr.map((val: string) => {\n    return parseInt(val, 16);\n  });\n  const hexMask =\n    '0x03FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF';\n  const hexMaskArr: any = hexTuples(hexMask);\n  const bitMaskArr: any = hexMaskArr.map((val: string) => {\n    return parseInt(val, 16);\n  });\n\n  let bitOutputArr: any = [];\n  let ctr = 32 - 1;\n  while (ctr >= 0) {\n    bitOutputArr[ctr] = bitwise.bits.and(\n      bitwise.byte.read(bitArr[ctr]),\n      bitwise.byte.read(bitMaskArr[ctr]),\n    );\n    ctr -= 1;\n  }\n  bitOutputArr = bitOutputArr.map((val: any) => {\n    return val.join('');\n  });\n  const hexOutputArr: any = bitOutputArr.map((val: string) => {\n    return parseInt(val, 2) > Math.pow(2, 4) - 1\n      ? parseInt(val, 2).toString(16)\n      : `0${parseInt(val, 2).toString(16)}`;\n  });\n  return `0x${hexOutputArr.join('')}`;\n}\n\nexport function getAssetInfo(token: Token): string {\n  let assetInfo: string;\n  let tokenAddress: string;\n  switch (token.type.toUpperCase()) {\n    case 'ETH':\n      assetInfo = encUtils.sanitizeHex(\n        solidityKeccak256(['string'], ['ETH()']).slice(2, 10),\n      );\n      break;\n    case 'ERC20':\n      tokenAddress = (token as ERC20Token).data.tokenAddress;\n      checkHexValue(tokenAddress);\n      assetInfo = encUtils.sanitizeHex(\n        solidityKeccak256(['string'], ['ERC20Token(address)']).slice(2, 10) +\n          encUtils.padLeft(encUtils.removeHexPrefix(tokenAddress), 0x20 * 2),\n      );\n      break;\n    case 'ERC721':\n      tokenAddress = (token as ERC721Token).data.tokenAddress;\n      checkHexValue(tokenAddress);\n      assetInfo = encUtils.sanitizeHex(\n        solidityKeccak256(['string'], ['ERC721Token(address,uint256)']).slice(\n          2,\n          10,\n        ) + encUtils.padLeft(encUtils.removeHexPrefix(tokenAddress), 0x20 * 2),\n      );\n      break;\n    case 'MINTABLE_ERC20':\n      tokenAddress = (token as MintableERC20Token).data.tokenAddress;\n      checkHexValue(tokenAddress);\n      assetInfo = encUtils.sanitizeHex(\n        solidityKeccak256(['string'], ['MintableERC20Token(address)']).slice(\n          2,\n          10,\n        ) + encUtils.padLeft(encUtils.removeHexPrefix(tokenAddress), 0x20 * 2),\n      );\n      break;\n    case 'MINTABLE_ERC721':\n      tokenAddress = (token as MintableERC721Token).data.tokenAddress;\n      checkHexValue(tokenAddress);\n      assetInfo = encUtils.sanitizeHex(\n        solidityKeccak256(\n          ['string'],\n          ['MintableERC721Token(address,uint256)'],\n        ).slice(2, 10) +\n          encUtils.padLeft(encUtils.removeHexPrefix(tokenAddress), 0x20 * 2),\n      );\n      break;\n    default:\n      throw new Error(`Unknown token type: ${token.type}`);\n  }\n  return assetInfo;\n}\n\n// NOTE: 'quantum' is only required when completing withdrawal.\nexport function getAssetType(token: Token, quantum = '1'): Bytes32 {\n  return new Bytes32(\n    truncate250(\n      solidityKeccak256(['bytes', 'uint256'], [getAssetInfo(token), quantum]),\n    ),\n  );\n}\n\nexport function getMintingBlob(id: string, blueprint: string): string {\n  return encUtils.sanitizeHex(encUtils.utf8ToHex(`{${id}}:{${blueprint}}`));\n}\n\nexport function getMintingBlobHash(id: string, blueprint: string): string {\n  return encUtils.sanitizeHex(\n    solidityKeccak256(\n      ['bytes'],\n      [encUtils.utf8ToArray(`{${id}}:{${blueprint}}`)],\n    ),\n  );\n}\n\nexport function getAssetID(token: Token): Bytes32 {\n  const assetType = getAssetType(token);\n  if (\n    token.type.toUpperCase() === 'ETH' ||\n    token.type.toUpperCase() === 'ERC20'\n  ) {\n    return assetType;\n  }\n  if (token.type.toUpperCase() === 'ERC721') {\n    token.data = (token as ERC721Token).data;\n    const assetID = new Bytes32(\n      truncate250(\n        solidityKeccak256(\n          ['string', 'uint256', 'uint256'],\n          [NFT_ASSET_ID_PREFIX, assetType.toUint().val, token.data.tokenId],\n        ),\n      ),\n    );\n    return assetID;\n  }\n  token.data = (token as MintableERC721Token).data;\n  const assetID = new Bytes32(\n    truncateMintable240(\n      solidityKeccak256(\n        ['string', 'uint256', 'uint256'],\n        [\n          MINTABLE_ASSET_ID_PREFIX,\n          assetType.toUint().val,\n          getMintingBlobHash(token.data.id, token.data.blueprint),\n        ],\n      ),\n    ),\n  );\n  return assetID;\n}\n\nexport function parseTokenInput(token: Token | string): string {\n  if (typeof token === 'string') {\n    checkHexValue(token);\n    return token;\n  }\n  return getAssetID(token).val;\n}\n\nexport function pedersen(input: string | string[]) {\n  let point = shiftPoint;\n  for (let i = 0; i < input.length; i++) {\n    let x = new BN(encUtils.removeHexPrefix(input[i]), 16);\n    assert(x.gte(ZERO_BN) && x.lt(prime), `Invalid input: ${input[i]}`);\n    for (let j = 0; j < 252; j++) {\n      const pt = constantPoints[2 + i * 252 + j];\n      assert(!point.getX().eq(pt.getX()));\n      if (x.and(ONE_BN).toNumber() !== 0) {\n        point = point.add(pt);\n      }\n      x = x.shrn(1);\n    }\n  }\n  return point.getX().toString(16);\n}\n\n// [lowerBound, upperBound)\n// inclusive of lower bound, exclusive of upper bound\nexport function assertInRange(lowerBound: BN, upperBound: BN, values: BN[]) {\n  // assert values within the specified bit size in message encoding\n  for (let i = 0; i < values.length; i++) {\n    assert(values[i].gte(lowerBound));\n    assert(values[i].lt(upperBound));\n  }\n}\n\nexport function convertBnAndAssertRange(\n  instruction: Instruction | InstructionWithFee,\n  vault0: string,\n  vault1: string,\n  amount0: string,\n  amount1: string,\n  nonce: string,\n  expirationTimestamp: string,\n  feeVault = '0',\n  feeLimit = '0',\n) {\n  const instructionTypeBn = instructionEncodingMap[instruction];\n  // buy / sell vaults in orders or sender / receiver vaults in transfers\n  const vault0Bn = new BN(vault0);\n  const vault1Bn = new BN(vault1);\n  const amount0Bn = new BN(amount0, 10);\n  const amount1Bn = new BN(amount1, 10);\n  const nonceBn = new BN(nonce);\n  // in hours since the Unix epoch\n  const expirationTimestampBn = new BN(expirationTimestamp);\n  // fee information for orders / transfers with fees\n  const feeVaultBn = new BN(feeVault);\n  const feeLimitBn = new BN(feeLimit, 10);\n\n  // vaults and nonce are of size 31 bits\n  assertInRange(ZERO_BN, TWO_POW_31_BN, [\n    vault0Bn,\n    vault1Bn,\n    feeVaultBn,\n    nonceBn,\n  ]);\n  // amounts and fee are of size 63 bits\n  assertInRange(ZERO_BN, TWO_POW_63_BN, [amount0Bn, amount1Bn, feeLimitBn]);\n  // expiration timestamp are of size 22 bits\n  assertInRange(ZERO_BN, TWO_POW_22_BN, [expirationTimestampBn]);\n\n  return {\n    instructionTypeBn,\n    vault0Bn,\n    vault1Bn,\n    amount0Bn,\n    amount1Bn,\n    nonceBn,\n    expirationTimestampBn,\n    feeVaultBn,\n    feeLimitBn,\n  };\n}\n\nexport function serializeMessage(\n  instructionTypeBn: BN,\n  vault0Bn: BN,\n  vault1Bn: BN,\n  amount0Bn: BN,\n  amount1Bn: BN,\n  nonceBn: BN,\n  expirationTimestampBn: BN,\n): string {\n  // we bit shift so the message is packed as below (without fees)\n  //          instr vault0    vault1        amount0             amount1          nonce  timestamp\n  //          +---+---------+---------+-------------------+-------------------+---------+-------+\n  // #bits    | 4 |   31    |   31    |        63         |        63         |   31    |  22   |\n  //          +---+---------+---------+-------------------+-------------------+---------+-------+\n  // label      A      B         C             D                   E              F        G\n  // see https://docs.starkware.co/starkex-v3/starkex-deep-dive/message-encodings/signatures\n  let serialized = instructionTypeBn;\n  // shift left by the number of bit required in the message\n  serialized = serialized.ushln(31).add(vault0Bn);\n  serialized = serialized.ushln(31).add(vault1Bn);\n  serialized = serialized.ushln(63).add(amount0Bn);\n  serialized = serialized.ushln(63).add(amount1Bn);\n  serialized = serialized.ushln(31).add(nonceBn);\n  serialized = serialized.ushln(22).add(expirationTimestampBn);\n  return encUtils.sanitizeHex(serialized.toString(16));\n}\n\nexport function formatMessage(\n  instruction: Instruction,\n  vault0: string,\n  vault1: string,\n  amount0: string,\n  amount1: string,\n  nonce: string,\n  expirationTimestamp: string,\n): string {\n  const {\n    instructionTypeBn,\n    vault0Bn,\n    vault1Bn,\n    amount0Bn,\n    amount1Bn,\n    nonceBn,\n    expirationTimestampBn,\n  } = convertBnAndAssertRange(\n    instruction,\n    vault0,\n    vault1,\n    amount0,\n    amount1,\n    nonce,\n    expirationTimestamp,\n  );\n  return serializeMessage(\n    instructionTypeBn,\n    vault0Bn,\n    vault1Bn,\n    amount0Bn,\n    amount1Bn,\n    nonceBn,\n    expirationTimestampBn,\n  );\n}\n\nexport function formatMessageWithFee(\n  instruction: InstructionWithFee,\n  vault0: string,\n  vault1: string,\n  amount0: string,\n  amount1: string,\n  nonce: string,\n  expirationTimestamp: string,\n  feeVault: string,\n  feeLimit: string,\n): [string, string] {\n  const {\n    instructionTypeBn,\n    vault0Bn,\n    vault1Bn,\n    amount0Bn,\n    amount1Bn,\n    nonceBn,\n    expirationTimestampBn,\n    feeVaultBn,\n    feeLimitBn,\n  } = convertBnAndAssertRange(\n    instruction,\n    vault0,\n    vault1,\n    amount0,\n    amount1,\n    nonce,\n    expirationTimestamp,\n    feeVault,\n    feeLimit,\n  );\n\n  switch (instruction) {\n    case 'orderWithFee':\n      return serializeOrderMsgWithFee(\n        instructionTypeBn,\n        vault0Bn,\n        vault1Bn,\n        amount0Bn,\n        amount1Bn,\n        nonceBn,\n        expirationTimestampBn,\n        feeVaultBn,\n        feeLimitBn,\n      );\n    case 'transferWithFee':\n      throw Error('Not implemented yet');\n    default:\n      throw Error('invalid instruction type');\n  }\n}\n\nexport function serializeOrderMsgWithFee(\n  instructionTypeBn: BN,\n  vaultSellBn: BN,\n  vaultBuyBn: BN,\n  amountSellBn: BN,\n  amountBuyBn: BN,\n  nonceBn: BN,\n  expirationTimestampBn: BN,\n  feeVaultBn: BN,\n  feeLimitBn: BN,\n): [string, string] {\n  // Left bit shifting to construct the 251 bit message below for serialized1\n  //\n  //          +-------+--------------+--------------+--------------+--------+\n  // #bits    | 27    |   64         |   64         |      64      |   32   |\n  //          +-------+--------------+--------------+--------------+--------+\n  // label      A               B            C                 D       E\n  // A: padding of zeros\n  // B: quantizedAmount to be sold.\n  // C: quantizedAmount to be bought\n  // D: quantizedAmount to pay fees\n  // E: nonce for the transaction.\n  let serialized1 = amountSellBn;\n  serialized1 = serialized1.ushln(64).add(amountBuyBn);\n  serialized1 = serialized1.ushln(64).add(feeLimitBn);\n  serialized1 = serialized1.ushln(32).add(nonceBn);\n\n  // Left bit shifting to construct the 251 bit message below for serialized2\n  //          +---+--------------+--------------+--------------+-----+-----+\n  // #bits    | 10|   64         |   64         |         64   | 32  |  17 |\n  //          +---+--------------+--------------+--------------+-----+-----+\n  // label      A      B            C                 D           E     F\n  // A:  order type\n  // 3 for a Limit Order with Fees\n  // B: vaultId from which the user wants to use to pay fees.\n  // C: vaultId from which the user wants to take the sold asset\n  // D: vaultId from which the user wants to receive the bought asset.\n  // E: expirationTimestamp, in hours since the Unix epoch.\n  // F: padding of zeros\n  // see https://docs.starkware.co/starkex-v3/starkex-deep-dive/message-encodings/signatures\n  let serialized2 = instructionTypeBn;\n  serialized2 = serialized2.ushln(64).add(feeVaultBn);\n  serialized2 = serialized2.ushln(64).add(vaultSellBn);\n  serialized2 = serialized2.ushln(64).add(vaultBuyBn);\n  serialized2 = serialized2.ushln(32).add(expirationTimestampBn);\n  serialized2 = serialized2.ushln(17).add(ZERO_BN);\n\n  const w4 = encUtils.sanitizeHex(serialized1.toString(16));\n  const w5 = encUtils.sanitizeHex(serialized2.toString(16));\n  return [w4, w5];\n}\n\nexport function hashMessage(w1: string, w2: string, w3: string) {\n  return pedersen([pedersen([w1, w2]), w3]);\n}\n\nexport function getLimitOrderMsgWithFee({\n  vaultSell,\n  vaultBuy,\n  amountSell,\n  amountBuy,\n  nonce,\n  expirationTimestamp,\n  tokenSell,\n  tokenBuy,\n  feeToken,\n  feeVault,\n  feeLimit,\n}: LimitOrderWithFeeParams) {\n  // assert tokens in range\n  assertInRange(ZERO_BN, PRIME_BN, [\n    new BN(encUtils.removeHexPrefix(tokenSell), 16),\n    new BN(encUtils.removeHexPrefix(tokenBuy), 16),\n    new BN(encUtils.removeHexPrefix(feeToken), 16),\n  ]);\n  // w1 is the assetId to be sold\n  // w2 is the assetId to be bought\n  // w3 is the assetId used to pay the fee\n  const w1 = tokenSell;\n  const w2 = tokenBuy;\n  const w3 = feeToken;\n  // there are more words to encode for instructions with fees so a\n  // temp hash is used to keep the message within the max 256 bit field size\n  const tempHash = hashMessage(w1, w2, w3);\n  // definitions for w4 and w5 defined in formatMessageWithFee\n  const [w4, w5] = formatMessageWithFee(\n    'orderWithFee',\n    vaultSell,\n    vaultBuy,\n    amountSell,\n    amountBuy,\n    nonce,\n    expirationTimestamp,\n    feeVault,\n    feeLimit,\n  );\n  // message to sign: H(H(H(H(w1,w2),w3),w4),w5)\n  const hash = hashMessage(tempHash, w4, w5);\n  assertInRange(ZERO_BN, MAX_ECDSA_BN, [\n    new BN(encUtils.removeHexPrefix(hash), 16),\n  ]);\n  return hash;\n}\n\nexport function getLimitOrderMsg(\n  vaultSell: string,\n  vaultBuy: string,\n  amountSell: string,\n  amountBuy: string,\n  tokenSell: string,\n  tokenBuy: string,\n  nonce: string,\n  expirationTimestamp: string,\n): string {\n  const w1 = tokenSell;\n  const w2 = tokenBuy;\n  const w3 = formatMessage(\n    'order',\n    vaultSell,\n    vaultBuy,\n    amountSell,\n    amountBuy,\n    nonce,\n    expirationTimestamp,\n  );\n  return hashMessage(w1, w2, w3);\n}\n\nexport function getTransferMsg(\n  amount: string,\n  nonce: string,\n  senderVaultId: string,\n  assetId: string,\n  receiverVaultId: string,\n  receiverPublicKey: string,\n  expirationTimestamp: string,\n): string {\n  const w1 = assetId;\n  const w2 = parseTokenInput(receiverPublicKey);\n  const w3 = formatMessage(\n    'transfer',\n    senderVaultId,\n    receiverVaultId,\n    amount,\n    ZERO_BN.toString(),\n    nonce,\n    expirationTimestamp,\n  );\n  return hashMessage(w1, w2, w3);\n}\n\nexport function packRegisterUserMsg(etherKey: string, nonce: string): string {\n  let serialized = new BN('1000');\n  serialized = serialized\n    .ushln(160)\n    .add(new BN(new BigNumber(etherKey).toFixed()));\n  serialized = serialized.ushln(31).add(new BN(nonce));\n  return encUtils.sanitizeHex(serialized.toString(16));\n}\n\nexport function getRegisterUserMsg(\n  etherKey: string,\n  starkPublicKey: string,\n  nonce: string,\n): string {\n  return pedersen([\n    pedersen([starkPublicKey]),\n    packRegisterUserMsg(etherKey, nonce),\n  ]);\n}\n\nexport function packRegisterUserMsgVerifyEth(etherKey: string): string {\n  let serialized = new BN('1000');\n  serialized = serialized\n    .ushln(160)\n    .add(new BN(new BigNumber(etherKey).toFixed()));\n  return encUtils.sanitizeHex(serialized.toString(16));\n}\n\nexport function getRegisterUserMsgVerifyEth(\n  etherKey: string,\n  starkPublicKey: string,\n): string {\n  return pedersen([\n    pedersen([starkPublicKey]),\n    packRegisterUserMsgVerifyEth(etherKey),\n  ]);\n}\n\nexport function getDepositMsg(\n  amount: string,\n  nonce: string,\n  vaultId: string,\n  assetId: string,\n  starkPublicKey: string,\n): string {\n  const w2 = parseTokenInput(starkPublicKey);\n  const w3 = formatMessage('deposit', '0', vaultId, '0', amount, nonce, '');\n  return hashMessage(assetId, w2, w3);\n}\n\nexport function getWithdrawMsg(\n  amount: string,\n  nonce: string,\n  vaultId: string,\n  assetId: string,\n  starkPublicKey: string,\n): string {\n  const w1 = parseTokenInput(starkPublicKey);\n  const w2 = formatMessage('withdraw', vaultId, '0', amount, '0', nonce, '');\n  return hashMessage(assetId, w1, w2);\n}\n\nexport function fixMessage(msg: string) {\n  msg = encUtils.removeHexPrefix(msg);\n  msg = new BN(msg, 16).toString(16);\n\n  if (msg.length <= 62) {\n    // In this case, msg should not be transformed, as the byteLength() is at most 31,\n    // so delta < 0 (see _truncateToN).\n    return msg;\n  }\n  assert(msg.length === 63);\n  // In this case delta will be 4 so we perform a shift-left of 4 bits by adding a ZERO_BN.\n  return `${msg}0`;\n}\n\nexport function sign(keyPair: ec.KeyPair, msg: string): ec.Signature {\n  return keyPair.sign(fixMessage(msg));\n}\n\n// function exportRecoveryParam(recoveryParam: number | null | undefined): string | null {\n//     return typeof recoveryParam === 'number' ? new BN(recoveryParam).add(new BN(27)).toString(16) : null;\n// }\n\nexport function serializeSignature(sig: SignatureOptions): string {\n  return encUtils.addHexPrefix(\n    encUtils.padLeft(sig.r.toString(16), 64) +\n      encUtils.padLeft(sig.s.toString(16), 64),\n    // exportRecoveryParam(sig.recoveryParam) || '',\n  );\n}\n\nexport function serializeEthSignature(sig: SignatureOptions): string {\n  // This is because golang appends a recovery param\n  // https://github.com/ethers-io/ethers.js/issues/823\n  return encUtils.addHexPrefix(\n    encUtils.padLeft(sig.r.toString(16), 64) +\n      encUtils.padLeft(sig.s.toString(16), 64) +\n      encUtils.padLeft(sig.recoveryParam?.toString(16) || '', 2),\n  );\n}\n\nexport function importRecoveryParam(v: string): number | undefined {\n  return v.trim()\n    ? new BN(v, 16).cmp(new BN(27)) !== -1\n      ? new BN(v, 16).sub(new BN(27)).toNumber()\n      : new BN(v, 16).toNumber()\n    : undefined;\n}\n\nexport function deserializeSignature(sig: string, size = 64): SignatureOptions {\n  sig = encUtils.removeHexPrefix(sig);\n  return {\n    r: new BN(sig.substring(0, size), 'hex'),\n    s: new BN(sig.substring(size, size * 2), 'hex'),\n    recoveryParam: importRecoveryParam(sig.substring(size * 2, size * 2 + 2)),\n  };\n}\n\nexport function packCancelOrderMsg(orderId: string): string {\n  let serialized = new BN('1003');\n  serialized = serialized.ushln(64).add(new BN(orderId));\n  return encUtils.sanitizeHex(serialized.toString(16));\n}\n\nexport function getCancelOrderMsg(orderID: string): string {\n  return pedersen([packCancelOrderMsg(orderID)]);\n}\n\nexport async function signAuthHeader(\n  timestamp: string,\n  signer: Signer,\n): Promise<string> {\n  const signature = deserializeSignature(await signer.signMessage(timestamp));\n  return serializeEthSignature(signature);\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  Object.defineProperty(subClass, \"prototype\", {\n    value: Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    }),\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ImmutableX } from \"../ImmutableX\";\n\nexport class ImmutableX__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _name: string,\n    _symbol: string,\n    overrides?: Overrides\n  ): Promise<ImmutableX> {\n    return super.deploy(_name, _symbol, overrides || {}) as Promise<ImmutableX>;\n  }\n  getDeployTransaction(\n    _name: string,\n    _symbol: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(_name, _symbol, overrides || {});\n  }\n  attach(address: string): ImmutableX {\n    return super.attach(address) as ImmutableX;\n  }\n  connect(signer: Signer): ImmutableX__factory {\n    return super.connect(signer) as ImmutableX__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ImmutableX {\n    return new Contract(address, _abi, signerOrProvider) as ImmutableX;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"baseURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040526001600a553480156200001657600080fd5b5060405162002e6338038062002e63833981810160405260408110156200003c57600080fd5b81019080805160405193929190846401000000008211156200005d57600080fd5b838201915060208201858111156200007457600080fd5b82518660018202830111640100000000821117156200009257600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c8578082015181840152602081019050620000ab565b50505050905090810190601f168015620000f65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011a57600080fd5b838201915060208201858111156200013157600080fd5b82518660018202830111640100000000821117156200014f57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018557808201518184015260208101905062000168565b50505050905090810190601f168015620001b35780820380516001836020036101000a031916815260200191505b506040525050508181620001f96301ffc9a77c010000000000000000000000000000000000000000000000000000000002620002ec640100000000026401000000009004565b81600690805190602001906200021192919062000411565b5080600790805190602001906200022a92919062000411565b50620002686380ac58cd7c010000000000000000000000000000000000000000000000000000000002620002ec640100000000026401000000009004565b620002a5635b5e139f7c010000000000000000000000000000000000000000000000000000000002620002ec640100000000026401000000009004565b620002e263780e9d637c010000000000000000000000000000000000000000000000000000000002620002ec640100000000026401000000009004565b50505050620004c0565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620003a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200045457805160ff191683800117855562000485565b8280016001018555821562000485579182015b828111156200048457825182559160200191906001019062000467565b5b50905062000494919062000498565b5090565b620004bd91905b80821115620004b95760008160009055506001016200049f565b5090565b90565b61299380620004d06000396000f3fe608060405234801561001057600080fd5b5060043610610133576000357c0100000000000000000000000000000000000000000000000000000000900480634f6ccce7116100bf57806395d89b411161008e57806395d89b41146105cd578063a22cb46514610650578063b88d4fde146106a0578063c87b56dd146107a5578063e985e9c51461084c57610133565b80634f6ccce7146104425780636352211e146104845780636c0360eb146104f257806370a082311461057557610133565b80631249c58b116101065780631249c58b146102dc57806318160ddd146102e657806323b872dd146103045780632f745c591461037257806342842e0e146103d457610133565b806301ffc9a71461013857806306fdde031461019d578063081812fc14610220578063095ea7b31461028e575b600080fd5b6101836004803603602081101561014e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108c8565b604051808215151515815260200191505060405180910390f35b6101a561092f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e55780820151818401526020810190506101ca565b50505050905090810190601f1680156102125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024c6004803603602081101561023657600080fd5b81019080803590602001909291905050506109d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102da600480360360408110156102a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a6c565b005b6102e4610bb0565b005b6102ee610bd0565b6040518082815260200191505060405180910390f35b6103706004803603606081101561031a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610be1565b005b6103be6004803603604081101561038857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c57565b6040518082815260200191505060405180910390f35b610440600480360360608110156103ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cb2565b005b61046e6004803603602081101561045857600080fd5b8101908080359060200190929190505050610cd2565b6040518082815260200191505060405180910390f35b6104b06004803603602081101561049a57600080fd5b8101908080359060200190929190505050610cf5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104fa610d2c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561053a57808201518184015260208101905061051f565b50505050905090810190601f1680156105675780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105b76004803603602081101561058b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dce565b6040518082815260200191505060405180910390f35b6105d5610ea3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106155780820151818401526020810190506105fa565b50505050905090810190601f1680156106425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61069e6004803603604081101561066657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610f45565b005b6107a3600480360360808110156106b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561071d57600080fd5b82018360208201111561072f57600080fd5b8035906020019184600183028401116401000000008311171561075157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110fd565b005b6107d1600480360360208110156107bb57600080fd5b8101908080359060200190929190505050611175565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108115780820151818401526020810190506107f6565b50505050905090810190601f16801561083e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108ae6004803603604081101561086257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061145e565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109c75780601f1061099c576101008083540402835291602001916109c7565b820191906000526020600020905b8154815290600101906020018083116109aa57829003601f168201915b5050505050905090565b60006109dc826114f2565b610a31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612888602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a7782610cf5565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610afe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061290c6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610b1d61150f565b73ffffffffffffffffffffffffffffffffffffffff161480610b4c5750610b4b81610b4661150f565b61145e565b5b610ba1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806127db6038913960400191505060405180910390fd5b610bab8383611517565b505050565b600a60008154809291906001019190505550610bce33600a546115d0565b565b6000610bdc60026117c4565b905090565b610bf2610bec61150f565b826117d9565b610c47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061292d6031913960400191505060405180910390fd5b610c528383836118cd565b505050565b6000610caa82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b1090919063ffffffff16565b905092915050565b610ccd838383604051806020016040528060008152506110fd565b505050565b600080610ce9836002611b2b90919063ffffffff16565b50905080915050919050565b6000610d258260405180606001604052806029815260200161283d602991396002611b5c9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dc45780601f10610d9957610100808354040283529160200191610dc4565b820191906000526020600020905b815481529060010190602001808311610da757829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612813602a913960400191505060405180910390fd5b610e9c600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b7c565b9050919050565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f3b5780601f10610f1057610100808354040283529160200191610f3b565b820191906000526020600020905b815481529060010190602001808311610f1e57829003601f168201915b5050505050905090565b610f4d61150f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060056000610ffb61150f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166110a861150f565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61110e61110861150f565b836117d9565b611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061292d6031913960400191505060405180910390fd5b61116f84848484611b91565b50505050565b6060611180826114f2565b6111d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806128dd602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561127e5780601f106112535761010080835404028352916020019161127e565b820191906000526020600020905b81548152906001019060200180831161126157829003601f168201915b505050505090506000600980546001816001161561010002031660029004905014156112ad5780915050611459565b6000815111156113865760098160405160200180838054600181600116156101000203166002900480156113185780601f106112f6576101008083540402835291820191611318565b820191906000526020600020905b815481529060010190602001808311611304575b505082805190602001908083835b602083106113495780518252602082019150602081019050602083039250611326565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050611459565b600961139184611c03565b60405160200180838054600181600116156101000203166002900480156113ef5780601f106113cd5761010080835404028352918201916113ef565b820191906000526020600020905b8154815290600101906020018083116113db575b505082805190602001908083835b6020831061142057805182526020820191506020810190506020830392506113fd565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000611508826002611d5290919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661158a83610cf5565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611673576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61167c816114f2565b156116ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b6116fb60008383611d6c565b61174c81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d7190919063ffffffff16565b5061176381836002611d8b9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006117d282600001611dc0565b9050919050565b60006117e4826114f2565b611839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806127af602c913960400191505060405180910390fd5b600061184483610cf5565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118b357508373ffffffffffffffffffffffffffffffffffffffff1661189b846109d1565b73ffffffffffffffffffffffffffffffffffffffff16145b806118c457506118c3818561145e565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166118ed82610cf5565b73ffffffffffffffffffffffffffffffffffffffff1614611959576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806128b46029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061278b6024913960400191505060405180910390fd5b6119ea838383611d6c565b6119f5600082611517565b611a4681600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611dd190919063ffffffff16565b50611a9881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d7190919063ffffffff16565b50611aaf81836002611d8b9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611b1f8360000183611deb565b60019004905092915050565b600080600080611b3e8660000186611e6e565b91509150816001900481600190048090509350935050509250929050565b6000611b6f846000018460010284611f07565b6001900490509392505050565b6000611b8a82600001611ffd565b9050919050565b611b9c8484846118cd565b611ba88484848461200e565b611bfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806127596032913960400191505060405180910390fd5b50505050565b60606000821415611c4b576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611d4d565b600082905060005b60008214611c75578080600101915050600a8281611c6d57fe5b049150611c53565b6060816040519080825280601f01601f191660200182016040528015611caa5781602001600182028038833980820191505090505b50905060006001830390508593505b60008414611d4557600a8481611ccb57fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110611d0457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611d3d57fe5b049350611cb9565b819450505050505b919050565b6000611d64836000018360010261228b565b905092915050565b505050565b6000611d8383600001836001026122ae565b905092915050565b6000611db784600001846001028473ffffffffffffffffffffffffffffffffffffffff1660010261231e565b90509392505050565b600081600001805490509050919050565b6000611de383600001836001026123fa565b905092915050565b600081836000018054905011611e4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806127376022913960400191505060405180910390fd5b826000018281548110611e5b57fe5b9060005260206000200154905092915050565b60008082846000018054905011611ed0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806128666022913960400191505060405180910390fd5b6000846000018481548110611ee157fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390611fce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f93578082015181840152602081019050611f78565b50505050905090810190601f168015611fc05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611fe157fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b600061202f8473ffffffffffffffffffffffffffffffffffffffff166124e2565b61203c5760019050612283565b60606121ee63150b7a027c01000000000000000000000000000000000000000000000000000000000261206d61150f565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561211d578082015181840152602081019050612102565b50505050905090810190601f16801561214a5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001612759603291398773ffffffffffffffffffffffffffffffffffffffff166124f59092919063ffffffff16565b9050600081806020019051602081101561220757600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b60006122ba838361250d565b612313578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612318565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156123c5578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506123f3565b828560000160018303815481106123d857fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080836001016000848152602001908152602001600020549050600081146124d6576000600182039050600060018660000180549050039050600086600001828154811061244557fe5b906000526020600020015490508087600001848154811061246257fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061249a57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506124dc565b60009150505b92915050565b600080823b905060008111915050919050565b60606125048484600085612530565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b606061253b856124e2565b6125ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106125fd57805182526020820191506020810190506020830392506125da565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461265f576040519150601f19603f3d011682016040523d82523d6000602084013e612664565b606091505b5091509150811561267957809250505061272e565b60008151111561268c5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126f35780820151818401526020810190506126d8565b50505050905090810190601f1680156127205780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b94935050505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212203425a61434da2009b4b3250d222d2fe096ea3fc94baee51240323b2949959a8564736f6c63430006020033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from 'ethers';\nimport { Provider } from '@ethersproject/providers';\n\nimport type { Stark } from '../Stark';\n\nexport class Stark__factory {\n  static connect(address: string, signerOrProvider: Signer | Provider): Stark {\n    return new Contract(address, _abi, signerOrProvider) as unknown as Stark;\n  }\n}\n\nconst _abi = [\n  {\n    payable: true,\n    stateMutability: 'payable',\n    type: 'fallback',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'VERSION',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'initialize',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: 'LogFrozen',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'acceptedGovernor',\n        type: 'address',\n      },\n    ],\n    name: 'LogNewGovernorAccepted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'nominatedGovernor',\n        type: 'address',\n      },\n    ],\n    name: 'LogNominatedGovernor',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: 'LogNominationCancelled',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'removedGovernor',\n        type: 'address',\n      },\n    ],\n    name: 'LogRemovedGovernor',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: 'LogUnFrozen',\n    type: 'event',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'DEPOSIT_CANCEL_DELAY',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'FREEZE_GRACE_PERIOD',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'MAIN_GOVERNANCE_INFO_TAG',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'MAX_VERIFIER_COUNT',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'UNFREEZE_DELAY',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'VERIFIER_REMOVAL_DELAY',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'verifier',\n        type: 'address',\n      },\n    ],\n    name: 'announceAvailabilityVerifierRemovalIntent',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'verifier',\n        type: 'address',\n      },\n    ],\n    name: 'announceVerifierRemovalIntent',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'getRegisteredAvailabilityVerifiers',\n    outputs: [\n      {\n        internalType: 'address[]',\n        name: '_verifers',\n        type: 'address[]',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'getRegisteredVerifiers',\n    outputs: [\n      {\n        internalType: 'address[]',\n        name: '_verifers',\n        type: 'address[]',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'verifierAddress',\n        type: 'address',\n      },\n    ],\n    name: 'isAvailabilityVerifier',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'isFrozen',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: 'frozen',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'verifierAddress',\n        type: 'address',\n      },\n    ],\n    name: 'isVerifier',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'mainAcceptGovernance',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'mainCancelNomination',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'testGovernor',\n        type: 'address',\n      },\n    ],\n    name: 'mainIsGovernor',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newGovernor',\n        type: 'address',\n      },\n    ],\n    name: 'mainNominateNewGovernor',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'governorForRemoval',\n        type: 'address',\n      },\n    ],\n    name: 'mainRemoveGovernor',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'verifier',\n        type: 'address',\n      },\n      {\n        internalType: 'string',\n        name: 'identifier',\n        type: 'string',\n      },\n    ],\n    name: 'registerAvailabilityVerifier',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'verifier',\n        type: 'address',\n      },\n      {\n        internalType: 'string',\n        name: 'identifier',\n        type: 'string',\n      },\n    ],\n    name: 'registerVerifier',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'verifier',\n        type: 'address',\n      },\n    ],\n    name: 'removeAvailabilityVerifier',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'verifier',\n        type: 'address',\n      },\n    ],\n    name: 'removeVerifier',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'unFreeze',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'depositorEthKey',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'nonQuantizedAmount',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'quantizedAmount',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogDeposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogDepositCancel',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'nonQuantizedAmount',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'quantizedAmount',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogDepositCancelReclaimed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogDepositNftCancelReclaimed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogFullWithdrawalRequest',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'nonQuantizedAmount',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'quantizedAmount',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogMintWithdrawalPerformed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'quantizedAmount',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogMintableWithdrawalAllowed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'depositorEthKey',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogNftDeposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogNftWithdrawalAllowed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'recipient',\n        type: 'address',\n      },\n    ],\n    name: 'LogNftWithdrawalPerformed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'LogOperatorAdded',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'LogOperatorRemoved',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'tokenAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'LogTokenAdminAdded',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'tokenAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'LogTokenAdminRemoved',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'assetInfo',\n        type: 'bytes',\n      },\n    ],\n    name: 'LogTokenRegistered',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'userAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'LogUserAdminAdded',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'userAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'LogUserAdminRemoved',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'ethKey',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'LogUserRegistered',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'nonQuantizedAmount',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'quantizedAmount',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogWithdrawalAllowed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'nonQuantizedAmount',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'quantizedAmount',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'recipient',\n        type: 'address',\n      },\n    ],\n    name: 'LogWithdrawalPerformed',\n    type: 'event',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'deposit',\n    outputs: [],\n    payable: true,\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'quantizedAmount',\n        type: 'uint256',\n      },\n    ],\n    name: 'deposit',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'depositCancel',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'depositNft',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'depositNftReclaim',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'depositReclaim',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'freezeRequest',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'fullWithdrawalRequest',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n    ],\n    name: 'getAssetInfo',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: 'assetInfo',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getCancellationRequest',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'request',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getDepositBalance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'balance',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n    ],\n    name: 'getEthKey',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'ethKey',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getFullWithdrawalRequest',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'res',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getQuantizedDepositBalance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'balance',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'presumedAssetType',\n        type: 'uint256',\n      },\n    ],\n    name: 'getQuantum',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'quantum',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getWithdrawalBalance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'balance',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'testedOperator',\n        type: 'address',\n      },\n    ],\n    name: 'isOperator',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'testedAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'isTokenAdmin',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'testedAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'isUserAdmin',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    name: 'onERC721Received',\n    outputs: [\n      {\n        internalType: 'bytes4',\n        name: '',\n        type: 'bytes4',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOperator',\n        type: 'address',\n      },\n    ],\n    name: 'registerOperator',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'assetInfo',\n        type: 'bytes',\n      },\n    ],\n    name: 'registerToken',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'assetInfo',\n        type: 'bytes',\n      },\n      {\n        internalType: 'uint256',\n        name: 'quantum',\n        type: 'uint256',\n      },\n    ],\n    name: 'registerToken',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'registerTokenAdmin',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'ethKey',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'signature',\n        type: 'bytes',\n      },\n    ],\n    name: 'registerUser',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'registerUserAdmin',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'removedOperator',\n        type: 'address',\n      },\n    ],\n    name: 'unregisterOperator',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'oldAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'unregisterTokenAdmin',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'oldAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'unregisterUserAdmin',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n    ],\n    name: 'withdraw',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'mintingBlob',\n        type: 'bytes',\n      },\n    ],\n    name: 'withdrawAndMint',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'withdrawNft',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: 'recipient',\n        type: 'address',\n      },\n    ],\n    name: 'withdrawNftTo',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address payable',\n        name: 'recipient',\n        type: 'address',\n      },\n    ],\n    name: 'withdrawTo',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'sequenceNumber',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'batchId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'vaultRoot',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'orderRoot',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogRootUpdate',\n    type: 'event',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'starkKey',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'vaultId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'assetId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'quantizedAmount',\n        type: 'uint256',\n      },\n    ],\n    name: 'escape',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'getLastBatchId',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'batchId',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'getOrderRoot',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'root',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'getOrderTreeHeight',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'height',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'getSequenceNumber',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'seq',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'getVaultRoot',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'root',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'getVaultTreeHeight',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'height',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'uint256[]',\n        name: 'publicInput',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'applicationData',\n        type: 'uint256[]',\n      },\n    ],\n    name: 'updateState',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IMX, IMXInterface } from \"../IMX\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"vaultId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"vaultId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"quantizedAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"vaultId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"depositNft\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getEthKey\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"ethKey\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"registerUser\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"mintingBlob\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"withdrawAndMint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawNft\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawNftTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IMX__factory {\n  static readonly abi = _abi;\n  static createInterface(): IMXInterface {\n    return new utils.Interface(_abi) as IMXInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): IMX {\n    return new Contract(address, _abi, signerOrProvider) as IMX;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Registration, RegistrationInterface } from \"../Registration\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"contract IMX\",\n        name: \"_imx\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"imx\",\n    outputs: [\n      {\n        internalType: \"contract IMX\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"isRegistered\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"ethKey\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"vaultId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"registerAndDeposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"ethKey\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"vaultId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"quantizedAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"registerAndDeposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"ethKey\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"vaultId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"registerAndDepositNft\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"ethKey\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"registerAndWithdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"ethKey\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"registerAndWithdrawNft\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"ethKey\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"registerAndWithdrawNftTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"ethKey\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"registerAndWithdrawTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"ethKey\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"starkKey\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"assetType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"mintingBlob\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"regsiterAndWithdrawAndMint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b506040516200177238038062001772833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000123565b6000815190506200008f8162000109565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000e9565b9050919050565b6000620000e282620000c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200011481620000d5565b81146200012057600080fd5b50565b61163f80620001336000396000f3fe6080604052600436106100915760003560e01c80634627d598116100595780634627d59814610165578063579a69881461018e5780638bdb9f80146101cb578063ea864adf146101e7578063ef4ae27f1461021057610091565b80630a9c3beb146100965780630f08025f146100bf5780631259cc6c146100ea578063352eb84c146101135780634280d50a1461013c575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610f1c565b610239565b005b3480156100cb57600080fd5b506100d4610364565b6040516100e19190611304565b60405180910390f35b3480156100f657600080fd5b50610111600480360381019061010c919061105e565b610388565b005b34801561011f57600080fd5b5061013a60048036038101906101359190610fcc565b6104b3565b005b34801561014857600080fd5b50610163600480360381019061015e9190611105565b6105db565b005b34801561017157600080fd5b5061018c60048036038101906101879190610e8a565b610706565b005b34801561019a57600080fd5b506101b560048036038101906101b091906111ac565b61082e565b6040516101c291906112e9565b60405180910390f35b6101e560048036038101906101e09190610fcc565b61090f565b005b3480156101f357600080fd5b5061020e60048036038101906102099190610e0a565b610b08565b005b34801561021c57600080fd5b5061023760048036038101906102329190611105565b610c2d565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd2414d4888888886040518563ffffffff1660e01b815260040161029894939291906112a9565b600060405180830381600087803b1580156102b257600080fd5b505af11580156102c6573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d91443b7878585856040518563ffffffff1660e01b815260040161032994939291906113ba565b600060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b5050505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd2414d4888888886040518563ffffffff1660e01b81526004016103e794939291906112a9565b600060405180830381600087803b15801561040157600080fd5b505af1158015610415573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ebef0fd0878585856040518563ffffffff1660e01b81526004016104789493929190611431565b600060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b5050505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd2414d4878787876040518563ffffffff1660e01b815260040161051294939291906112a9565b600060405180830381600087803b15801561052c57600080fd5b505af1158015610540573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663019b417a8684846040518463ffffffff1660e01b81526004016105a1939291906113fa565b600060405180830381600087803b1580156105bb57600080fd5b505af11580156105cf573d6000803e3d6000fd5b50505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd2414d4888888886040518563ffffffff1660e01b815260040161063a94939291906112a9565b600060405180830381600087803b15801561065457600080fd5b505af1158015610668573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae1cdde6878585856040518563ffffffff1660e01b81526004016106cb9493929190611476565b600060405180830381600087803b1580156106e557600080fd5b505af11580156106f9573d6000803e3d6000fd5b5050505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd2414d4878787876040518563ffffffff1660e01b815260040161076594939291906112a9565b600060405180830381600087803b15801561077f57600080fd5b505af1158015610793573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314cd70e48684846040518463ffffffff1660e01b81526004016107f493929190611383565b600060405180830381600087803b15801561080e57600080fd5b505af1158015610822573d6000803e3d6000fd5b50505050505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631dbd1da7846040518263ffffffff1660e01b81526004016108a0919061133f565b60206040518083038186803b1580156108b857600080fd5b505afa1580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f09190610de1565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd2414d4878787876040518563ffffffff1660e01b815260040161096e94939291906112a9565b600060405180830381600087803b15801561098857600080fd5b505af115801561099c573d6000803e3d6000fd5b5050505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16348785856040516024016109f0939291906113fa565b6040516020818303038152906040527eaeef8a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610a799190611292565b60006040518083038185875af1925050503d8060008114610ab6576040519150601f19603f3d011682016040523d82523d6000602084013e610abb565b606091505b5050905080610aff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af69061131f565b60405180910390fd5b50505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd2414d4868686866040518563ffffffff1660e01b8152600401610b6794939291906112a9565b600060405180830381600087803b158015610b8157600080fd5b505af1158015610b95573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663441a3e7085836040518363ffffffff1660e01b8152600401610bf492919061135a565b600060405180830381600087803b158015610c0e57600080fd5b505af1158015610c22573d6000803e3d6000fd5b505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd2414d4888888886040518563ffffffff1660e01b8152600401610c8c94939291906112a9565b600060405180830381600087803b158015610ca657600080fd5b505af1158015610cba573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632505c3d9878585856040518563ffffffff1660e01b8152600401610d1d9493929190611476565b600060405180830381600087803b158015610d3757600080fd5b505af1158015610d4b573d6000803e3d6000fd5b5050505050505050505050565b600081359050610d67816115db565b92915050565b600081519050610d7c816115db565b92915050565b60008083601f840112610d9457600080fd5b8235905067ffffffffffffffff811115610dad57600080fd5b602083019150836001820283011115610dc557600080fd5b9250929050565b600081359050610ddb816115f2565b92915050565b600060208284031215610df357600080fd5b6000610e0184828501610d6d565b91505092915050565b600080600080600060808688031215610e2257600080fd5b6000610e3088828901610d58565b9550506020610e4188828901610dcc565b945050604086013567ffffffffffffffff811115610e5e57600080fd5b610e6a88828901610d82565b93509350506060610e7d88828901610dcc565b9150509295509295909350565b60008060008060008060a08789031215610ea357600080fd5b6000610eb189828a01610d58565b9650506020610ec289828a01610dcc565b955050604087013567ffffffffffffffff811115610edf57600080fd5b610eeb89828a01610d82565b94509450506060610efe89828a01610dcc565b9250506080610f0f89828a01610d58565b9150509295509295509295565b600080600080600080600060a0888a031215610f3757600080fd5b6000610f458a828b01610d58565b9750506020610f568a828b01610dcc565b965050604088013567ffffffffffffffff811115610f7357600080fd5b610f7f8a828b01610d82565b95509550506060610f928a828b01610dcc565b935050608088013567ffffffffffffffff811115610faf57600080fd5b610fbb8a828b01610d82565b925092505092959891949750929550565b60008060008060008060a08789031215610fe557600080fd5b6000610ff389828a01610d58565b965050602061100489828a01610dcc565b955050604087013567ffffffffffffffff81111561102157600080fd5b61102d89828a01610d82565b9450945050606061104089828a01610dcc565b925050608061105189828a01610dcc565b9150509295509295509295565b600080600080600080600060c0888a03121561107957600080fd5b60006110878a828b01610d58565b97505060206110988a828b01610dcc565b965050604088013567ffffffffffffffff8111156110b557600080fd5b6110c18a828b01610d82565b955095505060606110d48a828b01610dcc565b93505060806110e58a828b01610dcc565b92505060a06110f68a828b01610d58565b91505092959891949750929550565b600080600080600080600060c0888a03121561112057600080fd5b600061112e8a828b01610d58565b975050602061113f8a828b01610dcc565b965050604088013567ffffffffffffffff81111561115c57600080fd5b6111688a828b01610d82565b9550955050606061117b8a828b01610dcc565b935050608061118c8a828b01610dcc565b92505060a061119d8a828b01610dcc565b91505092959891949750929550565b6000602082840312156111be57600080fd5b60006111cc84828501610dcc565b91505092915050565b6111de816114f3565b82525050565b6111ed81611505565b82525050565b60006111ff83856114c6565b935061120c83858461155f565b611215836115a1565b840190509392505050565b600061122b826114bb565b61123581856114d7565b935061124581856020860161156e565b80840191505092915050565b61125a8161153b565b82525050565b600061126d600e836114e2565b9150611278826115b2565b602082019050919050565b61128c81611531565b82525050565b600061129e8284611220565b915081905092915050565b60006060820190506112be60008301876111d5565b6112cb6020830186611283565b81810360408301526112de8184866111f3565b905095945050505050565b60006020820190506112fe60008301846111e4565b92915050565b60006020820190506113196000830184611251565b92915050565b6000602082019050818103600083015261133881611260565b9050919050565b60006020820190506113546000830184611283565b92915050565b600060408201905061136f6000830185611283565b61137c6020830184611283565b9392505050565b60006060820190506113986000830186611283565b6113a56020830185611283565b6113b260408301846111d5565b949350505050565b60006060820190506113cf6000830187611283565b6113dc6020830186611283565b81810360408301526113ef8184866111f3565b905095945050505050565b600060608201905061140f6000830186611283565b61141c6020830185611283565b6114296040830184611283565b949350505050565b60006080820190506114466000830187611283565b6114536020830186611283565b6114606040830185611283565b61146d60608301846111d5565b95945050505050565b600060808201905061148b6000830187611283565b6114986020830186611283565b6114a56040830185611283565b6114b26060830184611283565b95945050505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006114fe82611511565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115468261154d565b9050919050565b600061155882611511565b9050919050565b82818337600083830152505050565b60005b8381101561158c578082015181840152602081019050611571565b8381111561159b576000848401525b50505050565b6000601f19601f8301169050919050565b7f4465706f736974204661696c6564000000000000000000000000000000000000600082015250565b6115e4816114f3565b81146115ef57600080fd5b50565b6115fb81611531565b811461160657600080fd5b5056fea2646970667358221220ef1f61e8284abc4ac5b3e7ba3543660e75873e493074a9abdc2251b84b70903c64736f6c63430008040033\";\n\nexport class Registration__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _imx: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Registration> {\n    return super.deploy(_imx, overrides || {}) as Promise<Registration>;\n  }\n  getDeployTransaction(\n    _imx: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_imx, overrides || {});\n  }\n  attach(address: string): Registration {\n    return super.attach(address) as Registration;\n  }\n  connect(signer: Signer): Registration__factory {\n    return super.connect(signer) as Registration__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): RegistrationInterface {\n    return new utils.Interface(_abi) as RegistrationInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Registration {\n    return new Contract(address, _abi, signerOrProvider) as Registration;\n  }\n}\n","import { joinSignature, splitSignature } from '@ethersproject/bytes';\nimport { PopulatedTransaction } from '@ethersproject/contracts';\nimport { NonceManager } from '@ethersproject/experimental';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { SigningKey } from '@ethersproject/signing-key';\nimport { keccak256 as solidityKeccak256 } from '@ethersproject/solidity';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport autoBind from 'auto-bind';\nimport { ec } from 'elliptic';\nimport * as encUtils from 'enc-utils';\nimport { BigNumber } from 'ethers';\nimport * as E from 'fp-ts/Either';\nimport { constant, pipe } from 'fp-ts/function';\nimport * as TE from 'fp-ts/TaskEither';\nimport * as t from 'io-ts';\nimport { Bytes32 } from 'soltypes';\n\nimport type { Stark } from '../contracts';\nimport { ImmutableX__factory, Stark__factory } from '../contracts';\nimport { Registration, Registration__factory } from '../contracts/registration';\nimport {\n  DEFAULT_ACCOUNT_MAPPING_KEY,\n  DEFAULT_SIGNATURE_MESSAGE,\n  deserializeSignature,\n  getAccountPath,\n  getAssetType,\n  getCancelOrderMsg,\n  getDepositMsg,\n  getKeyPairFromPath,\n  getKeyPairFromPrivateKey,\n  getLimitOrderMsg,\n  getLimitOrderMsgWithFee,\n  getMintingBlob,\n  getRegisterUserMsg,\n  getRegisterUserMsgVerifyEth,\n  getStarkPublicKey,\n  getTransferMsg,\n  getWithdrawMsg,\n  getXCoordinate,\n  isHexPrefixed,\n  serializeEthSignature,\n  serializeSignature,\n  sign,\n} from '../crypto';\nimport {\n  decodeForFunction,\n  switchCase,\n  taskEitherWithError,\n  tokenQuantizedAmount,\n  valueOrThrow,\n} from '../libs';\nimport {\n  ERC20TokenType,\n  ERC721Token,\n  ERC721TokenType,\n  EthAddress,\n  ETHTokenType,\n  FeeParams,\n  ImmutableMethodParams,\n  ImmutableMethodResults,\n  MintableERC20TokenType,\n  MintableERC721Token,\n  MintableERC721TokenType,\n  OrderParams,\n  PositiveBigNumber,\n  RegistrationMethodParams,\n  SignatureOptions,\n  StarkMethodParams,\n  StarkwareAccountMapping,\n  Store,\n  Token,\n  Transaction,\n  TransferParams,\n} from '../types';\nimport { ImmutableXClient } from './ImmutableXClient';\n\n/**\n * Immutable X Controller\n */\nexport class ImmutableXController {\n  private accountMapping: StarkwareAccountMapping | undefined; // Map of { HD Path : KeyPair.getPrivate('hex') }\n\n  private activeKeyPair: ec.KeyPair | undefined;\n\n  private store: Store;\n\n  constructor(\n    private publicApiUrl: string,\n    private signer: NonceManager,\n    private accountMappingKey: string = DEFAULT_ACCOUNT_MAPPING_KEY,\n  ) {\n    if (!signer.provider) {\n      throw new Error('Signer is required to have a provider!');\n    }\n    const storage: any = {};\n    this.store = {\n      set: async (key: string, data: any): Promise<void> => {\n        storage[key] = data;\n      },\n      get: async (key: string): Promise<any> => {\n        return storage[key];\n      },\n      remove: async (key: string): Promise<void> => {\n        delete storage[key];\n      },\n    };\n    autoBind(this);\n  }\n\n  // -- Public -- //\n  public async getAddress(): Promise<EthAddress> {\n    return pipe(\n      await this.signer.getAddress(),\n      address => address.toLowerCase(),\n      EthAddress.decode,\n      valueOrThrow,\n    );\n  }\n\n  get starkPublicKey(): string | undefined {\n    if (!this.activeKeyPair) return undefined;\n    return encUtils.sanitizeHex(\n      getXCoordinate(getStarkPublicKey(this.activeKeyPair)),\n    );\n  }\n\n  public async getStarkPublicKey(path?: string): Promise<string> {\n    const keyPair = await this.getKeyPairFromPath(path);\n    return encUtils.sanitizeHex(getXCoordinate(getStarkPublicKey(keyPair)));\n  }\n\n  public getExchangeContract(contractAddress: string): Stark {\n    if (!this.signer.provider) {\n      throw new Error('Please set a provider first - call setProvider()');\n    }\n    return Stark__factory.connect(contractAddress, this.signer);\n  }\n\n  public getRegistrationContract(contractAddress: string): Registration {\n    if (!this.signer.provider) {\n      throw new Error('Please set a provider first - call setProvider()');\n    }\n    return Registration__factory.connect(contractAddress, this.signer);\n  }\n\n  // Signing - via eth key\n  public async sign(payload: any): Promise<string> {\n    const hash = keccak256(toUtf8Bytes(JSON.stringify(payload)));\n    const sig = deserializeSignature(await this.signer.signMessage(hash));\n    return serializeEthSignature(sig);\n  }\n\n  // Signing - via eth key - TODO: EIP712\n  public async signRaw(payload: string): Promise<string> {\n    const sig = deserializeSignature(await this.signer.signMessage(payload));\n    return serializeEthSignature(sig);\n  }\n\n  // Signing - via stark key\n  public async signStark(payload: any): Promise<string> {\n    const key = (await this.getActiveKeyPair()).getPrivate('hex');\n    const signingKey = new SigningKey(isHexPrefixed(key) ? key : `0x${key}`);\n    const hash = keccak256(toUtf8Bytes(JSON.stringify(payload)));\n    const signature = joinSignature(signingKey.signDigest(hash));\n    return signature;\n  }\n\n  // Signing - via eth key for registration\n  public async signRegistration(): Promise<string> {\n    const hash = solidityKeccak256(\n      ['string', 'address', 'uint256'],\n      [\n        'UserRegistration:',\n        await this.getAddress(),\n        await this.getStarkPublicKey(),\n      ],\n    );\n    const signature = await this.signer.signMessage(hash);\n    return signature;\n  }\n\n  /**\n   * StarkWare JSON-RPC Spec\n   */\n  // Stark Off-Chain\n  public async account(\n    layer: string,\n    application: string,\n    index: string,\n  ): Promise<string> {\n    const path = getAccountPath(\n      layer,\n      application,\n      await this.getAddress(),\n      index,\n    );\n    const starkPublicKey = await this.getStarkPublicKey(path);\n    return starkPublicKey;\n  }\n\n  public signUserRegistration({\n    etherKey,\n    starkPublicKey,\n    nonce,\n  }: {\n    etherKey: string;\n    starkPublicKey: string;\n    nonce: string;\n  }): TE.TaskEither<Error, string> {\n    return pipe(\n      taskEitherWithError(async () =>\n        this.assertStarkPublicKey(starkPublicKey),\n      ),\n      TE.chain(() => taskEitherWithError(this.getActiveKeyPair)),\n      TE.chain(keyPair => {\n        const msg = getRegisterUserMsg(etherKey, starkPublicKey, nonce);\n        const signature = sign(keyPair, msg);\n        const starkSignature = serializeSignature(signature);\n        return TE.of(starkSignature);\n      }),\n    );\n  }\n\n  public signUserRegistrationVerifyEth({\n    etherKey,\n    starkPublicKey,\n  }: {\n    etherKey: string;\n    starkPublicKey: string;\n  }): TE.TaskEither<Error, string> {\n    return pipe(\n      taskEitherWithError(async () =>\n        this.assertStarkPublicKey(starkPublicKey),\n      ),\n      TE.chain(() => taskEitherWithError(this.getActiveKeyPair)),\n      TE.chain(keyPair => {\n        const msg = getRegisterUserMsgVerifyEth(etherKey, starkPublicKey);\n        const signature = sign(keyPair, msg);\n        const starkSignature = serializeSignature(signature);\n        return TE.of(starkSignature);\n      }),\n    );\n  }\n\n  public async signDeposit(\n    starkPublicKey: string,\n    vaultId: string,\n    assetId: string,\n    quantity: PositiveBigNumber,\n    nonce: string,\n  ): Promise<string> {\n    await this.assertStarkPublicKey(starkPublicKey);\n    const msg = getDepositMsg(\n      quantity.toString(),\n      nonce,\n      vaultId,\n      assetId,\n      starkPublicKey,\n    );\n    const keyPair = await this.getActiveKeyPair();\n    const signature = sign(keyPair, msg);\n    const starkSignature = serializeSignature(signature);\n    return starkSignature;\n  }\n\n  public signWithdraw(\n    starkPublicKey: string,\n    vaultId: string,\n    token: Token,\n    assetId: string,\n    quantity: PositiveBigNumber,\n    nonce: string,\n  ): TE.TaskEither<Error, string> {\n    return taskEitherWithError(async () => {\n      await this.assertStarkPublicKey(starkPublicKey);\n      const msg = getWithdrawMsg(\n        quantity.toString(),\n        nonce,\n        vaultId,\n        assetId,\n        starkPublicKey,\n      );\n      const keyPair = await this.getActiveKeyPair();\n      const signature = sign(keyPair, msg);\n      const starkSignature = serializeSignature(signature);\n      return starkSignature;\n    });\n  }\n\n  public transfer(\n    from: TransferParams,\n    to: TransferParams,\n    token: Token,\n    assetId: string,\n    quantity: PositiveBigNumber,\n    nonce: string,\n    expirationTimestamp: string,\n  ): TE.TaskEither<Error, string> {\n    return taskEitherWithError(async () => {\n      const quantum = await this.getQuantumValue(token);\n\n      await this.assertStarkPublicKey(from.starkPublicKey);\n      const quantizedAmount = tokenQuantizedAmount(token, quantity, quantum);\n      const msg = getTransferMsg(\n        quantizedAmount.toString(),\n        nonce,\n        String(from.vaultId),\n        assetId,\n        String(to.vaultId),\n        to.starkPublicKey,\n        expirationTimestamp,\n      );\n\n      const keyPair = await this.getActiveKeyPair();\n      const signature = sign(keyPair, msg);\n      const starkSignature = serializeSignature(signature);\n      return starkSignature;\n    });\n  }\n\n  // Adds signatures to the transfer request\n  public transferV2(\n    transfers: ImmutableMethodResults.ImmutableGetSignableTransferV2Result,\n  ): TE.TaskEither<\n    Error,\n    readonly ImmutableMethodParams.ImmutableTransferRequestV2[]\n  > {\n    return TE.traverseSeqArray(\n      (transfer: ImmutableMethodResults.ImmutableSignableTransferV2) =>\n        pipe(\n          TE.bindTo('signature')(\n            this.transfer(\n              {\n                starkPublicKey: transfers.sender_stark_key,\n                vaultId: transfer.sender_vault_id,\n              },\n              {\n                starkPublicKey: transfer.receiver_stark_key,\n                vaultId: transfer.receiver_vault_id,\n              },\n              transfer.token,\n              transfer.asset_id,\n              transfer.amount,\n              String(transfer.nonce),\n              String(transfer.expiration_timestamp),\n            ),\n          ),\n          TE.map(({ signature }: { signature: string }) => ({\n            receiver_stark_key: transfer.receiver_stark_key,\n            receiver_vault_id: transfer.receiver_vault_id,\n            amount: String(transfer.amount),\n            asset_id: transfer.asset_id,\n            expiration_timestamp: transfer.expiration_timestamp,\n            nonce: transfer.nonce,\n            sender_vault_id: transfer.sender_vault_id,\n            stark_signature: signature,\n          })),\n        ),\n    )(transfers.signable_responses);\n  }\n\n  public createOrder(\n    starkPublicKey: string,\n    sell: OrderParams,\n    buy: OrderParams,\n    sell_id: string,\n    buy_id: string,\n    nonce: t.Int,\n    expirationTimestamp: t.Int,\n  ): TE.TaskEither<Error, string> {\n    return taskEitherWithError(async () => {\n      await this.assertStarkPublicKey(starkPublicKey);\n      const msg = getLimitOrderMsg(\n        String(sell.vaultId),\n        String(buy.vaultId),\n        sell.quantity.toString(),\n        buy.quantity.toString(),\n        sell_id,\n        buy_id,\n        String(nonce),\n        String(expirationTimestamp),\n      );\n      const keyPair = await this.getActiveKeyPair();\n      const signature = sign(keyPair, msg);\n      const starkSignature = serializeSignature(signature);\n      return starkSignature;\n    });\n  }\n\n  public createOrderWithFee(\n    starkPublicKey: string,\n    sell: OrderParams,\n    buy: OrderParams,\n    sell_id: string,\n    buy_id: string,\n    nonce: t.Int,\n    expirationTimestamp: t.Int,\n    fee_info: FeeParams,\n  ): TE.TaskEither<Error, string> {\n    return taskEitherWithError(async () => {\n      await this.assertStarkPublicKey(starkPublicKey);\n      const msg = getLimitOrderMsgWithFee({\n        vaultSell: String(sell.vaultId),\n        vaultBuy: String(buy.vaultId),\n        amountSell: sell.quantity.toString(),\n        amountBuy: buy.quantity.toString(),\n        tokenSell: sell_id,\n        tokenBuy: buy_id,\n        nonce: String(nonce),\n        expirationTimestamp: String(expirationTimestamp),\n        feeToken: fee_info.feeToken,\n        feeVault: String(fee_info.feeVaultId),\n        feeLimit: fee_info.feeLimit.toString(),\n      });\n      const keyPair = await this.getActiveKeyPair();\n      const signature = sign(keyPair, msg);\n      const starkSignature = serializeSignature(signature);\n      return starkSignature;\n    });\n  }\n\n  private getCancelOrderMsg(orderId: string): TE.TaskEither<Error, string> {\n    return pipe(\n      E.tryCatch(\n        () => getCancelOrderMsg(orderId),\n        e => e as Error,\n      ),\n      TE.fromEither,\n    );\n  }\n\n  private signF({\n    keyPair,\n    msg,\n  }: {\n    keyPair: ec.KeyPair;\n    msg: string;\n  }): TE.TaskEither<Error, ec.Signature> {\n    return pipe(\n      E.tryCatch(\n        () => sign(keyPair, msg),\n        e => e as Error,\n      ),\n      TE.fromEither,\n    );\n  }\n\n  private serializeSignature(signature: SignatureOptions) {\n    return pipe(\n      E.tryCatch(\n        () => serializeSignature(signature),\n        e => e as Error,\n      ),\n      TE.fromEither,\n    );\n  }\n\n  public cancelOrder(orderId: string): TE.TaskEither<Error, string> {\n    return pipe(\n      this.getCancelOrderMsg(orderId),\n      TE.map(msg => ({ msg })),\n      TE.bind(\n        'keyPair',\n        constant(\n          TE.tryCatch(\n            () => this.getActiveKeyPair(),\n            e => e as Error,\n          ),\n        ),\n      ),\n      TE.chain(this.signF),\n      TE.chain(this.serializeSignature),\n    );\n  }\n\n  // Stark On-Chain\n  public register({\n    contractAddress,\n    etherKey,\n    starkPublicKey,\n    operatorSignature,\n  }: StarkMethodParams.StarkRegisterParams): TE.TaskEither<\n    Error,\n    PopulatedTransaction\n  > {\n    return taskEitherWithError(() => {\n      const exchangeContract = this.getExchangeContract(contractAddress);\n      return exchangeContract.populateTransaction.registerUser(\n        etherKey,\n        starkPublicKey,\n        operatorSignature,\n      );\n    });\n  }\n\n  public depositF({\n    contractAddress,\n    starkPublicKey,\n    quantity,\n    quantizedAmount,\n    assetId,\n    token,\n    vaultId,\n  }: StarkMethodParams.StarkDepositParams): TE.TaskEither<\n    Error,\n    PopulatedTransaction\n  > {\n    const exchangeContract = this.getExchangeContract(contractAddress);\n    const assetType =\n      token.type === ERC721TokenType.ERC721\n        ? getAssetType(token).toUint().val\n        : new Bytes32(assetId).toUint().val;\n\n    return switchCase<string, TE.TaskEither<Error, PopulatedTransaction>>(\n      token.type,\n      {\n        [ETHTokenType.ETH]: () =>\n          pipe(\n            taskEitherWithError(() =>\n              exchangeContract.populateTransaction[\n                'deposit(uint256,uint256,uint256)'\n              ](starkPublicKey, assetType, vaultId),\n            ),\n            TE.map(unsignedTrx => ({\n              ...unsignedTrx,\n              value: quantity,\n            })),\n          ),\n        [ERC20TokenType.ERC20]: () =>\n          taskEitherWithError(() =>\n            exchangeContract.populateTransaction[\n              'deposit(uint256,uint256,uint256,uint256)'\n            ](starkPublicKey, assetType, vaultId, quantizedAmount),\n          ),\n        [ERC721TokenType.ERC721]: () =>\n          taskEitherWithError(() =>\n            exchangeContract.populateTransaction.depositNft(\n              starkPublicKey,\n              assetType,\n              vaultId,\n              (token as ERC721Token).data.tokenId,\n            ),\n          ),\n      },\n      () => TE.left(new Error('Invalid token type')),\n    );\n  }\n\n  public async deposit(\n    params: StarkMethodParams.StarkDepositParamsTS,\n  ): Promise<Transaction> {\n    return decodeForFunction(\n      params,\n      StarkMethodParams.StarkDepositParamsCodec.decode,\n      this.depositF,\n    );\n  }\n\n  public registerAndDepositF({\n    registrationContractAddress,\n    starkPublicKey,\n    quantity,\n    assetId,\n    token,\n    vaultId,\n    etherKey,\n    operatorSignature,\n  }: RegistrationMethodParams.RegisterAndDepositParams): TE.TaskEither<\n    Error,\n    PopulatedTransaction\n  > {\n    const registrationContract = this.getRegistrationContract(\n      registrationContractAddress,\n    );\n    const assetType =\n      token.type === ERC721TokenType.ERC721\n        ? getAssetType(token).toUint().val\n        : new Bytes32(assetId).toUint().val;\n\n    return switchCase<string, TE.TaskEither<Error, PopulatedTransaction>>(\n      token.type,\n      {\n        [ETHTokenType.ETH]: () =>\n          pipe(\n            taskEitherWithError(() =>\n              registrationContract.populateTransaction[\n                'registerAndDeposit(address,uint256,bytes,uint256,uint256)'\n              ](\n                etherKey,\n                starkPublicKey,\n                operatorSignature,\n                assetType,\n                vaultId,\n              ),\n            ),\n            TE.map(unsignedTrx => ({\n              ...unsignedTrx,\n              value: quantity,\n            })),\n          ),\n        [ERC20TokenType.ERC20]: () => TE.left(new Error('Invalid token type')),\n        [ERC721TokenType.ERC721]: () =>\n          TE.left(new Error('Invalid token type')),\n      },\n      () => TE.left(new Error('Invalid token type')),\n    );\n  }\n\n  public async depositCancel(\n    contractAddress: string,\n    starkPublicKey: string,\n    token: Token,\n    vaultId: string,\n  ): Promise<Transaction> {\n    await this.assertStarkPublicKey(starkPublicKey);\n    const exchangeContract = this.getExchangeContract(contractAddress);\n    const assetType = getAssetType(token).toUint().val;\n    const unsignedTrx: Transaction =\n      await exchangeContract.populateTransaction.depositCancel(\n        starkPublicKey,\n        assetType,\n        vaultId,\n      );\n    return unsignedTrx;\n  }\n\n  public async depositReclaim(\n    contractAddress: string,\n    starkPublicKey: string,\n    token: Token,\n    vaultId: string,\n  ): Promise<Transaction> {\n    await this.assertStarkPublicKey(starkPublicKey);\n    const exchangeContract = this.getExchangeContract(contractAddress);\n    const assetType = getAssetType(token).toUint().val;\n    const unsignedTrx: Transaction =\n      await exchangeContract.populateTransaction.depositReclaim(\n        starkPublicKey,\n        assetType,\n        vaultId,\n      );\n    return unsignedTrx;\n  }\n\n  public withdrawal(\n    contractAddress: string,\n    starkPublicKey: string,\n    token: Token,\n  ): TE.TaskEither<Error, PopulatedTransaction> {\n    return taskEitherWithError(async () => {\n      await this.assertStarkPublicKey(starkPublicKey);\n      const assetTypeValue = await this.getAssetTypeValue(token);\n      const exchangeContract = this.getExchangeContract(contractAddress);\n      if (\n        token.type.toUpperCase() === ETHTokenType.ETH ||\n        token.type.toUpperCase() === ERC20TokenType.ERC20\n      ) {\n        return exchangeContract.populateTransaction.withdraw(\n          starkPublicKey,\n          assetTypeValue,\n        );\n      }\n      if (token.type.toUpperCase() === ERC721TokenType.ERC721) {\n        return exchangeContract.populateTransaction.withdrawNft(\n          starkPublicKey,\n          assetTypeValue,\n          (token as ERC721Token).data.tokenId,\n        );\n      }\n      if (\n        token.type.toUpperCase() === MintableERC20TokenType.MINTABLE_ERC20 ||\n        token.type.toUpperCase() === MintableERC721TokenType.MINTABLE_ERC721\n      ) {\n        const mintToken = token as MintableERC721Token; // MintableERC20Token\n        return exchangeContract.populateTransaction.withdrawAndMint(\n          starkPublicKey,\n          assetTypeValue,\n          getMintingBlob(mintToken.data.id, mintToken.data.blueprint), // client token id, blueprint\n        );\n      }\n      throw new Error('Invalid token type');\n    });\n  }\n\n  public registerAndWithdraw({\n    registrationContractAddress,\n    starkPublicKey,\n    token,\n    etherKey,\n    operatorSignature,\n  }: RegistrationMethodParams.RegisterAndWithdrawParams): TE.TaskEither<\n    Error,\n    PopulatedTransaction\n  > {\n    return taskEitherWithError(async () => {\n      await this.assertStarkPublicKey(starkPublicKey);\n      const assetTypeValue = await this.getAssetTypeValue(token);\n      const registrationContract = this.getRegistrationContract(\n        registrationContractAddress,\n      );\n\n      if (\n        token.type.toUpperCase() === ETHTokenType.ETH ||\n        token.type.toUpperCase() === ERC20TokenType.ERC20\n      ) {\n        return registrationContract.populateTransaction.registerAndWithdraw(\n          etherKey,\n          starkPublicKey,\n          operatorSignature,\n          assetTypeValue,\n        );\n      }\n      throw new Error('Invalid token type');\n    });\n  }\n\n  public async fullWithdrawal(\n    contractAddress: string,\n    starkPublicKey: string,\n    vaultId: string,\n  ): Promise<Transaction> {\n    await this.assertStarkPublicKey(starkPublicKey);\n    const exchangeContract = this.getExchangeContract(contractAddress);\n    const unsignedTrx: Transaction =\n      await exchangeContract.populateTransaction.fullWithdrawalRequest(\n        starkPublicKey,\n        vaultId,\n      );\n    return unsignedTrx;\n  }\n\n  public async freeze(\n    contractAddress: string,\n    starkPublicKey: string,\n    vaultId: string,\n  ): Promise<Transaction> {\n    await this.assertStarkPublicKey(starkPublicKey);\n    const exchangeContract = this.getExchangeContract(contractAddress);\n    const unsignedTrx: Transaction =\n      await exchangeContract.populateTransaction.freezeRequest(\n        starkPublicKey,\n        vaultId,\n      );\n    return unsignedTrx;\n  }\n\n  // public async verifyEscape(contractAddress: string, starkPublicKey: string, proof: string[]): Promise<Transaction> {\n  //     await this.assertStarkPublicKey(starkPublicKey);\n  //     const exchangeContract = this.getExchangeContract(contractAddress);\n  //     const unsignedTrx: Transaction = await exchangeContract.populateTransaction.verifyEscape(proof);\n  //     return unsignedTrx;\n  // }\n\n  public async escape(\n    contractAddress: string,\n    starkPublicKey: string,\n    vaultId: string,\n    token: Token,\n    quantity: PositiveBigNumber,\n  ): Promise<Transaction> {\n    await this.assertStarkPublicKey(starkPublicKey);\n    const exchangeContract = this.getExchangeContract(contractAddress);\n    const assetType = getAssetType(token).toUint().val;\n    const quantizedAmount = tokenQuantizedAmount(token, quantity);\n    const unsignedTrx: Transaction =\n      await exchangeContract.populateTransaction.escape(\n        starkPublicKey,\n        vaultId,\n        assetType,\n        quantizedAmount.toString(),\n      );\n    return unsignedTrx;\n  }\n\n  // Immutable NFT (ERC-721) Contract\n  public mintNFT(tokenAddress: string): TE.TaskEither<Error, Transaction> {\n    const nftContract = ImmutableX__factory.connect(tokenAddress, this.signer);\n    return taskEitherWithError(() => nftContract.populateTransaction.mint());\n  }\n\n  public approveNFT({\n    tokenAddress,\n    contractAddress,\n    tokenId,\n  }: StarkMethodParams.StarkApproveNFTParams): TE.TaskEither<\n    Error,\n    Transaction\n  > {\n    const nftContract = ImmutableX__factory.connect(tokenAddress, this.signer);\n    return taskEitherWithError(() =>\n      nftContract.populateTransaction.approve(contractAddress, tokenId),\n    );\n  }\n\n  public approveERC20({\n    tokenAddress,\n    amount,\n    contractAddress,\n  }: StarkMethodParams.StarkApproveERC20Params): TE.TaskEither<\n    Error,\n    Transaction\n  > {\n    const tokenContract = ImmutableX__factory.connect(\n      tokenAddress,\n      this.signer,\n    );\n    return taskEitherWithError(() =>\n      tokenContract.populateTransaction.approve(contractAddress, amount),\n    );\n  }\n\n  // -- Private -- //\n  private async assertStarkPublicKey(starkPublicKey: string): Promise<void> {\n    if (starkPublicKey !== (await this.getStarkPublicKey())) {\n      throw new Error(\n        'Provided Stark key does not match with the current active key',\n      );\n    }\n  }\n\n  private async getActiveKeyPair(): Promise<ec.KeyPair> {\n    await this.getAccountMapping();\n    if (this.activeKeyPair) {\n      return this.activeKeyPair;\n    }\n    throw new Error('No active Stark key pair - Please provide a path');\n  }\n\n  private async setActiveKeyPair(\n    path: string,\n    activeKeyPair: ec.KeyPair,\n  ): Promise<void> {\n    const accountMapping = await this.getAccountMapping();\n    accountMapping[path] = activeKeyPair.getPrivate('hex');\n    this.accountMapping = accountMapping;\n    this.activeKeyPair = activeKeyPair;\n    await this.store.set(this.accountMappingKey, accountMapping);\n  }\n\n  private async getKeyPairFromPath(path?: string): Promise<ec.KeyPair> {\n    const accountMapping = await this.getAccountMapping();\n\n    // IF EXIST\n    if (!path) {\n      return this.getActiveKeyPair();\n    }\n    const match = accountMapping[path];\n    if (match) {\n      return getKeyPairFromPrivateKey(match);\n    }\n\n    // IF NOT EXIST\n    /**\n     * Creates an instance based on a seed.\n     *\n     * For the seed we suggest to use [bip39](https://npmjs.org/package/bip39) to\n     * create one from a BIP39 mnemonic.\n     */\n    // e.g. bip39.generateMnemonic()\n    // const activeKeyPair = crypto.getKeyPairFromPath(this.wallet.mnemonic.phrase, path); // ( seed, path e.g. m/44'/0'/0/1 )\n\n    // const mnemonic = bip39.generateMnemonic();\n    // log.debug(component, `Random mnemonic: ${mnemonic} and HD path: ${path}`);\n\n    const signature = await this.signer.signMessage(DEFAULT_SIGNATURE_MESSAGE);\n    const activeKeyPair = getKeyPairFromPath(splitSignature(signature).s, path); // || signature || utils.splitSignature(signature).r\n    await this.setActiveKeyPair(path, activeKeyPair);\n    return activeKeyPair;\n  }\n\n  private async getAccountMapping(): Promise<StarkwareAccountMapping> {\n    if (typeof this.accountMapping !== 'undefined') {\n      return this.accountMapping;\n    }\n\n    const accountMapping: StarkwareAccountMapping =\n      (await this.store.get(this.accountMappingKey)) || {};\n    this.accountMapping = accountMapping;\n\n    const paths = Object.keys(accountMapping);\n    if (!this.activeKeyPair && paths.length) {\n      this.activeKeyPair = getKeyPairFromPrivateKey(accountMapping[paths[0]]);\n    }\n    return accountMapping;\n  }\n\n  private isTokenERC20(token: Token): boolean {\n    return token.type === ERC20TokenType.ERC20;\n  }\n\n  private isTokenETH(token: Token): boolean {\n    return token.type === ETHTokenType.ETH;\n  }\n\n  private isTokenNFT(token: Token): boolean {\n    return !this.isTokenERC20(token) && !this.isTokenETH(token);\n  }\n\n  private async getAssetTypeValue(token: Token): Promise<string> {\n    return new Promise(async resolve => {\n      const quantum = await this.getQuantumValue(token);\n      const assetType = getAssetType(token, quantum);\n      return resolve(assetType.toUint().val);\n    });\n  }\n\n  private async getQuantumValue(token: Token): Promise<string> {\n    return new Promise(async resolve => {\n      const returnDefaultValue = () => resolve('1');\n      if (this.isTokenNFT(token)) {\n        return returnDefaultValue();\n      }\n\n      const client = await ImmutableXClient.build({\n        publicApiUrl: this.publicApiUrl,\n      });\n\n      try {\n        const { tokenAddress } = (token as any).data;\n        const { quantum: qStr } = await client.getToken({\n          tokenAddress,\n        });\n\n        return resolve(qStr);\n      } catch (error: any) {\n        console.error('Could not query quantum!');\n        console.error('message:', error?.message);\n        return returnDefaultValue();\n      }\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/return-await */\nimport { Signer } from '@ethersproject/abstract-signer';\nimport { Contract, PopulatedTransaction } from '@ethersproject/contracts';\nimport { NonceManager } from '@ethersproject/experimental';\nimport { formatUnits } from '@ethersproject/units';\nimport autoBind from 'auto-bind';\nimport { BigNumber } from 'ethers';\nimport { pipe } from 'fp-ts/function';\nimport * as TE from 'fp-ts/TaskEither';\n\nimport { getAssetID, signAuthHeader } from '../crypto';\nimport { taskEitherWithError, valueOrThrow } from '../libs';\nimport { erc20 } from '../libs/abi';\nimport { Token } from '../types';\nimport { ImmutableXController } from './ImmutableXController';\n\nexport type ImmutableXWalletParams = {\n  publicApiUrl: string;\n  signer: Signer;\n  gasLimit?: BigNumber;\n  gasPrice?: BigNumber;\n  accountMappingKey?: string;\n};\n\n/**\n * Immutable X Wallet\n */\nexport class ImmutableXWallet {\n  public controller: ImmutableXController;\n\n  private signer: NonceManager;\n\n  private gasLimit?: BigNumber;\n\n  private gasPrice?: BigNumber;\n\n  constructor({\n    publicApiUrl,\n    signer,\n    gasLimit,\n    gasPrice,\n    accountMappingKey,\n  }: ImmutableXWalletParams) {\n    if (!signer.provider) {\n      throw new Error('Signer is required to have a provider!');\n    }\n    this.signer = new NonceManager(signer);\n    this.controller = new ImmutableXController(\n      publicApiUrl,\n      this.signer,\n      accountMappingKey,\n    );\n    this.gasLimit = gasLimit;\n    this.gasPrice = gasPrice;\n    autoBind(this);\n  }\n\n  public static async build(\n    params: ImmutableXWalletParams,\n  ): Promise<ImmutableXWallet> {\n    const wallet = new ImmutableXWallet(params);\n    try {\n      await wallet.controller.account('starkex', 'immutablex', '1');\n    } catch (e) {\n      const message = 'Problem connecting starkex account';\n      console.log(message, e);\n      throw new Error(message);\n    }\n    return wallet;\n  }\n\n  public static buildF(\n    params: ImmutableXWalletParams,\n  ): TE.TaskEither<Error, ImmutableXWallet> {\n    return taskEitherWithError(() => ImmutableXWallet.build(params));\n  }\n\n  public incrementNonce(): void {\n    if (this.signer instanceof NonceManager)\n      this.signer.incrementTransactionCount();\n  }\n\n  public getEthKey(\n    contractAddress: string,\n    starkPublicKey: string,\n  ): TE.TaskEither<Error, string> {\n    const exchangeContract =\n      this.controller.getExchangeContract(contractAddress);\n    return taskEitherWithError(() =>\n      exchangeContract.getEthKey(starkPublicKey),\n    );\n  }\n\n  public async getDepositBalance(\n    contractAddress: string,\n    starkPublicKey: string,\n    token: Token,\n    vaultId: string,\n  ): Promise<string> {\n    const exchangeContract =\n      this.controller.getExchangeContract(contractAddress);\n    const assetId = getAssetID(token).toUint().val;\n    return await (\n      await exchangeContract.getQuantizedDepositBalance(\n        starkPublicKey,\n        assetId,\n        vaultId,\n      )\n    ).toString();\n  }\n\n  public async getWithdrawalBalance(\n    contractAddress: string,\n    starkPublicKey: string,\n    token: Token,\n  ): Promise<string> {\n    const exchangeContract =\n      this.controller.getExchangeContract(contractAddress);\n    const assetId = getAssetID(token).toUint().val;\n    return await (\n      await exchangeContract.getWithdrawalBalance(starkPublicKey, assetId)\n    ).toString();\n  }\n\n  public async getBalance(\n    owner: string,\n    contractAddress: string,\n  ): Promise<string> {\n    const erc20Contract = new Contract(contractAddress, erc20, this.signer);\n    const [balance, decimal] = await Promise.all([\n      erc20Contract.balanceOf(owner),\n      erc20Contract.decimals(),\n    ]);\n    return formatUnits(balance, decimal);\n  }\n\n  public async getAllowance(\n    contractAddress: string,\n    owner: string,\n    spender: string,\n  ): Promise<BigNumber> {\n    const erc20Contract = new Contract(contractAddress, erc20, this.signer);\n    const allowance = await erc20Contract.allowance(owner, spender);\n    return allowance;\n  }\n\n  public sendTransactionF(\n    unsignedTrx: PopulatedTransaction,\n  ): TE.TaskEither<Error, string> {\n    return pipe(\n      this.gasPrice && this.gasLimit\n        ? {\n            ...unsignedTrx,\n            gasPrice: this.gasPrice.toHexString(),\n            gasLimit: this.gasLimit.toHexString(),\n          }\n        : unsignedTrx,\n      trx => taskEitherWithError(() => this.signer.sendTransaction(trx)),\n      TE.chain(r => {\n        this.incrementNonce();\n        return TE.of(r.hash);\n      }),\n    );\n  }\n\n  public async sendTransaction(\n    unsignedTrx: PopulatedTransaction,\n  ): Promise<string> {\n    return valueOrThrow(await this.sendTransactionF(unsignedTrx)());\n  }\n\n  public async getAuthenticationHeaders() {\n    const timestamp = Math.floor(Date.now() / 1000).toString();\n    const signature = await signAuthHeader(timestamp, this.signer);\n    return {\n      'imx-timestamp': timestamp,\n      'imx-signature': signature,\n    };\n  }\n}\n","import axios, { AxiosError, AxiosInstance, AxiosResponse } from 'axios';\nimport axiosRetry from 'axios-retry';\n\nconst logResponse = (response: AxiosResponse) => {\n  console.log(`RESPONSE:\\n ${response.status} ${response.statusText}`);\n};\nconst logErrorResponse = (error: AxiosError) => {\n  console.log(\n    `RESPONSE:\\n ${error?.response?.status} ${error?.response?.statusText}`,\n  );\n};\n\nconst logRequest = request => {\n  console.log(\n    `REQUEST:\\n ${request.method?.toUpperCase()} ${request.baseURL}${\n      request.url\n    }`,\n  );\n};\n\nexport const getAxiosWithDebugLogger = (\n  enableDebug: boolean,\n): AxiosInstance => {\n  const axiosInstance = axios.create();\n\n  // Retry on network errors or throttles\n  axiosRetry(axiosInstance, {\n    retries: 3,\n    retryDelay: axiosRetry.exponentialDelay,\n    retryCondition: error => {\n      return axiosRetry.isNetworkError(error) || error.response!.status === 429;\n    },\n  });\n\n  axiosInstance.interceptors.response.use(\n    response => {\n      if (enableDebug) {\n        logResponse(response);\n      }\n\n      return response;\n    },\n    error => {\n      if (enableDebug) {\n        logErrorResponse(error);\n      }\n      return Promise.reject(error);\n    },\n  );\n  axiosInstance.interceptors.request.use(\n    request => {\n      if (enableDebug) {\n        logRequest(request);\n      }\n      return request;\n    },\n    error => {\n      if (enableDebug) {\n        logRequest(error);\n      }\n      return Promise.reject(error);\n    },\n  );\n\n  return axiosInstance;\n};\n","import {\n  AxiosError,\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosResponse,\n} from 'axios';\nimport * as https from 'https';\n\nimport { getAxiosWithDebugLogger } from '../utils/logger';\n\n/**\n * Client for making HTTP requests using TypeScript only\n */\nexport class RequestClient {\n  private baseUrl: string;\n\n  private agent: https.Agent;\n\n  private baseOptions: AxiosRequestConfig;\n\n  private axiosInstance: AxiosInstance;\n\n  constructor(baseUrl: string, enableDebug = false, private apiKey?: string) {\n    this.baseUrl = baseUrl;\n    this.agent = new https.Agent();\n    this.axiosInstance = getAxiosWithDebugLogger(enableDebug);\n\n    this.baseOptions = {\n      baseURL: this.baseUrl,\n      httpsAgent: this.agent,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    // If provided, add our api key to all request headers.\n    if (apiKey) {\n      this.baseOptions.headers['x-api-key'] = this.apiKey;\n    }\n  }\n\n  /**\n   * Request configuration\n   */\n  public replaceApiVersion(path: string, version: string): string {\n    return path.replace(/\\/v[0-9]+$/, `/${version}`);\n  }\n\n  public addHeaders(\n    options: AxiosRequestConfig,\n    headers: { [key: string]: string },\n  ): AxiosRequestConfig {\n    return {\n      ...options,\n      headers: {\n        ...options.headers,\n        ...headers,\n      },\n    };\n  }\n\n  public addParams(\n    options: AxiosRequestConfig,\n    params: any,\n  ): AxiosRequestConfig {\n    return {\n      ...options,\n      params: {\n        ...options.params,\n        ...params,\n      },\n    };\n  }\n\n  /**\n   * Response configuration\n   */\n  private handleResponse<T>(response: AxiosResponse<T>): T {\n    return response.data;\n  }\n\n  private handleErrors(error: AxiosError): any {\n    if (error.response?.data) {\n      throw error.response?.data;\n    }\n    throw error;\n  }\n\n  /**\n   * HTTP methods\n   */\n  public async get(\n    path: string,\n    params?: any,\n    headers?: { [key: string]: string },\n    version?: string,\n  ): Promise<unknown> {\n    let options = this.baseOptions;\n\n    if (version && options.baseURL) {\n      options.baseURL = this.replaceApiVersion(options.baseURL, version);\n    }\n\n    if (params) {\n      options = this.addParams(options, params);\n    }\n\n    if (headers) {\n      options = this.addHeaders(options, headers);\n    }\n\n    try {\n      const response = await this.axiosInstance.get(`${path}`, options);\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleErrors(error as AxiosError<unknown>);\n    }\n  }\n\n  public async post(\n    path: string,\n    data: any,\n    headers?: { [key: string]: string },\n    version?: string,\n  ): Promise<unknown> {\n    let options = this.baseOptions;\n\n    if (version && options.baseURL) {\n      options.baseURL = this.replaceApiVersion(options.baseURL, version);\n    }\n\n    if (headers) {\n      options = this.addHeaders(options, headers);\n    }\n\n    try {\n      const response = await this.axiosInstance.post(`${path}`, data, options);\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleErrors(error as AxiosError<unknown>);\n    }\n  }\n\n  public async patch(\n    path: string,\n    data: any,\n    headers?: { [key: string]: string },\n    version?: string,\n  ): Promise<unknown> {\n    let options = this.baseOptions;\n\n    if (version && options.baseURL) {\n      options.baseURL = this.replaceApiVersion(options.baseURL, version);\n    }\n\n    if (headers) {\n      options = this.addHeaders(options, headers);\n    }\n\n    try {\n      const response = await this.axiosInstance.patch(`${path}`, data, options);\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleErrors(error as AxiosError<unknown>);\n    }\n  }\n\n  public async delete(path: string, data: any): Promise<unknown> {\n    const options = {\n      ...this.baseOptions,\n      data,\n    };\n\n    try {\n      const response = await this.axiosInstance.delete(`${path}`, options);\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleErrors(error as AxiosError<unknown>);\n    }\n  }\n}\n","// @TODO: refactor the code so that these arent necessary.\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable radix */\n/* eslint-disable no-underscore-dangle */\n\nimport autoBind from 'auto-bind';\nimport axios, { AxiosRequestConfig } from 'axios';\nimport { BigNumber, Signer } from 'ethers';\nimport * as A from 'fp-ts/Array';\nimport * as E from 'fp-ts/Either';\nimport { pipe } from 'fp-ts/function';\nimport * as T from 'fp-ts/Task';\nimport * as TE from 'fp-ts/TaskEither';\nimport * as https from 'https';\nimport { Errors } from 'io-ts';\nimport queryString from 'query-string';\n\nimport { getAssetID, getMintingBlobHash } from '../crypto';\nimport {\n  decodeForFunction,\n  errorsToError,\n  formatError,\n  taskEitherWithError,\n  tokenQuantizedAmount,\n  valueOrThrow,\n} from '../libs';\nimport {\n  AddMetadataSchemaToCollectionParams,\n  AddMetadataSchemaToCollectionResult,\n  AddMetadataSchemaToCollectionResultCodec,\n  BurnAddress,\n  CreateCollectionParams,\n  CreateCollectionsResult,\n  CreateCollectionsResultsCodec,\n  CreateProjectParams,\n  CreateProjectResult,\n  CreateProjectResultsCodec,\n  ERC20Token,\n  ERC721Token,\n  ERC721TokenType,\n  EthAddress,\n  ETHToken,\n  ETHTokenType,\n  ExchangeProvider,\n  FeeType,\n  GetMetadataSchemaParams,\n  GetMetadataSchemaResult,\n  GetMetadataSchemaResultCodec,\n  GetProjectParams,\n  HexadecimalString,\n  ImmutableMethodParams,\n  ImmutableMethodResults,\n  MintableERC20Token,\n  MintableERC721Token,\n  MintableERC721TokenType,\n  MintBody,\n  MintV2Body,\n  OrderParams,\n  PositiveBigNumber,\n  ProjectResult,\n  ProjectResultCodec,\n  ProjectsResult,\n  ProjectsResultCodec,\n  RegistrationMethodParams,\n  StarkMethodParams,\n  Token,\n  UpdateCollectionParams,\n  UpdateCollectionsResultCodec,\n  UpdateCollectionsResults,\n  UpdateMetadataSchemaByNameParams,\n  UpdateMetadataSchemaByNameResult,\n  UpdateMetadataSchemaByNameResultCodec,\n} from '../types';\nimport { ImmutableXWallet } from './ImmutableXWallet';\nimport { RequestClient } from './RequestClient';\nimport ImmutableCreateExchangeResultCodec = ImmutableMethodResults.ImmutableCreateExchangeResultCodec;\nimport ImmutableCreateExchangeResultCodecV1 = ImmutableMethodResults.ImmutableCreateExchangeResultCodecV1;\nimport ImmutableGetExchangeResultCodec = ImmutableMethodResults.ImmutableGetExchangeResultCodec;\nimport ImmutableGetExchangeResultCodecV1 = ImmutableMethodResults.ImmutableGetExchangeResultCodecV1;\nimport ImmutableGetMoonpaySignatureResultCodec = ImmutableMethodResults.ImmutableGetMoonpaySignatureResultCodec;\nimport ImmutableGetMoonpaySignatureRequestCodec = ImmutableMethodResults.ImmutableGetMoonpaySignatureRequestCodec;\nimport ImmutableGetMoonpaySellSignatureRequestCodec = ImmutableMethodResults.ImmutableGetMoonpaySellSignatureRequestCodec;\n\nexport type ImmutableXClientParams = {\n  publicApiUrl: string;\n  apiKey?: string;\n  signer?: Signer;\n  gasLimit?: string;\n  gasPrice?: string;\n  starkContractAddress?: string;\n  registrationContractAddress?: string;\n  enableDebug?: boolean;\n};\n\nexport const V2 = 'v2';\n\n/**\n * Immutable X REST API Client\n */\nexport class ImmutableXClient {\n  private agent: https.Agent;\n\n  private requests: RequestClient;\n\n  constructor(\n    private publicApiUrl: string,\n    private wallet: ImmutableXWallet,\n    private contractAddress: EthAddress,\n    private registrationContractAddress: EthAddress,\n    private _address: EthAddress,\n    private _starkPublicKey: HexadecimalString,\n    private enableDebug: boolean = false,\n    private readonly apiKey?: string,\n  ) {\n    this.agent = new https.Agent();\n    this.requests = new RequestClient(publicApiUrl, enableDebug, apiKey);\n    autoBind(this);\n  }\n\n  public static buildF(\n    params: ImmutableXClientParams,\n  ): TE.TaskEither<Error, ImmutableXClient> {\n    return taskEitherWithError(() => ImmutableXClient.build(params));\n  }\n\n  public async getERC20Balance(\n    owner: string,\n    contractAddress: string,\n  ): Promise<string> {\n    return this.wallet.getBalance(owner, contractAddress);\n  }\n\n  public async getERC20Allowance(\n    contractAddress: string,\n    owner: string,\n    spender?: string,\n  ): Promise<string> {\n    const allowance = await this.wallet.getAllowance(\n      contractAddress,\n      owner,\n      spender ?? this.contractAddress,\n    );\n    return allowance.toString();\n  }\n\n  public async hasERC20Allowance(\n    contractAddress: string,\n    amount: string | BigNumber,\n    owner: string,\n    spender?: string,\n  ): Promise<boolean> {\n    const allowance = await this.wallet.getAllowance(\n      contractAddress,\n      owner,\n      spender ?? this.contractAddress,\n    );\n    return allowance.gte(BigNumber.from(amount));\n  }\n\n  public static async build({\n    publicApiUrl,\n    signer,\n    starkContractAddress,\n    registrationContractAddress,\n    gasLimit,\n    gasPrice,\n    enableDebug = false,\n    apiKey,\n  }: ImmutableXClientParams) {\n    if (signer && starkContractAddress && registrationContractAddress) {\n      const parsedGasLimit = gasLimit ? BigNumber.from(gasLimit) : undefined;\n      const parsedGasPrice = gasPrice ? BigNumber.from(gasPrice) : undefined;\n      const wallet = await ImmutableXWallet.build({\n        publicApiUrl,\n        signer,\n        gasLimit: parsedGasLimit,\n        gasPrice: parsedGasPrice,\n      });\n\n      const contractAddressT = valueOrThrow(\n        EthAddress.decode(starkContractAddress),\n      );\n      const registrationContractAddressT = valueOrThrow(\n        EthAddress.decode(registrationContractAddress),\n      );\n      const starkPublicKey = valueOrThrow(\n        HexadecimalString.decode(wallet.controller.starkPublicKey),\n      );\n      const address = await wallet.controller.getAddress();\n      return new ImmutableXClient(\n        publicApiUrl,\n        wallet,\n        contractAddressT,\n        registrationContractAddressT,\n        address,\n        starkPublicKey,\n        enableDebug,\n        apiKey,\n      );\n    }\n    return new ImmutableXClient(\n      publicApiUrl,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n    );\n  }\n\n  public get address() {\n    return this._address;\n  }\n\n  public get starkPublicKey() {\n    return this._starkPublicKey;\n  }\n\n  public buildOptions(): AxiosRequestConfig {\n    const options: AxiosRequestConfig = {\n      baseURL: this.publicApiUrl,\n      httpsAgent: this.agent,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    // If provided, add our api key to all request headers.\n    if (this.apiKey) {\n      options.headers['x-api-key'] = this.apiKey;\n    }\n    return options;\n  }\n\n  private replaceApiVersion(path: string, version: string): string {\n    return path.replace(/\\/v[0-9]+$/, `/${version}`);\n  }\n\n  private get<T>(\n    path: string,\n    decode: (x: any) => E.Either<Errors, T>,\n    version?: string,\n  ): TE.TaskEither<Error, T> {\n    const options = this.buildOptions();\n\n    if (version && options.baseURL) {\n      options.baseURL = this.replaceApiVersion(options.baseURL, version);\n    }\n\n    return pipe(\n      taskEitherWithError(() => axios.get(`${path}`, options)),\n      TE.chain(r =>\n        pipe(decode(r.data), E.mapLeft(errorsToError), TE.fromEither),\n      ),\n    );\n  }\n\n  private post<T>(\n    path: string,\n    data: any,\n    decode: (x: any) => E.Either<Errors, T>,\n    version?: string,\n  ): TE.TaskEither<Error, T> {\n    const options = this.buildOptions();\n\n    if (version && options.baseURL) {\n      options.baseURL = this.replaceApiVersion(options.baseURL, version);\n    }\n\n    return pipe(\n      taskEitherWithError(() => axios.post(`${path}`, data, options)),\n      TE.chain(r =>\n        pipe(decode(r.data), E.mapLeft(errorsToError), TE.fromEither),\n      ),\n    );\n  }\n\n  private delete<T>(\n    path: string,\n    data: any,\n    decode: (x: any) => E.Either<Errors, T>,\n  ): TE.TaskEither<Error, T> {\n    return pipe(\n      taskEitherWithError(() =>\n        axios.delete(`${path}`, {\n          ...this.buildOptions(),\n          data,\n        }),\n      ),\n      TE.chain(r =>\n        pipe(decode(r.data), E.mapLeft(errorsToError), TE.fromEither),\n      ),\n    );\n  }\n\n  public registerImxF({\n    etherKey,\n    starkPublicKey,\n  }: ImmutableMethodParams.ImmutableRegisterParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableRegisterResult\n  > {\n    let verifyEth = false;\n    const currentTime = Math.round(new Date().getTime() / 1000);\n\n    if (currentTime > 1633546800) {\n      // 1633546800 = Thursday, 7 October 2021 06:00:00 GMT+11:00\n      verifyEth = true;\n    }\n\n    if (!verifyEth) {\n      return pipe(\n        {\n          body: {\n            ether_key: etherKey.toLowerCase(),\n            stark_key: starkPublicKey,\n            nonce: 0,\n          },\n        },\n        TE.of,\n        TE.bind('signature', ({ body }) =>\n          this.wallet.controller.signUserRegistration({\n            etherKey: body.ether_key,\n            starkPublicKey: body.stark_key,\n            nonce: String(body.nonce),\n          }),\n        ),\n        TE.chain(({ signature, body }) => {\n          const data = JSON.stringify({\n            ...body,\n            stark_signature: signature,\n          });\n\n          return this.post(\n            'users',\n            data,\n            ImmutableMethodResults.ImmutableRegisterResultCodec.decode,\n          );\n        }),\n      );\n    }\n    return pipe(\n      {\n        body: {\n          ether_key: etherKey.toLowerCase(),\n          stark_key: starkPublicKey,\n          stark_signature: '',\n          eth_signature: '',\n        },\n      },\n      TE.of,\n      TE.bind('starkSignature', ({ body }) =>\n        this.wallet.controller.signUserRegistrationVerifyEth({\n          etherKey: body.ether_key,\n          starkPublicKey: body.stark_key,\n        }),\n      ),\n      TE.bind('ethSignature', () =>\n        taskEitherWithError(() =>\n          this.wallet.controller.signRaw(\n            'Only sign this key linking request from Immutable X',\n          ),\n        ),\n      ),\n      TE.chain(({ starkSignature, ethSignature, body }) => {\n        const data = JSON.stringify({\n          ...body,\n          stark_signature: starkSignature,\n          eth_signature: ethSignature,\n        });\n        return this.post(\n          'users',\n          data,\n          ImmutableMethodResults.ImmutableRegisterResultCodec.decode,\n        );\n      }),\n    );\n  }\n\n  public getUserF(\n    params: ImmutableMethodParams.ImmutableGetUserParams,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetUserResult> {\n    return this.get(\n      `users/${params.user.toLowerCase()}`,\n      ImmutableMethodResults.ImmutableGetUserResultCodec.decode,\n    );\n  }\n\n  public async getUser(params: ImmutableMethodParams.ImmutableGetUserParamsTS) {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetUserParamsCodec.decode,\n      this.getUserF,\n    );\n  }\n\n  public async registerImx(\n    params: ImmutableMethodParams.ImmutableRegisterParamsTS,\n  ) {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableRegisterParamsCodec.decode,\n      this.registerImxF,\n    );\n  }\n\n  public isRegisteredF(\n    params: ImmutableMethodParams.ImmutableGetUserParams,\n  ): TE.TaskEither<Error, boolean> {\n    return pipe(\n      this.getUserF(params),\n      TE.fold(\n        () => T.of(false),\n        () => T.of(true),\n      ),\n      T.chain(result => TE.of(result)),\n    );\n  }\n\n  public async isRegistered(\n    params: ImmutableMethodParams.ImmutableGetUserParamsTS,\n  ): Promise<boolean> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetUserParamsCodec.decode,\n      this.isRegisteredF,\n    );\n  }\n\n  public isRegisteredStarkF(starkPublicKey: string): T.Task<boolean> {\n    return pipe(\n      this.wallet.getEthKey(this.contractAddress, starkPublicKey),\n      TE.fold(\n        () => T.of(false),\n        () => T.of(true),\n      ),\n    );\n  }\n\n  public async isRegisteredStark(starkPublicKey: string): Promise<boolean> {\n    return this.isRegisteredStarkF(starkPublicKey)();\n  }\n\n  public registerF(\n    params: ImmutableMethodParams.ImmutableRegisterParams,\n  ): TE.TaskEither<Error, string> {\n    return pipe(\n      this.registerImxF(params),\n      TE.map(result => result.tx_hash),\n    );\n  }\n\n  public async register(\n    params: ImmutableMethodParams.ImmutableRegisterParamsTS,\n  ) {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableRegisterParamsCodec.decode,\n      this.registerF,\n    );\n  }\n\n  public registerStarkF({\n    etherKey,\n    starkPublicKey,\n    operatorSignature,\n  }: ImmutableMethodParams.ImmutableStarkRegisterParams): TE.TaskEither<\n    Error,\n    string\n  > {\n    return pipe(\n      this.wallet.controller.register({\n        contractAddress: this.contractAddress,\n        etherKey,\n        starkPublicKey,\n        operatorSignature,\n      }),\n      TE.chain(this.wallet.sendTransactionF),\n    );\n  }\n\n  public async registerStark(\n    params: ImmutableMethodParams.ImmutableStarkRegisterParamsTS,\n  ) {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableStarkRegisterParamsCodec.decode,\n      this.registerStarkF,\n    );\n  }\n\n  public getSignableRegistrationF({\n    etherKey,\n    starkPublicKey,\n  }: ImmutableMethodParams.ImmutableGetSignableRegistrationParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableGetSignableRegistrationResult\n  > {\n    const data = JSON.stringify({\n      ether_key: etherKey,\n      stark_key: starkPublicKey,\n    });\n    return this.post(\n      'signable-registration',\n      data,\n      ImmutableMethodResults.ImmutableGetSignableRegistrationResultCodec.decode,\n    );\n  }\n\n  public async getSignableRegistration(\n    params: ImmutableMethodParams.ImmutableGetSignableRegistrationParamsTS,\n  ) {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetSignableRegistrationParamsCodec.decode,\n      this.getSignableRegistrationF,\n    );\n  }\n\n  public mintNFTF({\n    tokenAddress,\n  }: ImmutableMethodParams.ImmutableMintNFTParams): TE.TaskEither<\n    Error,\n    string\n  > {\n    return pipe(\n      this.wallet.controller.mintNFT(tokenAddress),\n      TE.chain(this.wallet.sendTransactionF),\n    );\n  }\n\n  public async mintNFT(\n    params: ImmutableMethodParams.ImmutableMintNFTParamsTS,\n  ): Promise<string> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableMintNFTParamsCodec.decode,\n      this.mintNFTF,\n    );\n  }\n\n  public approveNFTF(\n    params: ImmutableMethodParams.ImmutableStarkApproveNFTParams,\n  ): TE.TaskEither<Error, string> {\n    return pipe(\n      this.wallet.controller.approveNFT({\n        ...params,\n        contractAddress: this.contractAddress,\n      }),\n      TE.chain(this.wallet.sendTransactionF),\n    );\n  }\n\n  public async approveNFT(\n    params: ImmutableMethodParams.ImmutableStarkApproveNFTParamsTS,\n  ): Promise<string> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableStarkApproveNFTParamsCodec.decode,\n      this.approveNFTF,\n    );\n  }\n\n  public approveERC20F(\n    params: ImmutableMethodParams.ImmutableStarkApproveERC20Params,\n  ): TE.TaskEither<Error, string> {\n    return pipe(\n      this.wallet.controller.approveERC20({\n        ...params,\n        contractAddress: this.contractAddress,\n      }),\n      TE.chain(this.wallet.sendTransactionF),\n    );\n  }\n\n  public async approveERC20(\n    params: ImmutableMethodParams.ImmutableStarkApproveERC20ParamsTS,\n  ): Promise<string> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableStarkApproveERC20ParamsCodec.decode,\n      this.approveERC20F,\n    );\n  }\n\n  public depositF({\n    user,\n    token,\n    quantity,\n  }: ImmutableMethodParams.ImmutableGetSignableDepositParams): TE.TaskEither<\n    Error,\n    string\n  > {\n    const data = JSON.stringify({\n      user: user.toLowerCase(),\n      token: {\n        type: token.type,\n        data: this.getTokenBody(token),\n      },\n      amount: quantity.toString(),\n    });\n\n    return pipe(\n      TE.bindTo('signableDepositResult')(\n        this.post(\n          'signable-deposit-details',\n          data,\n          ImmutableMethodResults.ImmutableGetSignableDepositResultCodec.decode,\n        ),\n      ),\n      TE.bind('isRegistered', () =>\n        TE.fromTask(this.isRegisteredStarkF(this.starkPublicKey)),\n      ),\n      TE.chain(({ isRegistered, signableDepositResult }) =>\n        isRegistered\n          ? pipe(\n              StarkMethodParams.StarkDepositParamsCodec.decode({\n                contractAddress: this.contractAddress,\n                starkPublicKey: signableDepositResult.stark_key,\n                assetId: signableDepositResult.asset_id,\n                quantity,\n                quantizedAmount: signableDepositResult.amount,\n                token,\n                vaultId: signableDepositResult.vault_id.toString(),\n              }),\n              E.mapLeft(errorsToError),\n              TE.fromEither,\n              TE.chain(this.wallet.controller.depositF),\n            )\n          : token.type === ETHTokenType.ETH // only eth can register and deposit in 1 step\n          ? pipe(\n              this.getSignableRegistrationF({\n                etherKey: user,\n                starkPublicKey: this.starkPublicKey,\n              }),\n              TE.chain(signableRegistrationResult =>\n                pipe(\n                  RegistrationMethodParams.RegisterAndDepositParamsCodec.decode(\n                    {\n                      registrationContractAddress:\n                        this.registrationContractAddress,\n                      starkPublicKey: signableDepositResult.stark_key,\n                      assetId: signableDepositResult.asset_id,\n                      quantity,\n                      quantizedAmount: signableDepositResult.amount,\n                      token,\n                      vaultId: signableDepositResult.vault_id.toString(),\n                      etherKey: user,\n                      operatorSignature:\n                        signableRegistrationResult.operator_signature,\n                    },\n                  ),\n                  E.mapLeft(errorsToError),\n                  TE.fromEither,\n                  TE.chain(this.wallet.controller.registerAndDepositF),\n                ),\n              ),\n            )\n          : TE.left(new Error('User unregistered')),\n      ),\n      TE.chain(this.wallet.sendTransactionF),\n    );\n  }\n\n  public async deposit(\n    params: ImmutableMethodParams.ImmutableGetSignableDepositParamsTS,\n  ): Promise<string> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetSignableDepositParamsCodec.decode,\n      this.depositF,\n    );\n  }\n\n  public async depositCancel(\n    starkPublicKey: string,\n    token: Token,\n    vaultId: string,\n  ) {\n    const assetID = getAssetID(token).val;\n    const nonce = parseInt(\n      (await this.getLastAvailableNonce(starkPublicKey)).Nonce,\n    );\n    const body = {\n      stark_key: starkPublicKey,\n      asset_id: assetID,\n      vault_id: parseInt(vaultId),\n      nonce,\n    };\n    const signature = await this.wallet.controller.signStark(body);\n    const data = JSON.stringify({\n      ...body,\n      stark_signature: signature,\n    });\n\n    try {\n      const res = await axios.post('cancel-deposit', data, this.buildOptions());\n      return res.data;\n    } catch (err) {\n      throw formatError(err);\n    }\n  }\n\n  public async depositReclaim(\n    starkPublicKey: string,\n    token: Token,\n    vaultId: string,\n  ) {\n    const assetID = getAssetID(token).val;\n    const nonce = parseInt(\n      (await this.getLastAvailableNonce(starkPublicKey)).Nonce,\n    );\n    const body = {\n      stark_key: starkPublicKey,\n      asset_id: assetID,\n      vault_id: parseInt(vaultId),\n      nonce,\n    };\n    const signature = await this.wallet.controller.signStark(body);\n    const data = JSON.stringify({\n      ...body,\n      stark_signature: signature,\n    });\n\n    try {\n      const res = await axios.post(\n        'reclaim-deposit',\n        data,\n        this.buildOptions(),\n      );\n      return res.data;\n    } catch (err) {\n      throw formatError(err);\n    }\n  }\n\n  public prepareWithdrawalF({\n    user,\n    token,\n    quantity,\n  }: ImmutableMethodParams.ImmutablePrepareWithdrawalParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableWithdrawalResult\n  > {\n    return pipe(\n      TE.bindTo('signableWithdrawalResult')(\n        this.post(\n          'signable-withdrawal-details',\n          JSON.stringify({\n            user: user.toLowerCase(),\n            token: {\n              type:\n                token.type.toUpperCase() === 'MINTABLE_ERC721'\n                  ? ERC721TokenType.ERC721\n                  : token.type,\n              data: this.getTokenBody(token),\n            },\n            amount: quantity.toString(), // unquantized amount\n          }),\n          ImmutableMethodResults.ImmutableGetSignableWithdrawalResultCodec\n            .decode,\n        ),\n      ),\n      TE.bind('signature', ({ signableWithdrawalResult }) =>\n        this.wallet.controller.signWithdraw(\n          signableWithdrawalResult.stark_key,\n          String(signableWithdrawalResult.vault_id),\n          token,\n          signableWithdrawalResult.asset_id,\n          signableWithdrawalResult.amount, // quantized amount\n          String(signableWithdrawalResult.nonce),\n        ),\n      ),\n      TE.bind('result', ({ signableWithdrawalResult, signature }) =>\n        this.post(\n          'withdrawals',\n          JSON.stringify({\n            stark_key: signableWithdrawalResult.stark_key,\n            amount: quantity.toString(), // unquantized amount\n            asset_id: signableWithdrawalResult.asset_id,\n            vault_id: signableWithdrawalResult.vault_id,\n            nonce: signableWithdrawalResult.nonce,\n            stark_signature: signature,\n          }),\n          ImmutableMethodResults.ImmutableWithdrawalResultCodec.decode,\n        ),\n      ),\n      TE.map(({ result }) => result),\n    );\n  }\n\n  public prepareWithdrawal(\n    params: ImmutableMethodParams.ImmutablePrepareWithdrawalParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableWithdrawalResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutablePrepareWithdrawalParamsCodec.decode,\n      this.prepareWithdrawalF,\n    );\n  }\n\n  public processMintableToken(\n    mintableToken: ImmutableMethodResults.ImmutableGetMintableTokenResult,\n    token: ERC721Token,\n  ): MintableERC721Token {\n    return {\n      type: MintableERC721TokenType.MINTABLE_ERC721,\n      data: {\n        id: mintableToken.client_token_id, // link.id  == client_token_id\n        blueprint: mintableToken.blueprint,\n        tokenAddress: token.data.tokenAddress,\n      },\n    };\n  }\n\n  public completeWithdrawalF({\n    starkPublicKey,\n    token,\n  }: ImmutableMethodParams.ImmutableCompleteWithdrawalParams): TE.TaskEither<\n    Error,\n    string\n  > {\n    return pipe(\n      TE.bindTo('processedToken')(\n        TE.fromTask<Error, Token>(\n          token.type === ERC721TokenType.ERC721\n            ? pipe(\n                this.getMintableTokenF({\n                  tokenAddress: token.data.tokenAddress,\n                  tokenId: token.data.tokenId,\n                }),\n                TE.fold<\n                  Error,\n                  ImmutableMethodResults.ImmutableGetMintableTokenResult,\n                  Token\n                >(\n                  _e => T.of(token),\n                  mintableToken =>\n                    T.of(this.processMintableToken(mintableToken, token)),\n                ),\n              )\n            : T.of(token),\n        ),\n      ),\n      TE.bind('isRegistered', () =>\n        TE.fromTask(this.isRegisteredStarkF(starkPublicKey)),\n      ),\n      TE.chain(({ isRegistered, processedToken }) =>\n        isRegistered\n          ? pipe(\n              this.wallet.controller.withdrawal(\n                this.contractAddress,\n                starkPublicKey,\n                processedToken,\n              ),\n            )\n          : pipe(\n              this.getSignableRegistrationF({\n                etherKey: this.address,\n                starkPublicKey: this.starkPublicKey,\n              }),\n              TE.chain(signableRegistrationResult =>\n                processedToken.type === ETHTokenType.ETH // only eth can register and withdraw in 1 step\n                  ? this.wallet.controller.registerAndWithdraw({\n                      registrationContractAddress:\n                        this.registrationContractAddress,\n                      starkPublicKey,\n                      token: processedToken,\n                      etherKey: this.address,\n                      operatorSignature:\n                        signableRegistrationResult.operator_signature,\n                    })\n                  : TE.left(new Error('User unregistered')),\n              ),\n            ),\n      ),\n      TE.chain(this.wallet.sendTransactionF),\n    );\n  }\n\n  public completeWithdrawal(\n    params: ImmutableMethodParams.ImmutableCompleteWithdrawalParamsTS,\n  ): Promise<string> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableCompleteWithdrawalParamsCodec.decode,\n      this.completeWithdrawalF,\n    );\n  }\n\n  public transferF({\n    sender,\n    token,\n    quantity,\n    receiver,\n  }: ImmutableMethodParams.ImmutableTransferParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableTransferResult\n  > {\n    return pipe(\n      TE.bindTo('signableTransferResult')(\n        this.post(\n          'signable-transfer-details',\n          JSON.stringify({\n            sender: sender.toLowerCase(),\n            token: {\n              type: token.type,\n              data: this.getTokenBody(token),\n            },\n            amount:\n              token.type === ERC721TokenType.ERC721 ? '1' : quantity.toString(),\n            receiver: receiver.toLowerCase(),\n          }),\n          ImmutableMethodResults.ImmutableGetSignableTransferResultCodec.decode,\n        ),\n      ),\n      TE.bind('signature', ({ signableTransferResult }) => {\n        return this.wallet.controller.transfer(\n          {\n            starkPublicKey: signableTransferResult.sender_stark_key,\n            vaultId: signableTransferResult.sender_vault_id,\n          },\n          {\n            starkPublicKey: signableTransferResult.receiver_stark_key,\n            vaultId: signableTransferResult.receiver_vault_id,\n          },\n          token,\n          signableTransferResult.asset_id,\n          signableTransferResult.amount,\n          String(signableTransferResult.nonce),\n          String(signableTransferResult.expiration_timestamp),\n        );\n      }),\n      TE.bind('result', ({ signableTransferResult, signature }) =>\n        this.post(\n          'transfers',\n          JSON.stringify({\n            sender_stark_key: signableTransferResult.sender_stark_key,\n            sender_vault_id: signableTransferResult.sender_vault_id,\n            receiver_stark_key: signableTransferResult.receiver_stark_key,\n            receiver_vault_id: signableTransferResult.receiver_vault_id,\n            amount: signableTransferResult.amount.toString(),\n            asset_id: signableTransferResult.asset_id,\n            expiration_timestamp: signableTransferResult.expiration_timestamp,\n            nonce: signableTransferResult.nonce,\n            stark_signature: signature,\n          }),\n          ImmutableMethodResults.ImmutableTransferResultCodec.decode,\n        ),\n      ),\n      TE.map(({ result }) => result),\n    );\n  }\n\n  public transfer(\n    params: ImmutableMethodParams.ImmutableTransferParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableTransferResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableTransferParamsCodec.decode,\n      this.transferF,\n    );\n  }\n\n  public burnF({\n    sender,\n    token,\n    quantity,\n  }: ImmutableMethodParams.ImmutableBurnParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableBurnResult\n  > {\n    return pipe(\n      TE.bindTo('signableTransferResult')(\n        this.post(\n          'signable-transfer-details',\n          JSON.stringify({\n            sender: sender.toLowerCase(),\n            token: {\n              type: token.type,\n              data: this.getTokenBody(token),\n            },\n            amount:\n              token.type === ERC721TokenType.ERC721 ? '1' : quantity.toString(),\n            receiver: BurnAddress.BurnEthAddress,\n          }),\n          ImmutableMethodResults.ImmutableGetSignableTransferResultCodec.decode,\n        ),\n      ),\n      TE.bind('signature', ({ signableTransferResult }) => {\n        return this.wallet.controller.transfer(\n          {\n            starkPublicKey: signableTransferResult.sender_stark_key,\n            vaultId: signableTransferResult.sender_vault_id,\n          },\n          {\n            starkPublicKey: signableTransferResult.receiver_stark_key,\n            vaultId: signableTransferResult.receiver_vault_id,\n          },\n          token,\n          signableTransferResult.asset_id,\n          signableTransferResult.amount,\n          String(signableTransferResult.nonce),\n          String(signableTransferResult.expiration_timestamp),\n        );\n      }),\n      TE.bind('result', ({ signableTransferResult, signature }) =>\n        this.post(\n          'transfers',\n          JSON.stringify({\n            sender_stark_key: signableTransferResult.sender_stark_key,\n            sender_vault_id: signableTransferResult.sender_vault_id,\n            receiver_stark_key: signableTransferResult.receiver_stark_key,\n            receiver_vault_id: signableTransferResult.receiver_vault_id,\n            amount: signableTransferResult.amount.toString(),\n            asset_id: signableTransferResult.asset_id,\n            expiration_timestamp: signableTransferResult.expiration_timestamp,\n            nonce: signableTransferResult.nonce,\n            stark_signature: signature,\n          }),\n          ImmutableMethodResults.ImmutableTransferResultCodec.decode,\n        ),\n      ),\n      TE.map(({ result }) => result),\n    );\n  }\n\n  public burn(\n    params: ImmutableMethodParams.ImmutableBurnParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableBurnResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableBurnParamsCodec.decode,\n      this.burnF,\n    );\n  }\n\n  public signMessage(\n    message: ImmutableMethodParams.ImmutableSignParams,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableSignResult> {\n    return pipe(\n      message,\n      TE.of,\n      TE.bind('ethSignature', () =>\n        taskEitherWithError(() => this.wallet.controller.signRaw(message)),\n      ),\n    );\n  }\n\n  public mintF(\n    params: ImmutableMethodParams.ImmutableOffchainMintParams,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableOffchainMintResults> {\n    console.warn(\n      'mint will be deprecated. Please prepare for mint v2 containing fee fields',\n    );\n    return pipe(\n      params.mints,\n      A.traverse(TE.taskEither)((mint: MintBody) =>\n        pipe(\n          mint.tokens,\n          A.map((token: MintableERC721Token) => ({\n            type: ERC721TokenType.ERC721,\n            data: {\n              id: token.data.id,\n              blueprint: token.data.blueprint,\n              token_address: token.data.tokenAddress,\n            },\n          })),\n          tokens => ({\n            result: {\n              ether_key: mint.etherKey.toLowerCase(),\n              tokens,\n              nonce: parseInt(mint.nonce),\n              auth_signature: '',\n            },\n          }),\n          TE.of,\n          TE.bind('auth_signature', ({ result }) =>\n            taskEitherWithError(() => this.wallet.controller.sign(result)),\n          ),\n          TE.map(({ result, auth_signature }) => ({\n            user: result.ether_key,\n            tokens: result.tokens,\n            nonce: parseInt(mint.nonce),\n            auth_signature,\n          })),\n        ),\n      ),\n      TE.chain(mints =>\n        this.post(\n          'mints',\n          JSON.stringify({\n            mints,\n          }),\n          ImmutableMethodResults.ImmutableOffchainMintResultsCodec.decode,\n        ),\n      ),\n    );\n  }\n\n  public mint(\n    params: ImmutableMethodParams.ImmutableOffchainMintParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableOffchainMintResults> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableOffchainMintParamsCodec.decode,\n      this.mintF,\n    );\n  }\n\n  // TODO: remove V2 label when V1 is deprecated\n  public mintV2F(\n    params: ImmutableMethodParams.ImmutableOffchainMintV2Params,\n  ): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableOffchainMintV2Results\n  > {\n    return pipe(\n      params,\n      A.traverse(TE.taskEither)((mint: MintV2Body) =>\n        pipe(\n          mint.users,\n          // reshape the data to be the same shape as in imx-engine for auth_signature\n          A.map(user => ({\n            ether_key: user.etherKey.toLowerCase(),\n            tokens: user.tokens.map(token => ({\n              id: token.id,\n              blueprint: token.blueprint,\n              royalties: token.royalties?.map(fee => ({\n                recipient: fee.recipient.toLowerCase(),\n                percentage: fee.percentage,\n              })),\n            })),\n          })),\n          // ensure that the order of the payload to be signed is the same as engine\n          users => ({\n            result: {\n              contract_address: mint.contractAddress,\n              royalties: mint.royalties?.map(fee => ({\n                recipient: fee.recipient,\n                percentage: fee.percentage,\n              })),\n              users,\n              auth_signature: '',\n            },\n          }),\n          TE.of,\n          TE.bind('auth_signature', ({ result }) =>\n            taskEitherWithError(() => this.wallet.controller.sign(result)),\n          ),\n          TE.map(({ result, auth_signature }) => ({\n            // same shape as public api\n            users: result.users.map(user => ({\n              user: user.ether_key,\n              tokens: user.tokens,\n            })),\n            royalties: mint.royalties,\n            contract_address: mint.contractAddress,\n            auth_signature,\n          })),\n        ),\n      ),\n      TE.chain(mints =>\n        this.post(\n          'mints',\n          JSON.stringify(mints),\n          ImmutableMethodResults.ImmutableOffchainMintV2ResultsCodec.decode,\n          'v2',\n        ),\n      ),\n    );\n  }\n\n  // TODO: remove V2 label when V1 is deprecated\n  public mintV2(\n    params: ImmutableMethodParams.ImmutableOffchainMintV2ParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableOffchainMintV2Results> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableOffchainMintV2ParamsCodec.decode,\n      this.mintV2F,\n    );\n  }\n\n  // REMOVE IN https://immutable.atlassian.net/browse/IMX-4526\n  public mintV2Testing(\n    params: ImmutableMethodParams.ImmutableOffchainMintV2ParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableOffchainMintV2Results> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableOffchainMintV2ParamsCodec.decode,\n      this.mintV2F,\n    );\n  }\n\n  public calculateMakerOrderAmountsF(\n    params: ImmutableMethodParams.ImmutableGetSignableOrderParams,\n  ): TE.TaskEither<\n    Error,\n    {\n      amountSell: PositiveBigNumber;\n      amountBuy: PositiveBigNumber;\n    }\n  > {\n    let nftToken;\n    let baseAmount;\n\n    if (params.tokenSell.type === ERC721TokenType.ERC721) {\n      nftToken = params.tokenSell;\n      baseAmount = params.amountBuy;\n    } else if (params.tokenBuy.type === ERC721TokenType.ERC721) {\n      nftToken = params.tokenBuy;\n      baseAmount = params.amountSell;\n    } else {\n      return TE.of({\n        amountSell: params.amountSell,\n        amountBuy: params.amountBuy,\n      });\n    }\n\n    const { fees: makerFees } = params;\n\n    const decimals = 2;\n    const multiplier = Math.pow(10, decimals);\n\n    return pipe(\n      this.getAssetF({\n        address: nftToken.data.tokenAddress,\n        id: nftToken.data.tokenId,\n        include_fees: true,\n      }),\n      TE.bind('totalFeeAmount', ({ fees: royaltyFees }) => {\n        let totalFeeAmount = BigNumber.from(0);\n\n        const fees: FeeType[] = [];\n\n        if (royaltyFees?.length) {\n          fees.push(\n            ...royaltyFees.map(fee => ({\n              recipient: fee.address,\n              percentage: fee.percentage,\n            })),\n          );\n        }\n\n        if (makerFees?.length) {\n          fees.push(...makerFees);\n        }\n\n        fees?.forEach(fee => {\n          // toFixed needed to prevent floating point number precision issues.\n          // e.g. 4.56 * 100 = 455.99999999999994 in JS\n          const feeAmount = Math.floor(\n            parseFloat((fee.percentage * multiplier).toFixed(decimals)),\n          ).toFixed();\n          totalFeeAmount = totalFeeAmount.add(\n            BigNumber.from(feeAmount).mul(baseAmount),\n          );\n        });\n\n        return TE.of(totalFeeAmount.div(100 * multiplier));\n      }),\n      TE.map(({ totalFeeAmount }) => {\n        let { amountSell } = params;\n        let { amountBuy } = params;\n\n        if (params.tokenSell.type === ERC721TokenType.ERC721) {\n          amountBuy = valueOrThrow(\n            PositiveBigNumber.decode(amountBuy.add(totalFeeAmount)),\n          );\n        } else {\n          amountSell = valueOrThrow(\n            PositiveBigNumber.decode(amountSell.add(totalFeeAmount)),\n          );\n        }\n\n        return {\n          amountSell,\n          amountBuy,\n        };\n      }),\n    );\n  }\n\n  public createOrderRequestF({\n    user,\n    tokenSell,\n    tokenBuy,\n    amountSell,\n    amountBuy,\n    include_fees = true,\n    fees,\n    expiration_timestamp,\n  }: ImmutableMethodParams.ImmutableGetSignableOrderParams): TE.TaskEither<\n    Error,\n    {\n      signableOrderResult: ImmutableMethodResults.ImmutableGetSignableOrderResult;\n      sellParams: OrderParams;\n      buyParams: OrderParams;\n      signature: string;\n    }\n  > {\n    return pipe(\n      TE.bindTo('signableOrderResult')(\n        this.post(\n          'signable-order-details',\n          JSON.stringify({\n            user: user.toLowerCase(),\n            token_sell: {\n              type: tokenSell.type,\n              data: this.getTokenBody(tokenSell),\n            },\n            amount_sell: amountSell.toString(),\n            token_buy: {\n              type: tokenBuy.type,\n              data: this.getTokenBody(tokenBuy),\n            },\n            amount_buy: amountBuy.toString(),\n            include_fees,\n            fees: this.formatFeesForRequest(fees),\n            expiration_timestamp,\n          }),\n          ImmutableMethodResults.ImmutableGetSignableOrderResultCodec.decode,\n        ),\n      ),\n      TE.bind('feeInfo', ({ signableOrderResult }) =>\n        signableOrderResult.fee_info\n          ? TE.of({\n              feeToken:\n                signableOrderResult.fee_info.asset_id ===\n                signableOrderResult.asset_id_sell\n                  ? signableOrderResult.asset_id_sell\n                  : signableOrderResult.asset_id_buy,\n              feeVaultId: signableOrderResult.fee_info.source_vault_id,\n              feeLimit: signableOrderResult.fee_info.fee_limit,\n            })\n          : TE.of(null),\n      ),\n      TE.bind('sellParams', ({ signableOrderResult }) => {\n        const amountSell = include_fees\n          ? signableOrderResult.amount_sell\n          : tokenQuantizedAmount(tokenSell, signableOrderResult.amount_sell);\n        return TE.of({\n          vaultId: signableOrderResult.vault_id_sell,\n          token: tokenSell,\n          quantity: amountSell,\n        });\n      }),\n      TE.bind('buyParams', ({ signableOrderResult }) => {\n        const amountBuy = include_fees\n          ? signableOrderResult.amount_buy\n          : tokenQuantizedAmount(tokenBuy, signableOrderResult.amount_buy);\n        return TE.of({\n          vaultId: signableOrderResult.vault_id_buy,\n          token: tokenBuy,\n          quantity: amountBuy,\n        });\n      }),\n      TE.bind(\n        'signature',\n        ({ signableOrderResult, sellParams, buyParams, feeInfo }) =>\n          include_fees &&\n          feeInfo &&\n          buyParams.token.type === ERC721TokenType.ERC721\n            ? this.wallet.controller.createOrderWithFee(\n                signableOrderResult.stark_key,\n                sellParams,\n                buyParams,\n                signableOrderResult.asset_id_sell,\n                signableOrderResult.asset_id_buy,\n                signableOrderResult.nonce,\n                signableOrderResult.expiration_timestamp,\n                feeInfo,\n              )\n            : this.wallet.controller.createOrder(\n                signableOrderResult.stark_key,\n                sellParams,\n                buyParams,\n                signableOrderResult.asset_id_sell,\n                signableOrderResult.asset_id_buy,\n                signableOrderResult.nonce,\n                signableOrderResult.expiration_timestamp,\n              ),\n      ),\n      TE.map(({ signableOrderResult, sellParams, buyParams, signature }) => ({\n        signableOrderResult,\n        sellParams,\n        buyParams,\n        signature,\n      })),\n    );\n  }\n\n  private formatFeesForRequest(\n    fees: FeeType[] | undefined,\n  ): { fee_percentage: number; address: string }[] | undefined {\n    return fees?.map(fee => ({\n      address: fee.recipient,\n      fee_percentage: fee.percentage,\n    }));\n  }\n\n  private formatAuxiliaryFeesForQueryString(\n    auxiliaryFees: FeeType[] | undefined,\n  ):\n    | {\n        auxiliary_fee_recipients: string;\n        auxiliary_fee_percentages: string;\n      }\n    | undefined {\n    if (!auxiliaryFees?.length) return undefined;\n\n    return {\n      auxiliary_fee_recipients: auxiliaryFees\n        .map(fee => fee.recipient)\n        .join(','),\n      auxiliary_fee_percentages: auxiliaryFees\n        .map(fee => fee.percentage)\n        .join(','),\n    };\n  }\n\n  public createOrderF({\n    user,\n    tokenSell,\n    tokenBuy,\n    amountSell,\n    amountBuy,\n    include_fees = true,\n    fees,\n    expiration_timestamp,\n  }: ImmutableMethodParams.ImmutableGetSignableOrderParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableCreateOrderResult\n  > {\n    return pipe(\n      include_fees\n        ? this.calculateMakerOrderAmountsF({\n            user,\n            tokenSell,\n            tokenBuy,\n            amountSell,\n            amountBuy,\n            include_fees,\n            fees,\n          })\n        : TE.of({ amountSell, amountBuy }),\n      TE.chain(feeInclusiveAmounts =>\n        this.createOrderRequestF({\n          user,\n          tokenSell,\n          tokenBuy,\n          amountSell: feeInclusiveAmounts.amountSell,\n          amountBuy: feeInclusiveAmounts.amountBuy,\n          include_fees,\n          fees,\n          expiration_timestamp,\n        }),\n      ),\n      TE.bind(\n        'result',\n        ({ signableOrderResult, sellParams, buyParams, signature }) =>\n          this.post(\n            'orders',\n            JSON.stringify({\n              stark_key: signableOrderResult.stark_key,\n              amount_sell: signableOrderResult.amount_sell.toString(),\n              asset_id_sell: signableOrderResult.asset_id_sell,\n              vault_id_sell: sellParams.vaultId,\n              amount_buy: signableOrderResult.amount_buy.toString(),\n              asset_id_buy: signableOrderResult.asset_id_buy,\n              vault_id_buy: buyParams.vaultId,\n              expiration_timestamp: signableOrderResult.expiration_timestamp,\n              nonce: signableOrderResult.nonce,\n              stark_signature: signature,\n              include_fees,\n              fees: this.formatFeesForRequest(fees),\n            }),\n            ImmutableMethodResults.ImmutableCreateOrderResultCodec.decode,\n          ),\n      ),\n      TE.map(({ result }) => result),\n    );\n  }\n\n  public createOrder(\n    params: ImmutableMethodParams.ImmutableGetSignableOrderParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableCreateOrderResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetSignableOrderParamsCodec.decode,\n      this.createOrderF,\n    );\n  }\n\n  public cancelOrderF(\n    orderId: ImmutableMethodParams.ImmutableCancelOrderParamsTS,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableCancelOrderResult> {\n    return pipe(\n      orderId.toString(),\n      this.wallet.controller.cancelOrder,\n      TE.map(signature =>\n        JSON.stringify({\n          stark_signature: signature,\n        }),\n      ),\n      TE.chain(data =>\n        this.delete(\n          `/orders/${orderId}`,\n          data,\n          ImmutableMethodResults.ImmutableCancelOrderResultCodec.decode,\n        ),\n      ),\n    );\n  }\n\n  public cancelOrder(\n    params: ImmutableMethodParams.ImmutableCancelOrderParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableCancelOrderResult> {\n    return decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableCancelOrderParamsCodec.decode,\n      this.cancelOrderF,\n    );\n  }\n\n  public createTradeF({\n    user,\n    tokenSell,\n    tokenBuy,\n    amountSell,\n    amountBuy,\n    orderId,\n    include_fees = true,\n    fees,\n  }: ImmutableMethodParams.ImmutableGetSignableTradeParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableCreateTradeResult\n  > {\n    return pipe(\n      this.createOrderRequestF({\n        user,\n        tokenSell,\n        tokenBuy,\n        amountSell,\n        amountBuy,\n        include_fees,\n        fees,\n      }),\n      TE.bind(\n        'result',\n        ({ signableOrderResult, sellParams, buyParams, signature }) => {\n          const feeInfo = signableOrderResult.fee_info && {\n            ...signableOrderResult.fee_info,\n            fee_limit: signableOrderResult.fee_info.fee_limit.toString(),\n          };\n          return this.post(\n            'trades',\n            JSON.stringify({\n              stark_key: signableOrderResult.stark_key,\n              amount_sell: signableOrderResult.amount_sell.toString(),\n              asset_id_sell: signableOrderResult.asset_id_sell,\n              vault_id_sell: sellParams.vaultId,\n              amount_buy: signableOrderResult.amount_buy.toString(),\n              asset_id_buy: signableOrderResult.asset_id_buy,\n              vault_id_buy: buyParams.vaultId,\n              expiration_timestamp: signableOrderResult.expiration_timestamp,\n              nonce: signableOrderResult.nonce,\n              stark_signature: signature,\n              order_id: orderId,\n              fee_info: feeInfo,\n              include_fees,\n              fees: this.formatFeesForRequest(fees),\n            }),\n            ImmutableMethodResults.ImmutableCreateTradeResultCodec.decode,\n          );\n        },\n      ),\n      TE.map(({ result }) => result),\n    );\n  }\n\n  public createTrade(\n    params: ImmutableMethodParams.ImmutableGetSignableTradeParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableCreateTradeResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetSignableTradeParamsCodec.decode,\n      this.createTradeF,\n    );\n  }\n\n  public getTokenF(\n    params: ImmutableMethodParams.ImmutableGetTokenParams,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetTokenResult> {\n    return this.get(\n      // NOTE: Only 'eth' can be queried without address!\n      `tokens/${params.tokenAddress?.toString() || 'eth'}`,\n      ImmutableMethodResults.ImmutableGetTokenResultCodec.decode,\n    );\n  }\n\n  public async getToken(\n    params: ImmutableMethodParams.ImmutableGetTokenParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableGetTokenResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetTokenParamsCodec.decode,\n      this.getTokenF,\n    );\n  }\n\n  public listTokensF(\n    params: ImmutableMethodParams.ImmutableListTokensParams,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableListTokensResult> {\n    const url = queryString.stringifyUrl(\n      { url: 'tokens', query: params },\n      { arrayFormat: 'comma' },\n    );\n    return this.get(\n      url,\n      ImmutableMethodResults.ImmutableListTokensResultCodec.decode,\n    );\n  }\n\n  public async listTokens(\n    params: ImmutableMethodParams.ImmutableListTokensParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableListTokensResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableListTokensParamsCodec.decode,\n      this.listTokensF,\n    );\n  }\n\n  // TODO: remove once v1 balance endpoint is deprecated, this is for backwards compatibility\n  public getBalancesF(\n    params: ImmutableMethodParams.ImmutableGetBalancesParams,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetBalancesResult> {\n    console.warn(\n      'getBalances will be deprecated. Please use listBalances or getBalance to query for token balances',\n    );\n    return this.get(\n      `balances/${params.user.toLowerCase()}`,\n      ImmutableMethodResults.ImmutableGetBalancesResultCodec.decode,\n    );\n  }\n\n  public async getBalances(\n    params: ImmutableMethodParams.ImmutableGetBalancesParams,\n  ): Promise<ImmutableMethodResults.ImmutableGetBalancesResult> {\n    return decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetBalancesParamsCodec.decode,\n      this.getBalancesF,\n    );\n  }\n\n  public getBalanceF(\n    params: ImmutableMethodParams.ImmutableGetBalanceParams,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetBalanceResult> {\n    return this.get(\n      `balances/${params.user.toLowerCase()}/${params.tokenAddress}`,\n      ImmutableMethodResults.ImmutableGetBalanceResultCodec.decode,\n      'v2',\n    );\n  }\n\n  public async getBalance(\n    params: ImmutableMethodParams.ImmutableGetBalanceParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableGetBalanceResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetBalanceParamsCodec.decode,\n      this.getBalanceF,\n    );\n  }\n\n  public listBalancesF({\n    user,\n    symbols,\n    cursor,\n  }: ImmutableMethodParams.ImmutableListBalancesParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableListBalancesResult\n  > {\n    const url = queryString.stringifyUrl(\n      {\n        url: `balances/${user.toLowerCase()}`,\n        query: { symbols, cursor },\n      },\n      {\n        arrayFormat: 'comma',\n      },\n    );\n    return this.get(\n      url,\n      ImmutableMethodResults.ImmutableListBalancesResultCodec.decode,\n      'v2',\n    );\n  }\n\n  public async listBalances(\n    params: ImmutableMethodParams.ImmutableListBalancesParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableListBalancesResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableListBalancesParamsCodec.decode,\n      this.listBalancesF,\n    );\n  }\n\n  public getMintableTokenF(\n    params: ImmutableMethodParams.ImmutableGetMintableTokenParams,\n  ): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableGetMintableTokenResult\n  > {\n    return pipe(\n      params.tokenId,\n      HexadecimalString.decode,\n      E.fold(\n        _e =>\n          this.get(\n            `mintable-token/${params.tokenAddress}/${params.tokenId}`,\n            ImmutableMethodResults.ImmutableGetMintableTokenResultCodec.decode,\n          ),\n        _parsedToken =>\n          this.get(\n            `mintable-token/${params.tokenId}`,\n            ImmutableMethodResults.ImmutableGetMintableTokenResultCodec.decode,\n          ),\n      ),\n    );\n  }\n\n  public async getMintableToken(\n    params: ImmutableMethodParams.ImmutableGetMintableTokenParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableGetMintableTokenResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetMintableTokenParamsCodec.decode,\n      this.getMintableTokenF,\n    );\n  }\n\n  public async getVaults(starkPublicKey: string) {\n    const data = JSON.stringify({\n      stark_key: starkPublicKey,\n    });\n\n    try {\n      const res = await axios.post('get-vaults', data, this.buildOptions());\n      return res.data;\n    } catch (err) {\n      throw formatError(err);\n    }\n  }\n\n  public getOrderF({\n    orderId,\n    include_fees = true,\n    auxiliaryFees,\n  }: ImmutableMethodParams.ImmutableGetOrderParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableGetOrderResult\n  > {\n    return this.get(\n      queryString.stringifyUrl({\n        url: `orders/${orderId}`,\n        query: {\n          include_fees,\n          ...this.formatAuxiliaryFeesForQueryString(auxiliaryFees),\n        },\n      }),\n      ImmutableMethodResults.ImmutableGetOrderResultCodec.decode,\n    );\n  }\n\n  public getOrder(\n    params: ImmutableMethodParams.ImmutableGetOrderParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableGetOrderResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetOrderParamsCodec.decode,\n      this.getOrderF,\n    );\n  }\n\n  public getOrdersF(\n    query: ImmutableMethodParams.ImmutableGetOrdersParams,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetOrdersResult> {\n    return this.get(\n      queryString.stringifyUrl({\n        url: 'orders',\n        query: {\n          order_by: query.order_by,\n          page_size: query.page_size,\n          cursor: query.cursor,\n          direction: query.direction,\n          user: query.user,\n          status: query.status,\n          min_timestamp: query.min_timestamp,\n          max_timestamp: query.max_timestamp,\n          buy_token_type: query.buy_token_type,\n          buy_token_id: query.buy_token_id,\n          buy_token_address: query.buy_token_address,\n          buy_min_quantity: query.buy_min_quantity,\n          buy_max_quantity: query.buy_max_quantity,\n          buy_metadata: query.buy_metadata,\n          sell_token_type: query.sell_token_type,\n          sell_token_id: query.sell_token_id,\n          sell_token_address: query.sell_token_address,\n          sell_token_name: query.sell_token_name,\n          sell_min_quantity: query.sell_min_quantity,\n          sell_max_quantity: query.sell_max_quantity,\n          sell_metadata: query.sell_metadata,\n          include_fees: query.include_fees,\n          ...this.formatAuxiliaryFeesForQueryString(query.auxiliaryFees),\n        },\n      }),\n      ImmutableMethodResults.ImmutableGetOrdersResultCodec.decode,\n    );\n  }\n\n  public getOrders(\n    params: ImmutableMethodParams.ImmutableGetOrdersParamsTS = {\n      include_fees: true,\n    },\n  ): Promise<ImmutableMethodResults.ImmutableGetOrdersResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetOrdersParamsCodec.decode,\n      this.getOrdersF,\n    );\n  }\n\n  public getAssetsF(\n    query: ImmutableMethodParams.ImmutableGetAssetsParams,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetAssetsResult> {\n    return this.get(\n      queryString.stringifyUrl({\n        url: 'assets',\n        query: {\n          order_by: query.order_by,\n          page_size: query.page_size,\n          cursor: query.cursor,\n          direction: query.direction,\n          user: query.user,\n          status: query.status,\n          metadata: query.metadata,\n          collection: query.collection,\n          name: query.name,\n          sell_orders: query.sell_orders,\n          buy_orders: query.buy_orders,\n          include_fees: query.include_fees,\n          ...this.formatAuxiliaryFeesForQueryString(query.auxiliaryFees),\n        },\n      }),\n      ImmutableMethodResults.ImmutableGetAssetsResultCodec.decode,\n      'v1',\n    );\n  }\n\n  public async getAssets(\n    params: ImmutableMethodParams.ImmutableGetAssetsParamsTS = {\n      include_fees: true,\n    },\n  ): Promise<ImmutableMethodResults.ImmutableGetAssetsResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetAssetsParamsCodec.decode,\n      this.getAssetsF,\n    );\n  }\n\n  public getAssetF({\n    address,\n    id,\n    include_fees = true,\n  }: ImmutableMethodParams.ImmutableGetAssetParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableAsset\n  > {\n    return this.get(\n      `assets/${address.toLowerCase()}/${id}?include_fees=${include_fees}`,\n      ImmutableMethodResults.ImmutableAssetCodec.decode,\n      'v1',\n    );\n  }\n\n  public async getAsset(\n    params: ImmutableMethodParams.ImmutableGetAssetParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableAsset> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetAssetParamsCodec.decode,\n      this.getAssetF,\n    );\n  }\n\n  public getApplicationsF(\n    query: ImmutableMethodParams.ImmutableGetApplicationsParams = {},\n  ): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableGetApplicationsResult\n  > {\n    const url = queryString.stringifyUrl({\n      url: 'applications',\n      query,\n    });\n\n    return this.get(\n      url,\n      ImmutableMethodResults.ImmutableGetApplicationsResultCodec.decode,\n    );\n  }\n\n  public getApplications(\n    params: ImmutableMethodParams.ImmutableGetApplicationsParamsTS = {},\n  ): Promise<ImmutableMethodResults.ImmutableGetApplicationsResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetApplicationsParamsCodec.decode,\n      this.getApplicationsF,\n    );\n  }\n\n  public getTradeF({\n    id,\n  }: ImmutableMethodParams.ImmutableGetTradeParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableTrade\n  > {\n    return this.get(\n      `trades/${id}`,\n      ImmutableMethodResults.ImmutableTradeCodec.decode,\n    );\n  }\n\n  public async getTrade(\n    params: ImmutableMethodParams.ImmutableGetTradeParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableTrade> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetTradeParamsCodec.decode,\n      this.getTradeF,\n    );\n  }\n\n  public getCollectionsF(\n    query: ImmutableMethodParams.ImmutableGetCollectionsParams,\n  ): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableGetCollectionsResult\n  > {\n    const url = queryString.stringifyUrl({\n      url: `collections`,\n      query,\n    });\n\n    return this.get(\n      url,\n      ImmutableMethodResults.ImmutableGetCollectionsResultCodec.decode,\n    );\n  }\n\n  public async getCollections(\n    params: ImmutableMethodParams.ImmutableGetCollectionsParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableGetCollectionsResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetCollectionsParamsCodec.decode,\n      this.getCollectionsF,\n    );\n  }\n\n  public getCollectionF({\n    address,\n  }: ImmutableMethodParams.ImmutableGetCollectionParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableCollection\n  > {\n    return this.get(\n      `collections/${address}`,\n      ImmutableMethodResults.ImmutableCollectionCodec.decode,\n    );\n  }\n\n  public async getCollection(\n    params: ImmutableMethodParams.ImmutableGetCollectionParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableCollection> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetCollectionParamsCodec.decode,\n      this.getCollectionF,\n    );\n  }\n\n  public getDepositsF(\n    query: ImmutableMethodParams.ImmutableGetDepositsParams = {},\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetDepositsResult> {\n    const url = queryString.stringifyUrl({\n      url: 'deposits',\n      query,\n    });\n\n    return this.get(\n      url,\n      ImmutableMethodResults.ImmutableGetDepositsResultCodec.decode,\n    );\n  }\n\n  public async getDeposits(\n    params: ImmutableMethodParams.ImmutableGetDepositsParamsTS = {},\n  ): Promise<ImmutableMethodResults.ImmutableGetDepositsResult> {\n    return decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetDepositsParamsCodec.decode,\n      this.getDepositsF,\n    );\n  }\n\n  public getDepositF({\n    id,\n  }: ImmutableMethodParams.ImmutableGetDepositParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableDeposit\n  > {\n    return this.get(\n      `deposits/${id}`,\n      ImmutableMethodResults.ImmutableDepositCodec.decode,\n    );\n  }\n\n  public async getDeposit(\n    params: ImmutableMethodParams.ImmutableGetDepositParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableDeposit> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetDepositParamsCodec.decode,\n      this.getDepositF,\n    );\n  }\n\n  public getTransferF({\n    id,\n  }: ImmutableMethodParams.ImmutableGetTransferParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableTransfer\n  > {\n    return this.get(\n      `transfers/${id}`,\n      ImmutableMethodResults.ImmutableTransferCodec.decode,\n    );\n  }\n\n  public async getTransfer(\n    params: ImmutableMethodParams.ImmutableGetTransferParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableTransfer> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetTransferParamsCodec.decode,\n      this.getTransferF,\n    );\n  }\n\n  /**\n   * Create a signable transfer\n   *\n   * @experimental - This function is only available for alpha testing\n   */\n  private getSignableTransferV2F(\n    params: ImmutableMethodParams.ImmutableGetSignableTransferV2Params,\n  ): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableGetSignableTransferV2Result\n  > {\n    return this.post(\n      'signable-transfer-details',\n      params,\n      this.decodeImmutableGetSignableTransferV2Result,\n      V2,\n    );\n  }\n\n  /**\n   * Create a signable transfer\n   *\n   * @experimental - This function is only available for alpha testing\n   */\n  private async getSignableTransferV2(\n    params: ImmutableMethodParams.ImmutableGetSignableTransferV2ParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableGetSignableTransferV2Result> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetSignableTransferV2ParamsCodec.decode,\n      this.getSignableTransferV2F,\n    );\n  }\n\n  private convertToGetSignableTransferV2Params(\n    params: ImmutableMethodParams.ImmutableTransferV2Params,\n  ): ImmutableMethodParams.ImmutableGetSignableTransferV2Params {\n    const signableTransferDetails = params.transfer_request.map(\n      ({ token, amount, receiver }) => ({\n        amount: token.type === ERC721TokenType.ERC721 ? '1' : amount.toString(),\n        receiver: receiver.toLowerCase() as EthAddress,\n        token: {\n          type: token.type,\n          data: this.getTokenBody(token),\n        },\n      }),\n    );\n    return {\n      sender_ether_key: params.sender_ether_key.toLowerCase() as EthAddress,\n      signable_requests: signableTransferDetails,\n    };\n  }\n\n  /**\n   * Create a transfer\n   *\n   * @experimental - This function is only available for alpha testing\n   */\n  public transferV2F(\n    params: ImmutableMethodParams.ImmutableTransferV2Params,\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableTransferV2Result> {\n    return pipe(\n      TE.bindTo('getSignableTransferV2Result')(\n        this.getSignableTransferV2F(\n          this.convertToGetSignableTransferV2Params(params),\n        ),\n      ),\n      TE.bind(\n        'transferRequestWithSignatures',\n        ({ getSignableTransferV2Result }) => {\n          return this.wallet.controller.transferV2(getSignableTransferV2Result);\n        },\n      ),\n      TE.bind(\n        'result',\n        ({ getSignableTransferV2Result, transferRequestWithSignatures }) =>\n          this.post(\n            'transfers',\n            {\n              sender_stark_key: getSignableTransferV2Result.sender_stark_key,\n              requests: transferRequestWithSignatures,\n            },\n            ImmutableMethodResults.ImmutableTransferV2ResultCodec.decode,\n            V2,\n          ),\n      ),\n      TE.map(({ result }) => result),\n    );\n  }\n\n  /**\n   * Create a transfer\n   *\n   * @experimental - This function is only available for alpha testing\n   */\n  public async transferV2(\n    params: ImmutableMethodParams.ImmutableTransferV2ParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableTransferV2Result> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableTransferV2ParamsCodec.decode,\n      this.transferV2F,\n    );\n  }\n\n  public async getBurn(\n    params: ImmutableMethodParams.ImmutableGetBurnParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableBurn> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetBurnParamsCodec.decode,\n      this.getTransferF,\n    );\n  }\n\n  public getWithdrawalF({\n    id,\n  }: ImmutableMethodParams.ImmutableGetWithdrawalParams): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableWithdrawal\n  > {\n    return this.get(\n      `Withdrawals/${id}`,\n      ImmutableMethodResults.ImmutableWithdrawalCodec.decode,\n    );\n  }\n\n  public async getWithdrawal(\n    params: ImmutableMethodParams.ImmutableGetWithdrawalParamsTS,\n  ): Promise<ImmutableMethodResults.ImmutableWithdrawal> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetWithdrawalParamsCodec.decode,\n      this.getWithdrawalF,\n    );\n  }\n\n  public getWithdrawalsF(\n    query: ImmutableMethodParams.ImmutableGetWithdrawalsParams = {},\n  ): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableGetWithdrawalsResult\n  > {\n    const url = queryString.stringifyUrl({\n      url: 'withdrawals',\n      query,\n    });\n\n    return this.get(\n      url,\n      ImmutableMethodResults.ImmutableGetWithdrawalsResultCodec.decode,\n    );\n  }\n\n  public async getWithdrawals(\n    params: ImmutableMethodParams.ImmutableGetWithdrawalsParamsTS = {},\n  ): Promise<ImmutableMethodResults.ImmutableGetWithdrawalsResult> {\n    return decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetWithdrawalsParamsCodec.decode,\n      this.getWithdrawalsF,\n    );\n  }\n\n  public getTransfersF(\n    query: ImmutableMethodParams.ImmutableGetTransfersParams = {},\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetTransfersResult> {\n    const url = queryString.stringifyUrl({\n      url: 'transfers',\n      query,\n    });\n\n    return this.get(\n      url,\n      ImmutableMethodResults.ImmutableGetTransfersResultCodec.decode,\n    );\n  }\n\n  public async getTransfers(\n    params: ImmutableMethodParams.ImmutableGetTransfersParamsTS = {},\n  ): Promise<ImmutableMethodResults.ImmutableGetTransfersResult> {\n    return decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetTransfersParamsCodec.decode,\n      this.getTransfersF,\n    );\n  }\n\n  public getExchangesV1F(\n    params: ImmutableMethodParams.ImmutableGetExchangesParams = {},\n  ): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableGetExchangeHistoryResultV1\n  > {\n    const url = queryString.stringifyUrl({\n      url: 'exchanges',\n      query: params as ImmutableMethodParams.ImmutableGetExchangesParams,\n    });\n\n    const decoder =\n      ImmutableMethodResults.ImmutableGetExchangeHistoryResultCodecV1.decode;\n\n    return this.get(url, decoder, 'v1');\n  }\n\n  public getExchangesV1(\n    params: ImmutableMethodParams.ImmutableGetExchangesParamsTS = {},\n  ): Promise<ImmutableMethodResults.ImmutableGetExchangeHistoryResultV1> {\n    return decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetExchangesParamsCodec.decode,\n      this.getExchangesV1F,\n    );\n  }\n\n  public getExchangesF(\n    params: ImmutableMethodParams.ImmutableGetExchangesParams = {},\n  ): TE.TaskEither<\n    Error,\n    ImmutableMethodResults.ImmutableGetExchangeHistoryResult\n  > {\n    const url = queryString.stringifyUrl({\n      url: 'exchanges',\n      query: params as ImmutableMethodParams.ImmutableGetExchangesParams,\n    });\n\n    const decoder =\n      ImmutableMethodResults.ImmutableGetExchangeHistoryResultCodec.decode;\n\n    return this.get(url, decoder, 'v2');\n  }\n\n  public getExchanges(\n    params: ImmutableMethodParams.ImmutableGetExchangesParamsTS = {},\n  ): Promise<ImmutableMethodResults.ImmutableGetExchangeHistoryResult> {\n    return decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetExchangesParamsCodec.decode,\n      this.getExchangesF,\n    );\n  }\n\n  public getBurnsF(\n    query: ImmutableMethodParams.ImmutableGetBurnsParams = {},\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetBurnsResult> {\n    const burnQuery: ImmutableMethodParams.ImmutableGetBurnsParamsTS = query;\n    burnQuery.receiver = BurnAddress.BurnEthAddress;\n    const url = queryString.stringifyUrl({\n      url: 'transfers',\n      query: burnQuery,\n    });\n\n    return this.get(\n      url,\n      ImmutableMethodResults.ImmutableGetBurnsResultCodec.decode,\n    );\n  }\n\n  public async getBurns(\n    params: ImmutableMethodParams.ImmutableGetBurnsParamsTS = {},\n  ): Promise<ImmutableMethodResults.ImmutableGetBurnsResult> {\n    return decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetBurnsParamsCodec.decode,\n      this.getBurnsF,\n    );\n  }\n\n  public getTradesF(\n    query: ImmutableMethodParams.ImmutableGetTradesParams = {},\n  ): TE.TaskEither<Error, ImmutableMethodResults.ImmutableGetTradesResult> {\n    const url = queryString.stringifyUrl({\n      url: 'trades',\n      query,\n    });\n\n    return this.get(\n      url,\n      ImmutableMethodResults.ImmutableGetTradesResultCodec.decode,\n    );\n  }\n\n  public getPaginatedResults<P, T>(\n    params: P,\n    fn: (params: P) => TE.TaskEither<Error, { cursor: string; result: T[] }>,\n  ): TE.TaskEither<Error, T[]> {\n    const M = A.getMonoid<T>();\n    const loadData = (params: P, result: T[]): TE.TaskEither<Error, T[]> =>\n      pipe(\n        fn(params),\n        TE.chain(data =>\n          data.cursor\n            ? loadData(\n                { ...params, cursor: data.cursor },\n                M.concat(result, data.result),\n              )\n            : TE.of(M.concat(result, data.result)),\n        ),\n      );\n\n    return loadData(params, []);\n  }\n\n  public getTrades(\n    params: ImmutableMethodParams.ImmutableGetTradesParamsTS = {},\n  ): Promise<ImmutableMethodResults.ImmutableGetTradesResult> {\n    return this.decodeForFunction(\n      params,\n      ImmutableMethodParams.ImmutableGetTradesParamsCodec.decode,\n      this.getTradesF,\n    );\n  }\n\n  public async getLastAvailableNonce(\n    starkPublicKey: string,\n  ): Promise<{ Nonce: string }> {\n    const data = JSON.stringify({\n      stark_key: starkPublicKey,\n    });\n\n    let nonce = 0;\n    try {\n      const res = await axios.post(\n        'get-last-available-nonce',\n        data,\n        this.buildOptions(),\n      );\n      nonce = 'nonce' in res.data.result ? res.data.result.nonce : 0; // @x/core/api/interface.go\n    } catch (err) {\n      throw formatError(err);\n    }\n    return { Nonce: String(nonce) };\n  }\n\n  public getTokenBody(token: Token): any {\n    if (token.type.toUpperCase() === 'ETH') {\n      const tokenI = token as ETHToken;\n      return {\n        decimals: tokenI.data.decimals,\n      };\n    }\n    if (token.type.toUpperCase() === 'ERC20') {\n      const tokenI = token as ERC20Token;\n      return {\n        decimals: tokenI.data.decimals,\n        token_address: tokenI.data.tokenAddress,\n      };\n    }\n    if (token.type.toUpperCase() === 'ERC721') {\n      const tokenI = token as ERC721Token;\n      return {\n        token_id: tokenI.data.tokenId,\n        token_address: tokenI.data.tokenAddress,\n      };\n    }\n    if (token.type.toUpperCase() === 'MINTABLE_ERC20') {\n      const tokenI = token as MintableERC20Token;\n      return {\n        token_id: getMintingBlobHash(tokenI.data.id, tokenI.data.blueprint),\n        token_address: tokenI.data.tokenAddress,\n      };\n    }\n    if (token.type.toUpperCase() === 'MINTABLE_ERC721') {\n      const tokenI = token as MintableERC721Token;\n      return {\n        token_id: getMintingBlobHash(tokenI.data.id, tokenI.data.blueprint),\n        token_address: tokenI.data.tokenAddress,\n      };\n    }\n    throw new Error('Invalid token type');\n  }\n\n  public parseTokenBody(token: any): any {\n    if (token.type.toUpperCase() === 'ETH') {\n      return {\n        decimals: token.data.decimals,\n      };\n    }\n    if (token.type.toUpperCase() === 'ERC20') {\n      return {\n        decimals: token.data.decimals,\n        tokenAddress: token.data.token_address,\n      };\n    }\n    if (token.type.toUpperCase() === 'ERC721') {\n      return {\n        tokenId: token.data.token_id,\n        tokenAddress: token.data.token_address,\n      };\n    }\n    if (token.type.toUpperCase() === 'MINTABLE_ERC20') {\n      return {\n        tokenId: getMintingBlobHash(token.data.id, token.data.blueprint),\n        tokenAddress: token.data.token_address,\n      };\n    }\n    if (token.type.toUpperCase() === 'MINTABLE_ERC721') {\n      return {\n        tokenId: getMintingBlobHash(token.data.id, token.data.blueprint),\n        tokenAddress: token.data.tokenAddress,\n      };\n    }\n    throw new Error('Invalid token type');\n  }\n\n  // This function is needed because the API returns snake cased result for token\n  // while to TokenCodec type expects camelcase\n  public decodeImmutableGetSignableTransferV2Result(result: any) {\n    return E.right({\n      signable_responses: result.signable_responses.map(signableResponse => ({\n        ...signableResponse,\n        token: this.parseTokenBody(signableResponse.token),\n      })),\n      sender_stark_key: result.sender_stark_key,\n    });\n  }\n\n  private async decodeForFunction<T, U>(\n    params: any,\n    decode: (x: any) => E.Either<Errors, T>,\n    fn: (params: T) => TE.TaskEither<Error, U>,\n  ): Promise<U> {\n    return valueOrThrow(\n      await pipe(\n        decode(params),\n        E.mapLeft(errorsToError),\n        TE.fromEither,\n        TE.chain<Error, T, U>(fn),\n        TE.mapLeft(formatError),\n      )(),\n    );\n  }\n\n  /**\n   * Create an exchange\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async createExchangeV1(\n    walletAddress: string,\n  ): Promise<ImmutableMethodResults.ImmutableCreateExchangeResultV1> {\n    const result = await this.requests.post(\n      'exchanges',\n      {\n        wallet_address: walletAddress,\n      },\n      undefined,\n      'v1',\n    );\n    return valueOrThrow(ImmutableCreateExchangeResultCodecV1.decode(result));\n  }\n\n  /**\n   * Create an exchange\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async createExchange(\n    walletAddress: string,\n    provider: ExchangeProvider = 'moonpay',\n  ): Promise<ImmutableMethodResults.ImmutableCreateExchangeResult> {\n    const result = await this.requests.post(\n      'exchanges',\n      {\n        wallet_address: walletAddress,\n        provider,\n      },\n      undefined,\n      'v2',\n    );\n    return valueOrThrow(ImmutableCreateExchangeResultCodec.decode(result));\n  }\n\n  /**\n   * Retrieve an exchange\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async getExchangeV1(\n    exchange_id: number,\n  ): Promise<ImmutableMethodResults.ImmutableGetExchangeResultV1> {\n    const result = await this.requests.get(\n      `exchanges/${exchange_id}`,\n      undefined,\n      undefined,\n      'v1',\n    );\n    return valueOrThrow(ImmutableGetExchangeResultCodecV1.decode(result));\n  }\n\n  /**\n   * Retrieve an exchange\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async getExchange(\n    exchange_id: number,\n  ): Promise<ImmutableMethodResults.ImmutableGetExchangeResult> {\n    const result = await this.requests.get(\n      `exchanges/${exchange_id}`,\n      undefined,\n      undefined,\n      'v2',\n    );\n    return valueOrThrow(ImmutableGetExchangeResultCodec.decode(result));\n  }\n\n  /**\n   * Create a moonpay signature based on the provided request string\n   */\n  public async getMoonpaySignature(\n    req: ImmutableMethodResults.ImmutableGetMoonpaySignatureRequest,\n    version: 'v1' | 'v2' = 'v1',\n  ): Promise<ImmutableMethodResults.ImmutableGetMoonpaySignatureResult> {\n    const validatedRequest = valueOrThrow(\n      ImmutableGetMoonpaySignatureRequestCodec.decode(req),\n    );\n    const reqParam = {\n      ...validatedRequest,\n      walletAddresses:\n        'walletAddresses' in validatedRequest\n          ? JSON.stringify(validatedRequest.walletAddresses)\n          : undefined,\n    };\n\n    return this.handleSignatureRequest(version, reqParam);\n  }\n\n  /**\n   * Create a moonpay sell signature based on the provided request string\n   */\n  public async getMoonpaySellSignature(\n    req: ImmutableMethodResults.ImmutableGetMoonpaySellSignatureRequest,\n    version: 'v1' | 'v2' = 'v1',\n  ): Promise<ImmutableMethodResults.ImmutableGetMoonpaySignatureResult> {\n    const validatedRequest = valueOrThrow(\n      ImmutableGetMoonpaySellSignatureRequestCodec.decode(req),\n    );\n    const reqParam = {\n      ...validatedRequest,\n      refundWalletAddresses:\n        'refundWalletAddresses' in validatedRequest\n          ? JSON.stringify(validatedRequest.refundWalletAddresses)\n          : undefined,\n    };\n\n    return this.handleSignatureRequest(version, reqParam);\n  }\n\n  async handleSignatureRequest(version, body) {\n    const reqParam = {\n      ...body,\n      showOnlyCurrencies: body.showOnlyCurrencies\n        ? body.showOnlyCurrencies.join(',')\n        : undefined,\n    };\n\n    const path =\n      version === 'v2' ? 'moonpay/sign-url' : 'signed-moonpay-request';\n\n    const result = await this.requests.post(\n      path,\n      {\n        request: queryString.stringify(reqParam),\n      },\n      undefined,\n      version,\n    );\n    return valueOrThrow(ImmutableGetMoonpaySignatureResultCodec.decode(result));\n  }\n\n  /**\n   * Authentication headers\n   */\n  private async getAuthenticationHeaders() {\n    if (!this.wallet) {\n      throw new Error('Please instantiate client with a signer');\n    }\n    return this.wallet.getAuthenticationHeaders();\n  }\n\n  /**\n   * Create a project\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async createProject(\n    params: CreateProjectParams,\n  ): Promise<CreateProjectResult> {\n    const authHeaders = await this.getAuthenticationHeaders();\n    const result = await this.requests.post('projects', params, authHeaders);\n    return valueOrThrow(CreateProjectResultsCodec.decode(result));\n  }\n\n  /**\n   * Get a list of projects. This list will only return the projects you are an owner of.\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async getProjects(\n    params?: ImmutableMethodParams.ImmutablePaginatedParamsTS,\n  ): Promise<ProjectsResult> {\n    const authHeaders = await this.getAuthenticationHeaders();\n    const result = await this.requests.get('projects', params, authHeaders);\n    return valueOrThrow(ProjectsResultCodec.decode(result));\n  }\n\n  /**\n   * Get a project by ID\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async getProject(params: GetProjectParams): Promise<ProjectResult> {\n    const authHeaders = await this.getAuthenticationHeaders();\n    const result = await this.requests.get(\n      `projects/${params.project_id}`,\n      null,\n      authHeaders,\n    );\n    return valueOrThrow(ProjectResultCodec.decode(result));\n  }\n\n  /**\n   * Create a collection\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async createCollection(\n    params: CreateCollectionParams,\n  ): Promise<CreateCollectionsResult> {\n    const authHeaders = await this.getAuthenticationHeaders();\n    const result = await this.requests.post(`collections`, params, authHeaders);\n    return valueOrThrow(CreateCollectionsResultsCodec.decode(result));\n  }\n\n  /**\n   * Update a collection\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async updateCollection(\n    contractAddress: string,\n    params: UpdateCollectionParams,\n  ): Promise<UpdateCollectionsResults> {\n    const authHeaders = await this.getAuthenticationHeaders();\n    const result = await this.requests.patch(\n      `collections/${contractAddress}`,\n      params,\n      authHeaders,\n    );\n    return valueOrThrow(UpdateCollectionsResultCodec.decode(result));\n  }\n\n  /**\n   * Add metadata schema to collection\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async addMetadataSchemaToCollection(\n    contractAddress: string,\n    params: AddMetadataSchemaToCollectionParams,\n  ): Promise<AddMetadataSchemaToCollectionResult> {\n    const authHeaders = await this.getAuthenticationHeaders();\n    const result = await this.requests.post(\n      `collections/${contractAddress}/metadata-schema`,\n      params,\n      authHeaders,\n    );\n    return valueOrThrow(\n      AddMetadataSchemaToCollectionResultCodec.decode(result),\n    );\n  }\n\n  /**\n   * Update metadata schema by name\n   *\n   * @experimental - This function is only available for alpha testing and may change\n   */\n  public async updateMetadataSchemaByName(\n    name: string,\n    contractAddress: string,\n    params: UpdateMetadataSchemaByNameParams,\n  ): Promise<UpdateMetadataSchemaByNameResult> {\n    const authHeaders = await this.getAuthenticationHeaders();\n    const result = await this.requests.patch(\n      `collections/${contractAddress}/metadata-schema/${name}`,\n      params,\n      authHeaders,\n    );\n    return valueOrThrow(UpdateMetadataSchemaByNameResultCodec.decode(result));\n  }\n\n  /**\n   * Get metadata schema\n   */\n  public async getMetadataSchema(\n    params: GetMetadataSchemaParams,\n  ): Promise<GetMetadataSchemaResult> {\n    const result = await this.requests.get(\n      `collections/${params.address}/metadata-schema`,\n    );\n    return valueOrThrow(GetMetadataSchemaResultCodec.decode(result));\n  }\n}\n\nexport default ImmutableXClient;\n","/* eslint-disable no-param-reassign */\nimport { ImLogger } from '@imtbl/imlogging';\nimport autoBind from 'auto-bind';\nimport * as http from 'http';\nimport WebSocket from 'ws';\n\n/**\n * Immutable X Web Socket Server\n */\ninterface CustomSocket extends WebSocket {\n  isAlive: boolean;\n}\n\nexport class ImmutableXServer {\n  private wss: WebSocket.Server;\n\n  private component = 'ImmutableXServer';\n\n  constructor(private log: ImLogger, port = 8080) {\n    this.log.debug(this.component, 'Immutable X Web Socket Server');\n    this.wss = new WebSocket.Server({ port });\n    autoBind(this);\n\n    this.wss.on('connection', this.handleConnection);\n  }\n\n  private handleConnection(socket: CustomSocket, req: http.IncomingMessage) {\n    this.log.debug(\n      this.component,\n      `Connected to ${req.socket.remoteAddress}...`,\n    );\n    socket.isAlive = true;\n\n    socket.on('message', this.handleMessage);\n\n    socket.on('close', () => {\n      this.log.debug(\n        this.component,\n        `Disconnected from ${req.socket.remoteAddress}...`,\n      );\n    });\n  }\n\n  private handleMessage(message: string) {\n    this.log.debug(this.component, message);\n    this.wss.clients.forEach((client: WebSocket) => {\n      if (client.readyState === WebSocket.OPEN) {\n        client.send(message);\n      }\n    });\n  }\n}\n","const whitelistedDomain = ['immutable.com', 'localhost'];\n\nexport interface ExperimentalOptions {\n  runCondition: boolean;\n  checkReferrer: boolean;\n  message: string;\n}\n\nexport const UNAUTHORIZED_PARTNER_ERROR =\n  'You are not whitelisted for experimental features';\n\nexport async function experimental<T>(\n  callback: () => Promise<T>,\n  options: ExperimentalOptions,\n): Promise<T> {\n  if (options.runCondition) {\n    console.warn(options.message);\n\n    if (options.checkReferrer && !isWhitelisted()) {\n      throw new Error(UNAUTHORIZED_PARTNER_ERROR);\n    }\n  }\n\n  return callback();\n}\n\nconst isWhitelisted = (): boolean => {\n  return !!whitelistedDomain.find(domain =>\n    window.location.origin.includes(domain),\n  );\n};\n","import { IParseOptions, IStringifyOptions } from 'qs';\n\nexport const STRINGIFY_SETTINGS: IStringifyOptions = {\n  addQueryPrefix: true,\n  encode: false,\n};\n\nexport const PARSE_SETTINGS: IParseOptions = {\n  ignoreQueryPrefix: true,\n};\n","import qs from 'qs';\nimport queryString from 'query-string';\n\nimport { LocalStorageKeys } from './libs';\nimport {\n  ConfigurableIframeOptions,\n  ERC721TokenType,\n  FeeType,\n  FullIframeOptions,\n  LINK_MESSAGE_TYPE,\n  LinkParams,\n  LinkResults,\n  messageTypes,\n  messagingUrls,\n  Routes,\n} from './types';\nimport { experimental } from './utils/experimental';\nimport { STRINGIFY_SETTINGS } from './utils/qs-settings';\n\nexport const getFullIframeOptions = (): FullIframeOptions => ({\n  containerElement: document.body,\n  className: '',\n  size: {\n    width: 375,\n    height: 667,\n  },\n  position: {\n    right: '0%',\n    bottom: '0%',\n  },\n  protectAgainstGlobalStyleBleed: true,\n});\n\nconst xButtonSize = '22px';\nconst globalStyleBleedProtection = `\n  /*\n  HARDEN STYLES TO PREVENT SOME GLOBAL STYLES FROM AFFECTING THEM\n  ----------------------------------------------------------------\n  This should solve issues that token trove are encountering.\n  */\n  .imxLinkIframeContainer__closeButton {\n      transition: none !important;\n      width: ${xButtonSize} !important;\n      height: ${xButtonSize} !important;\n      min-width: ${xButtonSize} !important;\n      min-height: ${xButtonSize} !important;\n      margin: 0 !important;\n      border: none !important;\n  }\n`;\n\nconst renderEmbedStyles = ({\n  size,\n  position,\n  protectAgainstGlobalStyleBleed,\n}: FullIframeOptions) => `\n  .imxLinkIframeContainer {\n      position: fixed;\n      ${position.top ? `top: ${position.top};` : ''}\n      ${position.bottom ? `bottom: ${position.bottom};` : ''}\n      ${position.left ? `left: ${position.left};` : ''}\n      ${position.right ? `right: ${position.right};` : ''}\n      width: ${size.width}px;\n      height: ${size.height}px;\n  }\n  .imxLinkIframeContainer__iframe {\n      display: block;\n      height: 100%;\n      width: 100%;\n      border: none;\n  }\n\n  .imxLinkIframeContainer__closeButton {\n      width: ${xButtonSize};\n      height: ${xButtonSize};\n      min-width: ${xButtonSize};\n      min-height: ${xButtonSize};\n      opacity: 0.4;\n      position: absolute;\n      z-index: 1;\n      top: 15px;\n      right: 15px;\n      background: transparent url(https://images.godsunchained.com/misc/white-menu-close.svg) center;\n      border: none;\n      padding: 0;\n      cursor: pointer;\n  }\n\n  ${protectAgainstGlobalStyleBleed ? globalStyleBleedProtection : ''}\n\n  .imxLinkIframeContainer__closeButton:hover {\n      opacity: 1;\n  }\n`;\n\nexport class Link {\n  constructor(\n    private webUrl = 'https://link.dev.x.immutable.com',\n    private iframeOptions: ConfigurableIframeOptions = null,\n  ) {}\n\n  private buildUrl(route: Routes, params: any, legacy: boolean) {\n    if (messagingUrls.includes(route)) {\n      return this.webUrl;\n    }\n\n    let query = params || {};\n\n    if (\n      route === Routes.Sell ||\n      route === Routes.BuyV2 ||\n      route === Routes.Cancel\n    ) {\n      // These routes could have a list of fee objects for their params.\n      // queryString.stringifyUrl() doesn't work for lists of objects. We need\n      // to convert the fees param to two separate comma separated strings.\n      if (Array.isArray(params.fees)) {\n        const fees = params.fees as FeeType[];\n        query = {\n          ...params,\n          fees: undefined,\n          fee_percentages: fees.map(fee => fee.percentage),\n          fee_recipients: fees.map(fee => fee.recipient),\n        };\n      }\n    }\n\n    return legacy\n      ? queryString.stringifyUrl({\n          url: `${this.webUrl}/${route}`,\n          query,\n        })\n      : `${this.webUrl}/${route}${qs.stringify(params, STRINGIFY_SETTINGS)}`;\n  }\n\n  private openIframeOrWindow =\n    <I, O = void>(route: Routes) =>\n    (params: I): Promise<O> =>\n      this.iframeOptions\n        ? this.openIframe(route, params)\n        : this.openWindow(route, params);\n\n  private openIframe = <I, O = void>(route: Routes, params: I): Promise<O> =>\n    new Promise((resolve, reject) => {\n      const url = this.buildUrl(route, params, route !== Routes.TransferV2);\n      const unloadIframe = () => {\n        window.removeEventListener('message', eventListener, false);\n        fullIframeOptions.containerElement.removeChild(containerDom);\n        reject(new Error('Link iFrame Closed'));\n      };\n\n      const fullIframeOptions: FullIframeOptions = {\n        ...getFullIframeOptions(),\n        ...this.iframeOptions,\n      };\n      const styleSheet = document.createElement('style');\n      const containerDom = document.createElement('div');\n      const iframeDom = document.createElement('iframe');\n      const closeButtonDom = document.createElement('button');\n      containerDom.classList.add('imxLinkIframeContainer');\n      fullIframeOptions.className &&\n        containerDom.classList.add(fullIframeOptions.className);\n      iframeDom.classList.add('imxLinkIframeContainer__iframe');\n      iframeDom.setAttribute(\n        'sandbox',\n        'allow-same-origin allow-scripts allow-forms allow-popups',\n      );\n      closeButtonDom.classList.add('imxLinkIframeContainer__closeButton');\n      styleSheet.append(\n        document.createTextNode(renderEmbedStyles(fullIframeOptions)),\n      );\n      containerDom.append(styleSheet, iframeDom, closeButtonDom);\n      closeButtonDom.addEventListener('click', unloadIframe);\n\n      // @NOTE: set the source of the iframe, and finally inject the iframe\n      // container into the document:\n      iframeDom.setAttribute('src', url);\n      fullIframeOptions.containerElement.appendChild(containerDom);\n      // @ts-ignore\n      iframeDom.addEventListener('load', function () {\n        console.log('iframe content loaded');\n      });\n\n      // TODO: Refactor this event listener with the one in popup\n      const eventListener = (event: MessageEvent) => {\n        if (event.origin !== this.webUrl) return;\n        const { data } = event;\n\n        if (data.type === LINK_MESSAGE_TYPE) {\n          switch (data.message) {\n            case messageTypes.inProgress: {\n              console.log(`${route} In Progress`);\n              break;\n            }\n            case messageTypes.ready: {\n              console.log(`Link ready for commands`);\n              switch (route) {\n                case Routes.BatchNftTransfer:\n                  iframeDom?.contentWindow?.postMessage(\n                    {\n                      type: LINK_MESSAGE_TYPE,\n                      message: messageTypes.batchNftTransfer,\n                      payload: params,\n                    },\n                    '*',\n                  );\n                  break;\n\n                default:\n                  console.error(`Error: Unknown route`);\n                  break;\n              }\n              break;\n            }\n            case messageTypes.success: {\n              console.log(`${route} Succeeded`, data.data);\n              resolve((data.data ?? {}) as O);\n              break;\n            }\n            case messageTypes.fail: {\n              console.log(`${route} Failed`);\n              reject();\n              break;\n            }\n            // This is only used by setup function\n            // TODO see if we can consolidate result and success\n            case messageTypes.result: {\n              console.log(`${route} Succeeded with result`, data.data);\n              resolve((data.data ?? {}) as O);\n              unloadIframe();\n              break;\n            }\n            case messageTypes.close: {\n              unloadIframe();\n              break;\n            }\n            default: {\n              console.error('Unknown message', data);\n              break;\n            }\n          }\n        }\n      };\n\n      window.addEventListener('message', eventListener, false);\n    });\n\n  private openWindow = <I, O = void>(route: Routes, params: I): Promise<O> =>\n    new Promise((resolve, reject) => {\n      const defaultOptions = getFullIframeOptions();\n      const url = this.buildUrl(route, params, route !== Routes.TransferV2);\n      const win = window.open(\n        url,\n        'imx-link',\n        `menubar=yes,location=no,resizable=no,scrollbars=no,status=yes,width=${defaultOptions.size.width},height=${defaultOptions.size.height}`,\n      );\n      if (!win) {\n        throw new Error('Unable to open window');\n      }\n\n      const checkClosed = setInterval(() => {\n        if (win.closed) {\n          clearInterval(checkClosed);\n          reject(new Error('Link Window Closed'));\n        }\n      }, 500);\n\n      const eventListener = (event: MessageEvent) => {\n        if (event.origin !== this.webUrl) return;\n        const { data } = event;\n\n        if (data.type === LINK_MESSAGE_TYPE) {\n          switch (data.message) {\n            case messageTypes.inProgress: {\n              console.log(`${route} In Progress`);\n              break;\n            }\n            case messageTypes.ready: {\n              console.log(`Link ready for commands`);\n              switch (route) {\n                case Routes.BatchNftTransfer:\n                  win.postMessage(\n                    {\n                      type: LINK_MESSAGE_TYPE,\n                      message: messageTypes.batchNftTransfer,\n                      payload: params,\n                    },\n                    '*',\n                  );\n                  break;\n\n                default:\n                  console.error(`Error: Unknown route`);\n                  break;\n              }\n              break;\n            }\n            case messageTypes.success: {\n              console.log(`${route} Succeeded`, data.data);\n              resolve((data.data ?? {}) as O);\n              break;\n            }\n\n            case messageTypes.fail: {\n              console.log(`${route} Failed`);\n              reject();\n              break;\n            }\n\n            case messageTypes.result: {\n              console.log(`${route} Succeeded with result`, data.data);\n              window.removeEventListener('message', eventListener, false);\n              clearInterval(checkClosed);\n              win.close();\n              resolve((data.data ?? {}) as O);\n              break;\n            }\n\n            case messageTypes.close: {\n              window.removeEventListener('message', eventListener, false);\n              clearInterval(checkClosed);\n              win.close();\n              reject(new Error('Link Window Closed'));\n              break;\n            }\n\n            default: {\n              console.error('Unknown message', data);\n              break;\n            }\n          }\n        }\n      };\n\n      window.addEventListener('message', eventListener, false);\n    });\n\n  history = this.openIframeOrWindow<LinkParams.History>(Routes.History);\n\n  setup = async (params: LinkParams.Setup): Promise<LinkResults.Setup> => {\n    const result = await this.openIframeOrWindow<\n      LinkParams.Setup,\n      LinkResults.Setup\n    >(Routes.Setup)(params);\n\n    window.localStorage.setItem(\n      LocalStorageKeys.PROVIDER_PREFERENCE,\n      result.providerPreference,\n    );\n    window.localStorage.setItem(\n      LocalStorageKeys.ETH_NETWORK,\n      result.ethNetwork,\n    );\n\n    return result;\n  };\n\n  buy = this.openIframeOrWindow<LinkParams.BuyV2, LinkResults.BuyV2>(\n    Routes.BuyV2,\n  );\n\n  sell = this.openIframeOrWindow<LinkParams.Sell>(Routes.Sell);\n\n  deposit = async (params: LinkParams.FlexibleDeposit = undefined) => {\n    const callback = () =>\n      this.openIframeOrWindow<LinkParams.FlexibleDeposit>(Routes.Deposit)(\n        params,\n      );\n\n    return callback();\n  };\n\n  prepareWithdrawal = this.openIframeOrWindow<\n    LinkParams.PrepareWithdrawal,\n    LinkResults.PrepareWithdrawal\n  >(Routes.PrepareWithdrawal);\n\n  completeWithdrawal = this.openIframeOrWindow<\n    LinkParams.CompleteWithdrawal,\n    LinkResults.CompleteWithdrawal\n  >(Routes.CompleteWithdrawal);\n\n  // Sends individual transfer requests to v1 endpoint in a loop\n  transfer = this.openIframeOrWindow<\n    LinkParams.TransferV2,\n    LinkResults.TransferV2\n  >(Routes.TransferV2);\n\n  // Sends NFT transfer requests to v2 endpoint in batches\n  batchNftTransfer = async (params: LinkParams.BatchNftTransfer) => {\n    const isNonNftTokensFound =\n      params.filter(transfer => transfer.type !== ERC721TokenType.ERC721)\n        .length > 0;\n    if (isNonNftTokensFound) {\n      throw Error('batchNftTransfer can only be called with NFT transfers');\n    }\n\n    return this.openIframeOrWindow<\n      LinkParams.BatchNftTransfer,\n      LinkResults.BatchNftTransfer\n    >(Routes.BatchNftTransfer)(params);\n  };\n\n  cancel = this.openIframeOrWindow<LinkParams.Cancel>(Routes.Cancel);\n\n  claim = async () => {\n    console.warn(\n      \"Warning: 'Link.claim()' is only for the 'IMX' reward campaign.\",\n    );\n\n    const openClaim = await this.openIframeOrWindow<LinkParams.Claim>(\n      Routes.Claim,\n    );\n\n    return openClaim({});\n  };\n\n  fiatToCrypto = this.openIframeOrWindow<\n    LinkParams.FiatToCrypto,\n    LinkResults.Setup\n  >(Routes.FiatToCrypto);\n\n  /**\n   * NOTE: link.cryptoToFiat() is an experimental feature, it should not be used in production.\n   *\n   */\n  cryptoToFiat = async (params: LinkParams.CryptoToFiat) => {\n    const callback = () =>\n      this.openIframeOrWindow<LinkParams.CryptoToFiat>(Routes.CryptoToFiat)(\n        params,\n      );\n    await experimental(callback, {\n      runCondition: true,\n      checkReferrer: true,\n      message:\n        'link.cryptoToFiat() is an experimental feature, it should not be used in production.',\n    });\n  };\n}\n","export const PERCENTAGE_DECIMAL_PLACES_MULTIPLIER = 10000;\nexport const MINIMUM_BASE_PRICE_ERROR_MESSAGE =\n  'Cannot calculate fee breakdown (with percentages to 2 decimal places) for base price lower than BigNumber of 10000';\nexport const FEE_DECIMAL_PLACES_ERROR_MESSAGE =\n  'Fees can only be specified to 2 decimal places';\nexport const PRICE_WITH_FEES_TOO_SMALL_ERROR_MESSAGE =\n  'priceWithFees is too small to support supplied fee percentages';\nexport const MINIMUM_BASE_PRICE_VALUE = 10000;\n","import { FeeType } from '../../types';\nimport {\n  FEE_DECIMAL_PLACES_ERROR_MESSAGE,\n  PERCENTAGE_DECIMAL_PLACES_MULTIPLIER,\n} from './constants';\n\nexport function addFeePercentages(fees: FeeType[]) {\n  return fees.reduce((acc, fee) => {\n    return (\n      parseInt(\n        (\n          acc * PERCENTAGE_DECIMAL_PLACES_MULTIPLIER +\n          fee.percentage * PERCENTAGE_DECIMAL_PLACES_MULTIPLIER\n        ).toFixed(0),\n        10,\n      ) / PERCENTAGE_DECIMAL_PLACES_MULTIPLIER\n    );\n  }, 0);\n}\n\nexport function validateFeePercentagesToTwoDecimalPlaces(fees: FeeType[]) {\n  fees.forEach(fee => {\n    if (\n      fee.percentage.toString().includes('.') &&\n      fee.percentage.toString().split('.')[1].length > 2\n    ) {\n      throw new Error(FEE_DECIMAL_PLACES_ERROR_MESSAGE);\n    }\n  });\n}\n","import { BigNumber } from 'ethers';\n\nimport { FeeType, PositiveBigNumber } from '../../types';\nimport {\n  MINIMUM_BASE_PRICE_ERROR_MESSAGE,\n  MINIMUM_BASE_PRICE_VALUE,\n  PERCENTAGE_DECIMAL_PLACES_MULTIPLIER,\n} from './constants';\nimport {\n  FeeBreakdownFromBasePriceInputs,\n  FeeBreakdownResult,\n} from './feeBreakdown.models';\nimport {\n  addFeePercentages,\n  validateFeePercentagesToTwoDecimalPlaces,\n} from './shared';\n\nfunction calculateFeesOnBasePrice(\n  basePrice: BigNumber,\n  fees: FeeType[],\n): { totalFeePercentage: number; totalFeeAmount: BigNumber } {\n  const totalFeePercentage = addFeePercentages(fees);\n\n  const totalFeePercentageConverted = parseInt(\n    (totalFeePercentage * PERCENTAGE_DECIMAL_PLACES_MULTIPLIER).toFixed(0),\n    10,\n  );\n\n  const totalFeeAmount = basePrice\n    .mul(BigNumber.from(totalFeePercentageConverted))\n    .div(BigNumber.from(PERCENTAGE_DECIMAL_PLACES_MULTIPLIER))\n    .div(BigNumber.from(100));\n\n  return {\n    totalFeePercentage,\n    totalFeeAmount,\n  };\n}\n\n// Return the fee breakdown by specifying the base price and the fee percentages to be applied\nexport function calculateFeeBreakdownFromBasePrice({\n  basePrice,\n  royaltyFees,\n  makerFees,\n  takerFees,\n}: FeeBreakdownFromBasePriceInputs): FeeBreakdownResult {\n  if (basePrice.lt(BigNumber.from(MINIMUM_BASE_PRICE_VALUE))) {\n    // lowest valid percentage fee of 0.01 % multiplied by base price would result in an invalid amount\n    // e.g 1,000 wei * 0.01% is less than 1 wei which is an invalid value\n    // 10,000 wei * 0.01% is 1 wei which is the lowest possible fee amount value\n    throw new Error(MINIMUM_BASE_PRICE_ERROR_MESSAGE);\n  }\n\n  validateFeePercentagesToTwoDecimalPlaces([\n    ...royaltyFees,\n    ...makerFees,\n    ...takerFees,\n  ]);\n\n  let priceWithFees = basePrice;\n\n  const {\n    totalFeePercentage: totalRoyaltyFeePercentage,\n    totalFeeAmount: totalRoyaltyFeeAmount,\n  } = calculateFeesOnBasePrice(basePrice, royaltyFees);\n\n  priceWithFees = priceWithFees.add(totalRoyaltyFeeAmount);\n\n  const {\n    totalFeePercentage: totalMakerFeePercentage,\n    totalFeeAmount: totalMakerFeeAmount,\n  } = calculateFeesOnBasePrice(basePrice, makerFees);\n\n  priceWithFees = priceWithFees.add(totalMakerFeeAmount);\n\n  const {\n    totalFeePercentage: totalTakerFeePercentage,\n    totalFeeAmount: totalTakerFeeAmount,\n  } = calculateFeesOnBasePrice(basePrice, takerFees);\n\n  priceWithFees = priceWithFees.add(totalTakerFeeAmount);\n\n  // TODO: Add protocol fee calculation when it becomes supported\n\n  const totalEcosystemFeePercentage =\n    totalMakerFeePercentage + totalTakerFeePercentage;\n\n  const totalEcosystemFeeAmount = totalMakerFeeAmount.add(totalTakerFeeAmount);\n\n  const totalFeePercentage =\n    (totalRoyaltyFeePercentage * 100 +\n      totalMakerFeePercentage * 100 +\n      totalTakerFeePercentage * 100) /\n    100;\n\n  return {\n    basePrice: basePrice as PositiveBigNumber,\n    priceWithFees: priceWithFees as PositiveBigNumber,\n    feeBreakdown: {\n      protocol: {\n        // Not implemented yet\n        percentage: 0,\n        amount: BigNumber.from(0) as PositiveBigNumber,\n      },\n      royalty: {\n        percentage: totalRoyaltyFeePercentage,\n        amount: totalRoyaltyFeeAmount as PositiveBigNumber,\n      },\n      ecosystem: {\n        percentage: totalEcosystemFeePercentage,\n        amount: totalEcosystemFeeAmount as PositiveBigNumber,\n      },\n      totalFeePercentage,\n    },\n  };\n}\n","import { BigNumber } from 'ethers';\n\nimport { PositiveBigNumber } from '../../types';\nimport {\n  MINIMUM_BASE_PRICE_VALUE,\n  PRICE_WITH_FEES_TOO_SMALL_ERROR_MESSAGE,\n} from './constants';\nimport {\n  FeeBreakdownFromFullPriceInputs,\n  FeeBreakdownResult,\n} from './feeBreakdown.models';\nimport {\n  addFeePercentages,\n  validateFeePercentagesToTwoDecimalPlaces,\n} from './shared';\n\nfunction calculateAmountFromFractionPercentage(\n  priceWithFees: BigNumber,\n  totalPercentage: number,\n  fractionPercentage: number,\n) {\n  return priceWithFees\n    .div(BigNumber.from(totalPercentage * 100))\n    .mul(BigNumber.from(fractionPercentage * 100));\n}\n\nexport function calculateFeeBreakdownFromFullPrice({\n  priceWithFees,\n  royaltyFees,\n  makerFees,\n  takerFees,\n}: FeeBreakdownFromFullPriceInputs): FeeBreakdownResult {\n  validateFeePercentagesToTwoDecimalPlaces([\n    ...royaltyFees,\n    ...makerFees,\n    ...takerFees,\n  ]);\n\n  const totalRoyaltyPercentages = addFeePercentages(royaltyFees);\n  const totalEcosystemPercentages = addFeePercentages([\n    ...makerFees,\n    ...takerFees,\n  ]);\n  const totalFeePercentages = addFeePercentages([\n    ...royaltyFees,\n    ...makerFees,\n    ...takerFees,\n  ]);\n  const totalFraction = 100 + totalFeePercentages;\n\n  const basePrice = priceWithFees\n    .div(BigNumber.from(totalFraction * 100))\n    .mul(BigNumber.from(100))\n    .mul(BigNumber.from(100));\n\n  if (basePrice.lt(BigNumber.from(MINIMUM_BASE_PRICE_VALUE))) {\n    throw new Error(PRICE_WITH_FEES_TOO_SMALL_ERROR_MESSAGE);\n  }\n\n  const royaltyAmount = calculateAmountFromFractionPercentage(\n    priceWithFees,\n    totalFraction,\n    totalRoyaltyPercentages,\n  );\n\n  const ecosystemAmount = calculateAmountFromFractionPercentage(\n    priceWithFees,\n    totalFraction,\n    totalEcosystemPercentages,\n  );\n\n  return {\n    basePrice: basePrice as PositiveBigNumber,\n    priceWithFees: priceWithFees as PositiveBigNumber,\n    feeBreakdown: {\n      protocol: {\n        // Not implemented yet\n        percentage: 0,\n        amount: BigNumber.from(0) as PositiveBigNumber,\n      },\n      royalty: {\n        percentage: totalRoyaltyPercentages,\n        amount: royaltyAmount as PositiveBigNumber,\n      },\n      ecosystem: {\n        percentage: totalEcosystemPercentages,\n        amount: ecosystemAmount as PositiveBigNumber,\n      },\n      totalFeePercentage: totalFeePercentages,\n    },\n  };\n}\n","import packageData from '../package.json';\n\nexport const { version } = packageData;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","regenerator","require$$0","identity","a","unsafeCoerce","constant","constTrue","constFalse","constNull","constUndefined","constVoid","flow","ab","bc","cd","de","ef","fg","gh","hi","ij","absurd","_","pipe","jk","kl","lm","mn","no","op","pq","qr","rs","st","hole","bind_","b","_a","assign","bindTo_","predicate","f","t","_i","n","isLeft","ma","_tag","left","e","right","onError","fold","onLeft","onRight","bimap","g","fa","mapLeft","isSome","isNone","none","some","fromNullable","getLeft","getRight","fromEither","getOrElseW","onNone","getOrElse","mapNullable","chainNullableK","map_","map","ap_","fab","ap","chain_","chain","reduce_","reduce","foldMap_","M","foldMapM","foldMap","reduceRight_","reduceRight","traverse_","F","traverseF","traverse","ta","alt_","that","alt","filter_","filter","filterMap_","filterMap","extend_","wa","extend","partition_","partition","partitionMap_","partitionMap","wither_","witherF","wither","wilt_","wiltF","wilt","of","flatten","altW","zero","throwError","duplicate","empty","compact","defaultSeparate","separate","o","sequence","URI","getEq","E","equals","x","y","getApplySemigroup","S","concat","Functor","Applicative","Monad","Foldable","Alt","Alternative","Extend","Compactable","Filterable","Traversable","Witherable","MonadThrow","option","Do","traverseArrayWithIndex","arr","traverseArray","sequenceArray","onSome","fb","show","O","compare","getOption","fromIO","delay","millis","setTimeout","__awaiter","thisArg","_arguments","P","fulfilled","step","rejected","__generator","body","label","trys","ops","verb","throw","return","v","E.left","T.of","E.right","rightTask","T.map","rightIO","T.fromIO","E.fold","onRejected","reason","LocalStorageKeys","T.chain","E.map","E.bimap","E.mapLeft","gab","ga","E.apW","all","T.ap","chainW","fromTask","taskEither","bindTo","bind","traverseSeqArray","E.isLeft","traverseSeqArrayWithIndex","_arrayLikeToArray","len","arr2","Array","_unsupportedIterableToArray","minLen","arrayLikeToArray","toString","from","test","_slicedToArray","isArray","arrayWithHoles","_s","_e","_arr","_n","_d","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","extendStatics","d","p","__extends","__","isFunction","_enable_super_gross_mode_that_will_cause_bad_things","config","useDeprecatedSynchronousErrorHandling","stack","hostReportError","closed","UnsubscriptionError","UnsubscriptionErrorImpl","errors","message","join","Subscription","unsubscribe","_parentOrParents","_subscriptions","_ctorUnsubscribe","_unsubscribe","remove","index","flattenUnsubscriptionErrors","sub","add","teardown","subscription","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","splice","errs","rxSubscriber","Math","random","Subscriber","_super","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","emptyObserver","SafeSubscriber","tslib_1.__extends","rxSubscriberSymbol","subscriber","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","parent","distinctUntilChanged","keySelector","source","lift","DistinctUntilChangedOperator","subscribe","DistinctUntilChangedSubscriber","hasKey","CreateCollectionParamsCodec","intersection","string","contract_address","owner_public_key","project_id","number","partial","metadata_api_url","description","icon_url","collection_image_url","CreateCollectionsResultsCodec","address","union","UpdateCollectionParamsCodec","UpdateCollectionsResultCodec","EthAddress","brand","s","isAddress","BurnAddress","NumberString","Number","HexadecimalString","substring","IntegerString","isInteger","parseFloat","PositiveIntegerStringC","PositiveNumberStringC","PositiveIntegerC","fromEnum","enumName","theEnum","isEnumValue","input","includes","Type","success","failure","FeeCodec","recipient","percentage","ETHTokenType","ETHTokenTypeT","ETHTokenCodec","data","decimals","ERC20TokenType","ERC20TokenTypeT","ERC20TokenCodec","symbol","tokenAddress","ERC721TokenType","ERC721TokenTypeT","ERC721TokenCodec","tokenId","MintableERC20TokenType","MintableERC20TokenTypeT","MintableERC20TokenCodec","id","blueprint","MintFeeCodec","MintableERC721TokenType","MetadataTypes","MintableERC721TokenTypeT","MintableERC721TokenDataCodec","royalties","array","MintableERC721TokenCodec","TokenTypeCodec","TokenCodec","MintBodyCodec","etherKey","tokens","nonce","authSignature","MintUserCodec","MintV2BodyCodec","users","contractAddress","BigNumberCodec","vaultId","Int","token","quantity","bigint","BigNumberT","u","BigNumber","c","PositiveBigNumber","NonNegativeBigNumber","TransferParamsCodec","starkPublicKey","OrderParamsCodec","FeeParamsCodec","feeToken","feeVaultId","feeLimit","ApiResponseCodec","ExchangeCurrency","MetadataTypesT","MetadataPropertyCodec","filterable","MetadataObjectCodec","AddMetadataSchemaToCollectionParamsCodec","metadata","AddMetadataSchemaToCollectionResultCodec","UpdateMetadataSchemaByNameParamsCodec","UpdateMetadataSchemaByNameResultCodec","GetMetadataSchemaParamsCodec","GetMetadataSchemaResultCodec","FlatETHTokenCodec","FlatETHTokenWithAmountCodec","amount","FlatERC721TokenCodec","FlatERC20TokenCodec","FlatERC20TokenWithAmountCodec","FlatTokenCodec","FlatTokenWithAmountCodec","to","FlatTokenWithAmountAndToAddressCodec","toAddress","TransferV2ParamsCodec","BuyParamsCodec","orderId","BuyV2ParamsCodec","orderIds","fees","SellParamsCodec","currencyAddress","expirationTimestamp","CancelParamsCodec","BaseExchangeCurrency","ProviderPreference","cryptoCurrencies","literal","ETH","USDC","FiatToCryptoParamsCodec","SetupParamsCodec","providerPreference","METAMASK","MAGIC_LINK","NONE","FlexibleDepositCodec","Deposit","LinkParamsCodecs","LinkParamsF","LinkParams","ImmutableOrderStatus","SetupResultsCodec","ethNetwork","SuccessCodec","ErrorCodec","BuyV2ResultsCodec","status","TransferV2TokenWithResult","txId","TransferV2ResultsCodec","PrepareWithdrawalCodec","withdrawalId","CompleteWithdrawalCodec","transactionId","LinkResultsCodecs","LinkResultsF","LinkResults","ImmutableTransactionStatus","ImmutableOrderStatusCodec","ImmutableAssetStatus","ImmutableTransactionStatusCodec","ImmutableRollupStatus","ImmutableAssetStatusCodec","ImmutableFeeType","ImmutableRollupStatusCodec","ImmutableFeeTypeCodec","ImmutableFeeInfoCodec","fee_limit","source_vault_id","asset_id","operatorSignature","user","sender","receiver","SignableTransferV2Codec","sender_ether_key","signable_requests","stark_signature","sender_vault_id","receiver_stark_key","receiver_vault_id","expiration_timestamp","ImmutableTransferRequestCodec","transfer_request","mints","sell","buy","signature","ImmutableSortOrder","ImmutableGetSignableOrderParamsCodec","tokenSell","amountSell","tokenBuy","amountBuy","include_fees","fee_info","symbols","cursor","auxiliaryFees","ImmutableSortOrderCodec","ImmutablePaginatedParamsCodec","order_by","page_size","direction","min_timestamp","max_timestamp","buy_token_type","buy_token_id","buy_token_address","buy_min_quantity","buy_max_quantity","buy_metadata","sell_token_type","sell_token_id","sell_token_address","sell_token_name","sell_min_quantity","sell_max_quantity","sell_metadata","collection","sell_orders","buy_orders","ImmutableGetTransactionParamsCodec","rollup_status","token_type","token_id","token_address","min_quantity","max_quantity","withdrawn_to_wallet","wallet_address","exchange","transfer_id","party_a_token_type","party_a_token_address","party_a_token_id","party_b_token_type","party_b_token_address","party_b_token_id","ImmutableGetTransferParamsCodec","ImmutableMethodParams","StarkMethodParams","layer","application","quantizedAmount","assetId","proof","tokenUri","RegistrationMethodParams","registrationContractAddress","ethSignature","tx_hash","accounts","stark_key","vault_id","operator_signature","deposit_id","time","withdrawal_id","sender_stark_key","ImmutableSignableTransferV2Codec","signable_responses","sent_signature","transfer_ids","ImmutableOffchainMintV2ResultCodec","tx_id","results","ImmutableOffchainMintResultCodec","client_token_id","ImmutableMintFeeResultCodec","amount_sell","asset_id_sell","vault_id_sell","amount_buy","asset_id_buy","vault_id_buy","order_id","ImmutableCollectionDetailsCodec","ImmutableCollectionCodec","ImmutablePropertiesCodec","image_url","ImmutableETHTokenCodec","ImmutableERC20TokenCodec","ImmutableERC721TokenCodec","properties","ImmutableTokenCodec","ImmutablePaginatedResultCodec","remaining","FeeData","FeeToken","ImmutableOrderFeeInfo","ImmutableGetOrderResultCodec","amount_sold","DateFromISOString","timestamp","ImmutableApplicationCodec","created_at","ImmutableSellOrderCodec","buy_quantity","buy_decimals","ImmutableBuyOrderCodec","sell_quantity","sell_decimals","ImmutableAssetCodec","uri","unknown","orders","trade_id","ImmutableDepositCodec","transaction_id","ImmutableWithdrawalCodec","ImmutableTransferCodec","ImmutableTradeCodec","sold","ImmutableGetExchangeResultCodecV1","external_id","from_amount","from_currency","to_amount","to_currency","fees_amount","ImmutableExchangeDataCodec","ImmutableGetExchangeResultCodec","provider","updated_at","ImmutableMoonpaySignatureRequestBaseCodec","apiKey","baseCurrencyCode","USD","colorCode","externalTransactionId","showOnlyCurrencies","currencyCode","walletAddress","walletAddresses","refundWalletAddress","refundWalletAddresses","request","ImmutableGetTokenResultCodec","quantum","imx","preparing_withdrawal","withdrawable","ImmutableBalanceCodec","balance","ImmutableMethodResults","StarkMethodResults","CreateProjectParamsCodec","company_name","contact_email","GetProjectParamsCodec","CreateProjectResultsCodec","ProjectResultCodec","mint_remaining","mint_limit_expires_at","mint_monthly_limit","collection_remaining","collection_limit_expires_at","collection_monthly_limit","ProjectsResultCodec","IMXDClientMethodParams","date","IMXDClientMethodResults","daily_points_balance","starkKey","Routes","messageTypes","inProgress","fail","close","ready","transfer","batchNftTransfer","messagingUrls","BatchNftTransfer","erc20","createExtensionProvider","mustBeMetaMask","window","ethereum","providers","console","log","find","isMetaMask","setSelectedProvider","monoidOrdering","ordNumber","min","max","fromCompare","optimizedCompare","getShow","as","lenx","leny","r","xs","ys","every","makeBy","mma","rLen","start","l","j","isEmpty","isNonEmpty","isOutOfBound","lookup","O.none","O.some","cons","head","tail","snoc","init","end","spanIndexUncurry","insertAt","unsafeInsertAt","updateAt","unsafeUpdateAt","modifyAt","sort","zipWith","fc","zip","bs","unzip","prependToAll","xs_1","intersperse","elem","elemE_1","element","chop","cs","splitAt","mapWithIndex_","mapWithIndex","reduceWithIndex_","foldMapWithIndex_","reduceRightWithIndex_","reduceRightWithIndex","apFirst","apSecond","chainWithIndex","outLen","temp","out","l_1","chainFirst","fa_1","filterMapWithIndex","optionB","O.isSome","partitionWithIndex","predicateWithIndex","partitionMapWithIndex","filterWithIndex","foldMapWithIndex","foldMapWithIndexM","reduceWithIndex","traverseWithIndexF","traverseWithIndex","fas","fbs","FunctorWithIndex","FilterableWithIndex","FoldableWithIndex","TraversableWithIndex","unsafeDeleteAt","RA.getShow","getMonoid","RA.getEq","getOrd","aLen","bLen","ordering","RA.makeBy","range","replicate","RA.flatten","foldLeft","onEmpty","onCons","foldRight","scanLeft","scanRight","RA.isEmpty","RA.isNonEmpty","RA.isOutOfBound","RA.lookup","RA.cons","RA.snoc","last","takeLeft","takeRight","dropLeft","dropRight","dropLeftWhile","rest","findIndex","findFirstMap","findLastMap","findLastIndex","copy","ras","RA.insertAt","RA.updateAt","deleteAt","RA.modifyAt","RA.reverse","rights","lefts","RA.sort","RA.zipWith","RA.zip","RA.unzip","RA.prependToAll","RA.intersperse","rotate","abs","RA.elem","uniq","elemS","sortBy","ords","RA.chop","RA.splitAt","chunksOf","elemE","unionE_1","intersectionE_1","difference","differenceE_1","RA.of","RA.Monad","RA.map","RA.ap","RA.apFirst","RA.apSecond","RA.chain","RA.chainWithIndex","RA.chainFirst","RA.mapWithIndex","RA.compact","RA.separate","RA.filter","RA.filterMap","RA.partition","RA.partitionWithIndex","RA.partitionMap","RA.partitionMapWithIndex","RA.altW","RA.alt","RA.filterMapWithIndex","RA.filterWithIndex","RA.extend","RA.duplicate","RA.foldMap","RA.foldMapWithIndex","RA.reduce","RA.reduceWithIndex","RA.reduceRight","RA.reduceRightWithIndex","RA.traverse","RA.sequence","RA.traverseWithIndex","RA.wither","RA.wilt","unfold","ret","bb","mt","b_1","RA.FunctorWithIndex","Unfoldable","RA.Extend","RA.FilterableWithIndex","RA.Foldable","RA.FoldableWithIndex","RA.Traversable","RA.TraversableWithIndex","RA.Witherable","RA.unsafeInsertAt","RA.unsafeUpdateAt","RA.unsafeDeleteAt","apS","RA.takeLeftWhile","RA.spanLeft","RA.findFirst","RA.findLast","go","scope","RA.comprehension","fromReadonlyArray","nea","group","RA.empty","fx","fy","fromArray","RA.fromArray","uncons","unsnoc","RNEA.head","ord","getMeetSemigroup","getJoinSemigroup","getSemigroup","groupSort","sortO","groupO","groupBy","as_1","k","RNEA.filterWithIndex","RA.Functor","RA.Applicative","extract","RNEA.Foldable","RA.Alt","RNEA.FoldableWithIndex","traverseWithIndex_","RNEA.ap","RNEA.chain","RNEA.map","Comonad","nonEmptyArray","RNEA.group","RNEA.filter","RNEA.concat","G","fga","foldMapF","foldMapG","mb","sep","fm","acc","mu","applyFirst","_Array","function_1","NEA","require$$1","A","require$$2","require$$3","Foldable_1","require$$4","eq","valueOrThrow","res","ordA","eqA","reduceM","zs","errorsToError","errorsToArray","reporter","report","decodeForFunction","params","decode","TE","taskEitherWithError","switchCase","cases","def","getMagicConfig","storedNetwork","localStorage","_window$localStorage","getItem","ETH_NETWORK","publishableKey","network","magicClient","Magic","createMagicProvider","magic","rpcProvider","formatError","response","JSON","stringify","_err$response","errno","code","ethToken","weiToEth8","div","pow","amountToQuantizedAmount","tokenQuantizedAmount","ERC20","getProvider","getEthereumProvider","PROVIDER_PREFERENCE","Web3Provider","ImmutableIMXDClient","imxdPublicApiUrl","axios","defaults","baseURL","agent","https","Agent","autoBind","httpsAgent","headers","path","get","buildOptions","url","queryString","stringifyUrl","query","GetDailyPointsBalanceResultCodec","GetDailyPointsBalanceParamsCodec","getDailyPointsBalanceF","build","_toConsumableArray","arrayWithoutHoles","iterableToArray","nonIterableSpread","_defineProperty","constantPointsHex","prime","BN","order","starkEc","Ec","curves","PresetCurve","hash","hashJS","sha256","gRed","constantPoints","coords","curve","point","shiftPoint","instructionEncodingMap","orderWithFee","transferWithFee","registerUser","deposit","withdraw","cancelOrder","ZERO_BN","ONE_BN","TWO_POW_22_BN","TWO_POW_31_BN","TWO_POW_63_BN","PRIME_BN","MAX_ECDSA_BN","MISSING_HEX_PREFIX","ORDER","SECP_ORDER","isHexPrefixed","str","checkHexValue","hex","assert","hexBn","encUtils","removeHexPrefix","gte","lt","getIntFromBits","bin","hexToBinary","bits","int","binaryToNumber","getAccountPath","ethereumAddress","layerHash","update","digest","applicationHash","layerInt","applicationInt","ethAddressInt1","ethAddressInt2","hashKeyWithIndex","hexToBuffer","sanitizeBytes","numberToHex","grindKey","privateKey","mod","getKeyPair","keyFromPrivate","getKeyPairFromPath","seed","hdkey","fromMasterSeed","Buffer","derivePath","getWallet","getPrivateKeyString","getPublic","keyPair","compressed","getStarkPublicKey","getKeyPairFromPublicKey","publicKey","keyFromPublic","hexToArray","getKeyPairFromPrivateKey","getXCoordinate","pub","getX","hexTuples","toLowerCase","match","truncateMintable240","bitArr","val","parseInt","bitMaskArr","bitOutputArr","ctr","bitwise","and","read","hexOutputArr","truncate250","getAssetInfo","assetInfo","toUpperCase","sanitizeHex","solidityKeccak256","padLeft","getAssetType","Bytes32","getMintingBlob","utf8ToHex","getMintingBlobHash","utf8ToArray","getAssetID","assetType","toUint","parseTokenInput","pedersen","pt","toNumber","shrn","assertInRange","lowerBound","upperBound","convertBnAndAssertRange","instruction","vault0","vault1","amount0","amount1","feeVault","instructionTypeBn","vault0Bn","vault1Bn","amount0Bn","amount1Bn","nonceBn","expirationTimestampBn","feeVaultBn","feeLimitBn","serializeMessage","serialized","ushln","formatMessage","formatMessageWithFee","serializeOrderMsgWithFee","vaultSellBn","vaultBuyBn","amountSellBn","amountBuyBn","serialized1","serialized2","hashMessage","w1","w2","w3","getLimitOrderMsgWithFee","vaultSell","vaultBuy","tempHash","getLimitOrderMsg","getTransferMsg","senderVaultId","receiverVaultId","receiverPublicKey","packRegisterUserMsg","toFixed","getRegisterUserMsg","packRegisterUserMsgVerifyEth","getRegisterUserMsgVerifyEth","getDepositMsg","getWithdrawMsg","fixMessage","msg","sign","serializeSignature","sig","addHexPrefix","serializeEthSignature","recoveryParam","importRecoveryParam","trim","cmp","deserializeSignature","size","packCancelOrderMsg","getCancelOrderMsg","orderID","signAuthHeader","signer","signMessage","_getPrototypeOf","_superPropBase","property","_get","Reflect","base","superPropBase","desc","getOwnPropertyDescriptor","_setPrototypeOf","_inherits","subClass","superClass","_typeof","_possibleConstructorReturn","ReferenceError","assertThisInitialized","ImmutableX__factory","ContractFactory","_abi","_bytecode","_name","_symbol","overrides","signerOrProvider","Contract","inputs","internalType","stateMutability","anonymous","indexed","outputs","Stark__factory","payable","utils","Interface","Registration__factory","_imx","ImmutableXController","publicApiUrl","accountMappingKey","storage","store","set","getAddress","activeKeyPair","connect","payload","keccak256","toUtf8Bytes","getActiveKeyPair","getPrivate","signingKey","SigningKey","joinSignature","signDigest","assertStarkPublicKey","starkSignature","_this2","_this3","_this4","getQuantumValue","String","transfers","_this5","sell_id","buy_id","_this6","_this7","_this8","signF","_this9","getExchangeContract","populateTransaction","exchangeContract","ERC721","unsignedTrx","depositNft","StarkDepositParamsCodec","depositF","registrationContract","getRegistrationContract","depositCancel","depositReclaim","_this10","getAssetTypeValue","assetTypeValue","withdrawNft","MINTABLE_ERC20","MINTABLE_ERC721","mintToken","withdrawAndMint","_this11","registerAndWithdraw","fullWithdrawalRequest","freezeRequest","escape","nftContract","mint","approve","tokenContract","getAccountMapping","accountMapping","splitSignature","setActiveKeyPair","paths","isTokenERC20","isTokenETH","_this12","returnDefaultValue","_this13","isTokenNFT","ImmutableXClient","client","getToken","qStr","_context33","ImmutableXWallet","gasLimit","gasPrice","NonceManager","controller","incrementTransactionCount","getEthKey","getQuantizedDepositBalance","getWithdrawalBalance","owner","erc20Contract","balanceOf","decimal","formatUnits","spender","allowance","toHexString","trx","sendTransaction","incrementNonce","sendTransactionF","floor","Date","now","wallet","account","logRequest","_request$method","getAxiosWithDebugLogger","enableDebug","axiosInstance","axiosRetry","retries","retryDelay","exponentialDelay","retryCondition","isNetworkError","interceptors","use","statusText","logResponse","_error$response","_error$response2","logErrorResponse","RequestClient","baseUrl","baseOptions","version","replace","options","replaceApiVersion","addParams","addHeaders","handleResponse","handleErrors","post","patch","ImmutableCreateExchangeResultCodec","ImmutableCreateExchangeResultCodecV1","ImmutableGetMoonpaySignatureResultCodec","ImmutableGetMoonpaySignatureRequestCodec","ImmutableGetMoonpaySellSignatureRequestCodec","_address","_starkPublicKey","requests","getBalance","getAllowance","verifyEth","round","getTime","ether_key","eth_signature","signUserRegistrationVerifyEth","signRaw","ImmutableRegisterResultCodec","signUserRegistration","ImmutableGetUserResultCodec","ImmutableGetUserParamsCodec","getUserF","ImmutableRegisterParamsCodec","registerImxF","T","isRegisteredF","isRegisteredStarkF","registerF","register","ImmutableStarkRegisterParamsCodec","registerStarkF","ImmutableGetSignableRegistrationResultCodec","ImmutableGetSignableRegistrationParamsCodec","getSignableRegistrationF","mintNFT","ImmutableMintNFTParamsCodec","mintNFTF","approveNFT","ImmutableStarkApproveNFTParamsCodec","approveNFTF","approveERC20","ImmutableStarkApproveERC20ParamsCodec","approveERC20F","getTokenBody","ImmutableGetSignableDepositResultCodec","isRegistered","signableDepositResult","signableRegistrationResult","RegisterAndDepositParamsCodec","registerAndDepositF","ImmutableGetSignableDepositParamsCodec","assetID","getLastAvailableNonce","Nonce","signStark","ImmutableGetSignableWithdrawalResultCodec","signableWithdrawalResult","signWithdraw","ImmutableWithdrawalResultCodec","ImmutablePrepareWithdrawalParamsCodec","prepareWithdrawalF","mintableToken","getMintableTokenF","processMintableToken","processedToken","withdrawal","ImmutableCompleteWithdrawalParamsCodec","completeWithdrawalF","ImmutableGetSignableTransferResultCodec","signableTransferResult","ImmutableTransferResultCodec","ImmutableTransferParamsCodec","transferF","BurnEthAddress","ImmutableBurnParamsCodec","burnF","warn","auth_signature","ImmutableOffchainMintResultsCodec","ImmutableOffchainMintParamsCodec","mintF","_token$royalties","fee","_mint$royalties","ImmutableOffchainMintV2ResultsCodec","ImmutableOffchainMintV2ParamsCodec","mintV2F","nftToken","baseAmount","makerFees","multiplier","getAssetF","royaltyFees","totalFeeAmount","feeAmount","mul","token_sell","token_buy","formatFeesForRequest","ImmutableGetSignableOrderResultCodec","signableOrderResult","sellParams","buyParams","feeInfo","createOrderWithFee","createOrder","fee_percentage","auxiliary_fee_recipients","auxiliary_fee_percentages","calculateMakerOrderAmountsF","feeInclusiveAmounts","createOrderRequestF","ImmutableCreateOrderResultCodec","createOrderF","ImmutableCancelOrderResultCodec","ImmutableCancelOrderParamsCodec","cancelOrderF","_this14","ImmutableCreateTradeResultCodec","ImmutableGetSignableTradeParamsCodec","createTradeF","ImmutableGetTokenParamsCodec","getTokenF","arrayFormat","ImmutableListTokensResultCodec","ImmutableListTokensParamsCodec","listTokensF","ImmutableGetBalancesResultCodec","ImmutableGetBalancesParamsCodec","getBalancesF","ImmutableGetBalanceResultCodec","ImmutableGetBalanceParamsCodec","getBalanceF","ImmutableListBalancesResultCodec","ImmutableListBalancesParamsCodec","listBalancesF","_this15","ImmutableGetMintableTokenResultCodec","_parsedToken","ImmutableGetMintableTokenParamsCodec","formatAuxiliaryFeesForQueryString","ImmutableGetOrderParamsCodec","getOrderF","ImmutableGetOrdersResultCodec","ImmutableGetOrdersParamsCodec","getOrdersF","ImmutableGetAssetsResultCodec","ImmutableGetAssetsParamsCodec","getAssetsF","ImmutableGetAssetParamsCodec","ImmutableGetApplicationsResultCodec","ImmutableGetApplicationsParamsCodec","getApplicationsF","ImmutableGetTradeParamsCodec","getTradeF","ImmutableGetCollectionsResultCodec","ImmutableGetCollectionsParamsCodec","getCollectionsF","ImmutableGetCollectionParamsCodec","getCollectionF","ImmutableGetDepositsResultCodec","ImmutableGetDepositsParamsCodec","getDepositsF","ImmutableGetDepositParamsCodec","getDepositF","getTransferF","decodeImmutableGetSignableTransferV2Result","ImmutableGetSignableTransferV2ParamsCodec","getSignableTransferV2F","signableTransferDetails","_this16","convertToGetSignableTransferV2Params","getSignableTransferV2Result","_this17","transferV2","transferRequestWithSignatures","ImmutableTransferV2ResultCodec","ImmutableTransferV2ParamsCodec","transferV2F","ImmutableGetBurnParamsCodec","ImmutableGetWithdrawalParamsCodec","getWithdrawalF","ImmutableGetWithdrawalsResultCodec","ImmutableGetWithdrawalsParamsCodec","getWithdrawalsF","ImmutableGetTransfersResultCodec","ImmutableGetTransfersParamsCodec","getTransfersF","decoder","ImmutableGetExchangeHistoryResultCodecV1","ImmutableGetExchangesParamsCodec","getExchangesV1F","ImmutableGetExchangeHistoryResultCodec","getExchangesF","burnQuery","ImmutableGetBurnsResultCodec","ImmutableGetBurnsParamsCodec","getBurnsF","ImmutableGetTradesResultCodec","loadData","ImmutableGetTradesParamsCodec","getTradesF","tokenI","signableResponse","_this18","parseTokenBody","exchange_id","req","validatedRequest","reqParam","handleSignatureRequest","getAuthenticationHeaders","authHeaders","starkContractAddress","parsedGasLimit","parsedGasPrice","contractAddressT","registrationContractAddressT","ImmutableXServer","port","debug","component","wss","WebSocket","Server","on","handleConnection","socket","remoteAddress","isAlive","handleMessage","clients","readyState","OPEN","send","whitelistedDomain","experimental","callback","runCondition","checkReferrer","isWhitelisted","domain","location","origin","STRINGIFY_SETTINGS","addQueryPrefix","encode","getFullIframeOptions","containerElement","document","className","width","height","position","bottom","protectAgainstGlobalStyleBleed","globalStyleBleedProtection","renderEmbedStyles","top","Link","webUrl","iframeOptions","route","openIframe","openWindow","buildUrl","TransferV2","unloadIframe","removeEventListener","eventListener","fullIframeOptions","removeChild","containerDom","styleSheet","createElement","iframeDom","closeButtonDom","classList","setAttribute","append","createTextNode","addEventListener","appendChild","event","contentWindow","postMessage","defaultOptions","win","open","checkClosed","setInterval","clearInterval","openIframeOrWindow","History","Setup","setItem","BuyV2","Sell","PrepareWithdrawal","CompleteWithdrawal","Cancel","Claim","openClaim","FiatToCrypto","CryptoToFiat","legacy","fee_percentages","fee_recipients","qs","MINIMUM_BASE_PRICE_ERROR_MESSAGE","addFeePercentages","validateFeePercentagesToTwoDecimalPlaces","split","calculateFeesOnBasePrice","basePrice","totalFeePercentage","totalFeePercentageConverted","calculateAmountFromFractionPercentage","priceWithFees","totalPercentage","fractionPercentage","ignoreQueryPrefix","condition","errorMessage","takerFees","totalRoyaltyFeePercentage","totalRoyaltyFeeAmount","totalMakerFeePercentage","totalMakerFeeAmount","totalTakerFeePercentage","totalTakerFeeAmount","totalEcosystemFeePercentage","totalEcosystemFeeAmount","feeBreakdown","protocol","royalty","ecosystem","totalRoyaltyPercentages","totalEcosystemPercentages","totalFeePercentages","totalFraction","royaltyAmount","ecosystemAmount","interval","balanceObs","Observable","updateBalance","balanceObj","run","curr","formatEther","parseEther","te","dir","depth"],"mappings":"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E,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,iEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,gEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,iEACA,mEAEF,CACE,kEACA,kEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,iEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,gEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,iEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,iEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,iEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,gEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,gEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,gEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,iEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,iEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,kEAEF,CACE,iEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,kEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,iEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,mEAEF,CACE,kEACA,oECz9DEC,GAAQ,IAAIC,UAChB,kEACA,IAEIC,GAAQ,IAAID,UAChB,0EACA,IAGIE,GAAU,IAAIC,KAClB,IAAIC,SAAOC,YAAY,CACrBvmC,KAAM,QACNimC,MAAO,KACP7yB,EAAG6yB,GACH9gC,EAAG,0EACHiC,EAAG,0EACHQ,EAAGu+B,GACHK,KAAMC,UAAOC,OACbC,MAAM,EACNn+B,EAAGw9B,GAAkB,MAInBY,GAAiBZ,GAAkBv8B,KAAI,SAACo9B,UAC5CT,GAAQU,MAAMC,MAAM,IAAIb,UAAGW,EAAO,GAAI,IAAK,IAAIX,UAAGW,EAAO,GAAI,QAEzDG,GAAaJ,GAAe,GAI5BK,GAEF,CACFd,MAAO,IAAID,UAAG,KACdzW,SAAU,IAAIyW,UAAG,KACjBgB,aAAc,IAAIhB,UAAG,KACrBiB,gBAAiB,IAAIjB,UAAG,KACxBkB,aAAc,IAAIlB,UAAG,QACrBmB,QAAS,IAAInB,UAAG,QAChBoB,SAAU,IAAIpB,UAAG,QACjBqB,YAAa,IAAIrB,UAAG,SAGhBsB,GAAU,IAAItB,UAAG,KACjBuB,GAAS,IAAIvB,UAAG,KAChBwB,GAAgB,IAAIxB,UAAG,SAAU,IACjCyB,GAAgB,IAAIzB,UAAG,WAAY,IACnC0B,GAAgB,IAAI1B,UAAG,mBAAoB,IAE3C2B,GAAW,IAAI3B,UACnB,kEACA,IAGI4B,GAAe,IAAI5B,UACvB,kEACA,IAGI6B,GAAqB,+CAErBC,GAAQ,IAAI9B,UAChB,0EACA,IAEI+B,GAAa,IAAI/B,UACrB,0EACA,IClCK,SAASgC,GAAcC,SACG,OAAxBA,EAAIhvB,UAAU,EAAG,GAGnB,SAASivB,GAAcC,GAC5BC,UAAOJ,GAAcG,GAAMN,QACrBQ,EAAQ,IAAIrC,UAAGsC,EAASC,gBAAgBJ,GAAM,IACpDC,UAAOC,EAAMG,IAAIlB,KACjBc,UAAOC,EAAMI,GAAGd,KAGX,SAASe,GACdP,EACA5W,OACAc,8DAA0Bt2B,EAEpB4sC,EAAML,EAASM,YAAYT,GAC3BU,EAAOF,EAAIllC,MAAM8tB,EAAOc,GACxByW,EAAMR,EAASS,eAAeF,UAC7BC,EAGF,SAASE,GACd1hB,EACAC,EACA0hB,EACAz0B,OAEM00B,EAAY3C,UAAOC,SAAS2C,OAAO7hB,GAAO8hB,OAAO,OACjDC,EAAkB9C,UAAOC,SAAS2C,OAAO5hB,GAAa6hB,OAAO,OAC7DE,EAAWZ,GAAeQ,GAAY,IACtCK,EAAiBb,GAAeW,GAAkB,IAClDG,EAAiBd,GAAeO,GAAkB,IAClDQ,EAAiBf,GAAeO,GAAkB,IAAK,4BAC3CK,eAAaC,eAAmBC,eAAmBC,eAAmBj1B,GAGnF,SAASk1B,GAAiB3uC,EAAayZ,UACrC,IAAIwxB,UACTO,UACGC,SACA2C,OACCb,EAASqB,YACPrB,EAASC,gBAAgBxtC,GACvButC,EAASsB,cAActB,EAASuB,YAAYr1B,GAAQ,KAGzD40B,OAAO,OACV,IAIG,SAASU,GAASC,WACnBxtC,EAAI,EACJxB,EAAU2uC,GAAiBK,EAAYxtC,IAEnCxB,EAAI0tC,GAAGV,GAAWrzB,IAAIqzB,GAAWiC,IAAIlC,OAC3C/sC,EAAM2uC,GAAiB3uC,EAAImX,SAAS,IAAK3V,GACzCA,EAAIA,WAECxB,EAAIivC,IAAIlC,IAAO51B,SAAS,OAG1B,SAAS+3B,GAAWF,UAClB7D,GAAQgE,eAAeH,EAAY,OAGrC,SAASI,GAAmBC,EAActF,UAC/CsD,UAAOJ,GAAcoC,GAAOvC,IAMrBoC,GAAWH,GALCO,QAChBC,eAAeC,OAAOp4B,KAAKi4B,EAAK3mC,MAAM,GAAI,QAC1C+mC,WAAW1F,GACX2F,YACAC,wBAIE,SAASC,GAAUC,OAAqBC,iEACtCD,EAAQD,UAAUE,EAAY,OAGhC,SAASC,GAAkBF,UACzBD,GAAUC,GAAS,GAGrB,SAASG,GAAwBC,UAC/B9E,GAAQ+E,cAAc3C,EAAS4C,WAAWF,IAG5C,SAASG,GAAyBpB,UAChC7D,GAAQgE,eAAeH,EAAY,OAGrC,SAASqB,GAAeJ,OACvBJ,EAAUG,GAAwBC,UACjC1C,EAASsB,cAAegB,EAAgBS,IAAIC,OAAOp5B,SAAS,IAAK,GAGnE,SAASq5B,GAAUjF,UACjBA,EACJ7iC,MAAM,GACN+nC,cACAC,MAAM,WAGJ,SAASC,GAAoBvD,WAE5BwD,EADcJ,GAAUpD,GACH5+B,KAAI,SAACqiC,UACvBC,SAASD,EAAK,OAMjBE,EADkBP,GADtB,sEAEiChiC,KAAI,SAACqiC,UAC/BC,SAASD,EAAK,OAGnBG,EAAoB,GACpBC,EAAM,GACHA,GAAO,GACZD,EAAaC,GAAOC,UAAQpD,KAAKqD,IAC/BD,eAAaE,KAAKR,EAAOK,IACzBC,eAAaE,KAAKL,EAAWE,KAE/BA,GAAO,GAETD,EAAeA,EAAaxiC,KAAI,SAACqiC,UACxBA,EAAI53B,KAAK,QAEL,GAAK,eAEZo4B,EAAoBL,EAAaxiC,KAAI,SAACqiC,UACnCC,SAASD,EAAK,GAAKt2B,KAAKquB,IAAI,EAAG,GAAK,EACvCkI,SAASD,EAAK,GAAG15B,SAAS,eACtB25B,SAASD,EAAK,GAAG15B,SAAS,0BAExBk6B,EAAap4B,KAAK,KAGzB,SAASq4B,GAAYlE,WAEpBwD,EADcJ,GAAUpD,GACH5+B,KAAI,SAACqiC,UACvBC,SAASD,EAAK,OAKjBE,EADkBP,GADtB,sEAEiChiC,KAAI,SAACqiC,UAC/BC,SAASD,EAAK,OAGnBG,EAAoB,GACpBC,EAAM,GACHA,GAAO,GACZD,EAAaC,GAAOC,UAAQpD,KAAKqD,IAC/BD,eAAaE,KAAKR,EAAOK,IACzBC,eAAaE,KAAKL,EAAWE,KAE/BA,GAAO,MAKHI,GAHNL,EAAeA,EAAaxiC,KAAI,SAACqiC,UACxBA,EAAI53B,KAAK,QAEqBzK,KAAI,SAACqiC,UACnCC,SAASD,EAAK,GAAKt2B,KAAKquB,IAAI,EAAG,GAAK,EACvCkI,SAASD,EAAK,GAAG15B,SAAS,eACtB25B,SAASD,EAAK,GAAG15B,SAAS,0BAExBk6B,EAAap4B,KAAK,KAGzB,SAASs4B,GAAazvB,OACvB0vB,EACA1xB,SACIgC,EAAM/c,KAAK0sC,mBACZ,MACHD,EAAYjE,EAASmE,YACnBC,YAAkB,CAAC,UAAW,CAAC,UAAUjpC,MAAM,EAAG,eAGjD,QAEHykC,GADArtB,EAAgBgC,EAAqBtC,KAAKM,cAE1C0xB,EAAYjE,EAASmE,YACnBC,YAAkB,CAAC,UAAW,CAAC,wBAAwBjpC,MAAM,EAAG,IAC9D6kC,EAASqE,QAAQrE,EAASC,gBAAgB1tB,GAAe,eAG1D,SAEHqtB,GADArtB,EAAgBgC,EAAsBtC,KAAKM,cAE3C0xB,EAAYjE,EAASmE,YACnBC,YAAkB,CAAC,UAAW,CAAC,iCAAiCjpC,MAC9D,EACA,IACE6kC,EAASqE,QAAQrE,EAASC,gBAAgB1tB,GAAe,eAG5D,iBAEHqtB,GADArtB,EAAgBgC,EAA6BtC,KAAKM,cAElD0xB,EAAYjE,EAASmE,YACnBC,YAAkB,CAAC,UAAW,CAAC,gCAAgCjpC,MAC7D,EACA,IACE6kC,EAASqE,QAAQrE,EAASC,gBAAgB1tB,GAAe,eAG5D,kBAEHqtB,GADArtB,EAAgBgC,EAA8BtC,KAAKM,cAEnD0xB,EAAYjE,EAASmE,YACnBC,YACE,CAAC,UACD,CAAC,yCACDjpC,MAAM,EAAG,IACT6kC,EAASqE,QAAQrE,EAASC,gBAAgB1tB,GAAe,yBAIvD,IAAI5b,oCAA6B4d,EAAM/c,cAE1CysC,EAIF,SAASK,GAAa/vB,OAAc0Q,yDAAU,WAC5C,IAAIsf,UACTR,GACEK,YAAkB,CAAC,QAAS,WAAY,CAACJ,GAAazvB,GAAQ0Q,MAK7D,SAASuf,GAAezxB,EAAYC,UAClCgtB,EAASmE,YAAYnE,EAASyE,qBAAc1xB,gBAAQC,SAGtD,SAAS0xB,GAAmB3xB,EAAYC,UACtCgtB,EAASmE,YACdC,YACE,CAAC,SACD,CAACpE,EAAS2E,uBAAgB5xB,gBAAQC,WAKjC,SAAS4xB,GAAWrwB,OACnBswB,EAAYP,GAAa/vB,SAEA,QAA7BA,EAAM/c,KAAK0sC,eACkB,UAA7B3vB,EAAM/c,KAAK0sC,cAEJW,EAEwB,WAA7BtwB,EAAM/c,KAAK0sC,eACb3vB,EAAMtC,KAAQsC,EAAsBtC,KACpB,IAAIsyB,UAClBR,GACEK,YACE,CAAC,SAAU,UAAW,WACtB,CD1SkB,OC0SIS,EAAUC,SAASxB,IAAK/uB,EAAMtC,KAAKU,cAMjE4B,EAAMtC,KAAQsC,EAA8BtC,KAC5B,IAAIsyB,UAClBnB,GACEgB,YACE,CAAC,SAAU,UAAW,WACtB,CDpTyB,YCsTvBS,EAAUC,SAASxB,IACnBoB,GAAmBnwB,EAAMtC,KAAKc,GAAIwB,EAAMtC,KAAKe,gBAQhD,SAAS+xB,GAAgBxwB,SACT,iBAAVA,GACTqrB,GAAcrrB,GACPA,GAEFqwB,GAAWrwB,GAAO+uB,IAGpB,SAAS0B,GAAS1zB,WACnBitB,EAAQC,GACHvqC,EAAI,EAAGA,EAAIqd,EAAMpd,OAAQD,IAAK,KACjCuQ,EAAI,IAAIk5B,UAAGsC,EAASC,gBAAgB3uB,EAAMrd,IAAK,IACnD6rC,UAAOt7B,EAAE07B,IAAIlB,KAAYx6B,EAAE27B,GAAG1C,6BAA0BnsB,EAAMrd,SACzD,IAAIk1B,EAAI,EAAGA,EAAI,IAAKA,IAAK,KACtB8b,EAAK7G,GAAe,EAAQ,IAAJnqC,EAAUk1B,GACxC2W,WAAQvB,EAAMyE,OAAOrK,GAAGsM,EAAGjC,SACM,IAA7Bx+B,EAAEo/B,IAAI3E,IAAQiG,aAChB3G,EAAQA,EAAMlyB,IAAI44B,IAEpBzgC,EAAIA,EAAE2gC,KAAK,WAGR5G,EAAMyE,OAAOp5B,SAAS,IAKxB,SAASw7B,GAAcC,EAAgBC,EAAgBptC,OAEvD,IAAIjE,EAAI,EAAGA,EAAIiE,EAAOhE,OAAQD,IACjC6rC,UAAO5nC,EAAOjE,GAAGisC,IAAImF,IACrBvF,UAAO5nC,EAAOjE,GAAGksC,GAAGmF,IAIjB,SAASC,GACdC,EACAC,EACAC,EACAC,EACAC,EACA9xB,EACAyD,OACAsuB,yDAAW,IACXvwB,yDAAW,IAELwwB,EAAoBrH,GAAuB+G,GAE3CO,EAAW,IAAIrI,UAAG+H,GAClBO,EAAW,IAAItI,UAAGgI,GAClBO,EAAY,IAAIvI,UAAGiI,EAAS,IAC5BO,EAAY,IAAIxI,UAAGkI,EAAS,IAC5BO,EAAU,IAAIzI,UAAG5pB,GAEjBsyB,EAAwB,IAAI1I,UAAGnmB,GAE/B8uB,EAAa,IAAI3I,UAAGmI,GACpBS,EAAa,IAAI5I,UAAGpoB,EAAU,WAGpC8vB,GAAcpG,GAASG,GAAe,CACpC4G,EACAC,EACAK,EACAF,IAGFf,GAAcpG,GAASI,GAAe,CAAC6G,EAAWC,EAAWI,IAE7DlB,GAAcpG,GAASE,GAAe,CAACkH,IAEhC,CACLN,kBAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,QAAAA,EACAC,sBAAAA,EACAC,WAAAA,EACAC,WAAAA,GAIG,SAASC,GACdT,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,OASII,EAAaV,SAOjBU,GADAA,GADAA,GADAA,GADAA,GADAA,EAAaA,EAAWC,MAAM,IAAIp6B,IAAI05B,IACdU,MAAM,IAAIp6B,IAAI25B,IACdS,MAAM,IAAIp6B,IAAI45B,IACdQ,MAAM,IAAIp6B,IAAI65B,IACdO,MAAM,IAAIp6B,IAAI85B,IACdM,MAAM,IAAIp6B,IAAI+5B,GAC/BpG,EAASmE,YAAYqC,EAAW58B,SAAS,KAG3C,SAAS88B,GACdlB,EACAC,EACAC,EACAC,EACAC,EACA9xB,EACAyD,SAUIguB,GACFC,EACAC,EACAC,EACAC,EACAC,EACA9xB,EACAyD,UAEKgvB,KAhBLT,oBACAC,WACAC,WACAC,YACAC,YACAC,UACAC,uBAqBG,SAASO,GACdnB,EACAC,EACAC,EACAC,EACAC,EACA9xB,EACAyD,EACAsuB,EACAvwB,SAYIiwB,GACFC,EACAC,EACAC,EACAC,EACAC,EACA9xB,EACAyD,EACAsuB,EACAvwB,GAlBAwwB,IAAAA,kBACAC,IAAAA,SACAC,IAAAA,SACAC,IAAAA,UACAC,IAAAA,UACAC,IAAAA,QACAC,IAAAA,sBACAC,IAAAA,WACAC,IAAAA,kBAaMd,OACD,sBACIoB,GACLd,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,OAEC,wBACG3vC,MAAM,qCAENA,MAAM,6BAIX,SAASiwC,GACdd,EACAe,EACAC,EACAC,EACAC,EACAb,EACAC,EACAC,EACAC,OAaIW,EAAcF,EAGlBE,GADAA,GADAA,EAAcA,EAAYR,MAAM,IAAIp6B,IAAI26B,IACdP,MAAM,IAAIp6B,IAAIi6B,IACdG,MAAM,IAAIp6B,IAAI85B,OAepCe,EAAcpB,SAKlBoB,GADAA,GADAA,GADAA,GADAA,EAAcA,EAAYT,MAAM,IAAIp6B,IAAIg6B,IACdI,MAAM,IAAIp6B,IAAIw6B,IACdJ,MAAM,IAAIp6B,IAAIy6B,IACdL,MAAM,IAAIp6B,IAAI+5B,IACdK,MAAM,IAAIp6B,IAAI2yB,IAIjC,CAFIgB,EAASmE,YAAY8C,EAAYr9B,SAAS,KAC1Co2B,EAASmE,YAAY+C,EAAYt9B,SAAS,MAIhD,SAASu9B,GAAYC,EAAYC,EAAYC,UAC3CtC,GAAS,CAACA,GAAS,CAACoC,EAAIC,IAAMC,IAGhC,SAASC,UACdC,IAAAA,UACAC,IAAAA,SACA5rB,IAAAA,WACAE,IAAAA,UACAjI,IAAAA,MACAyD,IAAAA,oBACAqE,IAAAA,UACAE,IAAAA,SACA1G,IAAAA,SACAywB,IAAAA,SACAvwB,IAAAA,SAGA8vB,GAAcpG,GAASK,GAAU,CAC/B,IAAI3B,UAAGsC,EAASC,gBAAgBrkB,GAAY,IAC5C,IAAI8hB,UAAGsC,EAASC,gBAAgBnkB,GAAW,IAC3C,IAAI4hB,UAAGsC,EAASC,gBAAgB7qB,GAAW,UAUvCsyB,EAAWP,GALNvrB,EACAE,EACA1G,QAKMuxB,GACf,eACAa,EACAC,EACA5rB,EACAE,EACAjI,EACAyD,EACAsuB,EACAvwB,MAGI0oB,EAAOmJ,GAAYO,oBACzBtC,GAAcpG,GAASM,GAAc,CACnC,IAAI5B,UAAGsC,EAASC,gBAAgBjC,GAAO,MAElCA,EAGF,SAAS2J,GACdH,EACAC,EACA5rB,EACAE,EACAH,EACAE,EACAhI,EACAyD,UAaO4vB,GAXIvrB,EACAE,EACA4qB,GACT,QACAc,EACAC,EACA5rB,EACAE,EACAjI,EACAyD,IAKG,SAASqwB,GACdtxB,EACAxC,EACA+zB,EACA1oB,EACA2oB,EACAC,EACAxwB,UAaO4vB,GAXIhoB,EACA4lB,GAAgBgD,GAChBrB,GACT,WACAmB,EACAC,EACAxxB,EACA0oB,GAAQp1B,WACRkK,EACAyD,IAKG,SAASywB,GAAoBp0B,EAAkBE,OAChD0yB,EAAa,IAAI9I,UAAG,eAIxB8I,GAHAA,EAAaA,EACVC,MAAM,KACNp6B,IAAI,IAAIqxB,UAAG,IAAI9oB,YAAUhB,GAAUq0B,aACdxB,MAAM,IAAIp6B,IAAI,IAAIqxB,UAAG5pB,IACtCksB,EAASmE,YAAYqC,EAAW58B,SAAS,KAG3C,SAASs+B,GACdt0B,EACAqB,EACAnB,UAEOkxB,GAAS,CACdA,GAAS,CAAC/vB,IACV+yB,GAAoBp0B,EAAUE,KAI3B,SAASq0B,GAA6Bv0B,OACvC4yB,EAAa,IAAI9I,UAAG,eACxB8I,EAAaA,EACVC,MAAM,KACNp6B,IAAI,IAAIqxB,UAAG,IAAI9oB,YAAUhB,GAAUq0B,YAC/BjI,EAASmE,YAAYqC,EAAW58B,SAAS,KAG3C,SAASw+B,GACdx0B,EACAqB,UAEO+vB,GAAS,CACdA,GAAS,CAAC/vB,IACVkzB,GAA6Bv0B,KAI1B,SAASy0B,GACd/xB,EACAxC,EACAO,EACA8K,EACAlK,UAIOkyB,GAAYhoB,EAFR4lB,GAAgB9vB,GAChByxB,GAAc,UAAW,IAAKryB,EAAS,IAAKiC,EAAQxC,EAAO,KAIjE,SAASw0B,GACdhyB,EACAxC,EACAO,EACA8K,EACAlK,UAIOkyB,GAAYhoB,EAFR4lB,GAAgB9vB,GAChByxB,GAAc,WAAYryB,EAAS,IAAKiC,EAAQ,IAAKxC,EAAO,KAIlE,SAASy0B,GAAWC,UACzBA,EAAMxI,EAASC,gBAAgBuI,IAC/BA,EAAM,IAAI9K,UAAG8K,EAAK,IAAI5+B,SAAS,KAEvB1V,QAAU,GAGTs0C,GAET1I,UAAsB,KAAf0I,EAAIt0C,kBAEDs0C,QAGL,SAASC,GAAKnG,EAAqBkG,UACjClG,EAAQmG,KAAKF,GAAWC,IAO1B,SAASE,GAAmBC,UAC1B3I,EAAS4I,aACd5I,EAASqE,QAAQsE,EAAIjgB,EAAE9e,SAAS,IAAK,IACnCo2B,EAASqE,QAAQsE,EAAIt4B,EAAEzG,SAAS,IAAK,KAKpC,SAASi/B,GAAsBF,gBAG7B3I,EAAS4I,aACd5I,EAASqE,QAAQsE,EAAIjgB,EAAE9e,SAAS,IAAK,IACnCo2B,EAASqE,QAAQsE,EAAIt4B,EAAEzG,SAAS,IAAK,IACrCo2B,EAASqE,mBAAQsE,EAAIG,oCAAel/B,SAAS,MAAO,GAAI,IAIvD,SAASm/B,GAAoBvhC,UAC3BA,EAAEwhC,QAC8B,IAAnC,IAAItL,UAAGl2B,EAAG,IAAIyhC,IAAI,IAAIvL,UAAG,KACvB,IAAIA,UAAGl2B,EAAG,IAAI4E,IAAI,IAAIsxB,UAAG,KAAKwH,WAC9B,IAAIxH,UAAGl2B,EAAG,IAAI09B,gBAChBzxC,EAGC,SAASy1C,GAAqBP,OAAaQ,yDAAO,UACvDR,EAAM3I,EAASC,gBAAgB0I,GACxB,CACLjgB,EAAG,IAAIgV,UAAGiL,EAAIh4B,UAAU,EAAGw4B,GAAO,OAClC94B,EAAG,IAAIqtB,UAAGiL,EAAIh4B,UAAUw4B,EAAa,EAAPA,GAAW,OACzCL,cAAeC,GAAoBJ,EAAIh4B,UAAiB,EAAPw4B,EAAiB,EAAPA,EAAW,KAInE,SAASC,GAAmBnyB,OAC7BuvB,EAAa,IAAI9I,UAAG,eACxB8I,EAAaA,EAAWC,MAAM,IAAIp6B,IAAI,IAAIqxB,UAAGzmB,IACtC+oB,EAASmE,YAAYqC,EAAW58B,SAAS,KAG3C,SAASy/B,GAAkBC,UACzBtE,GAAS,CAACoE,GAAmBE,cAGhBC,2EAAf,WACLnnB,EACAonB,qFAEkBN,YAA2BM,EAAOC,YAAYrnB,6BAA1D3G,mCACCotB,GAAsBptB,sECjzBhB,SAASiuB,GAAgBxlC,GAItC,OAHAwlC,GAAkBn1C,OAAOgG,eAAiBhG,OAAOyD,eAAiB,SAAyBkM,GACzF,OAAOA,EAAE1J,WAAajG,OAAOyD,eAAekM,KAEvBA,GCHV,SAASylC,GAAe9uC,EAAQ+uC,GAC7C,MAAQr1C,OAAOK,UAAUK,eAAe0C,KAAKkD,EAAQ+uC,IAEpC,QADf/uC,EAAS7C,GAAe6C,MAI1B,OAAOA,ECNM,SAASgvC,KAiBtB,OAfEA,GADqB,oBAAZC,SAA2BA,QAAQrN,IACrCqN,QAAQrN,IAER,SAAc1oC,EAAQ61C,EAAUjvB,GACrC,IAAIovB,EAAOC,GAAcj2C,EAAQ61C,GACjC,GAAKG,EAAL,CACA,IAAIE,EAAO11C,OAAO21C,yBAAyBH,EAAMH,GAEjD,OAAIK,EAAKxN,IACAwN,EAAKxN,IAAI9kC,KAAKrE,UAAUY,OAAS,EAAIH,EAAS4mB,GAGhDsvB,EAAKr3C,SAIJW,MAAMH,KAAME,WClBX,SAAS62C,GAAgBjmC,EAAG0G,GAMzC,OALAu/B,GAAkB51C,OAAOgG,gBAAkB,SAAyB2J,EAAG0G,GAErE,OADA1G,EAAE1J,UAAYoQ,EACP1G,IAGcA,EAAG0G,GCLb,SAASw/B,GAAUC,EAAUC,GAC1C,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIz2C,UAAU,sDAGtBU,OAAOC,eAAe61C,EAAU,YAAa,CAC3Cz3C,MAAO2B,OAAO4B,OAAOm0C,GAAcA,EAAW11C,UAAW,CACvDwF,YAAa,CACXxH,MAAOy3C,EACP/1C,UAAU,EACVD,cAAc,KAGlBC,UAAU,IAERg2C,GAAY/vC,GAAe8vC,EAAUC,GChB5B,SAASC,GAAQ50C,GAG9B,OAAO40C,GAAU,mBAAqBp1C,QAAU,iBAAmBA,OAAOE,SAAW,SAAUM,GAC7F,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAO,mBAAqBR,QAAUQ,EAAIyE,cAAgBjF,QAAUQ,IAAQR,OAAOP,UAAY,gBAAkBe,IAC/GA,GCLE,SAAS60C,GAA2Br3C,EAAMwE,GACvD,GAAIA,IAA2B,WAAlB4yC,GAAQ5yC,IAAsC,mBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAI9D,UAAU,4DAGtB,OCTa,SAAgCV,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIs3C,eAAe,6DAG3B,OAAOt3C,EDIAu3C,CAAsBv3C,kbEClBw3C,oBAA4BC,0CAC3BpB,gCACJqB,GAAMC,GAAWtB,mCAGzB,SACEuB,EACAC,EACAC,sDAEoBF,EAAOC,EAASC,GAAa,wCAEnD,SACEF,EACAC,EACAC,oEAEkCF,EAAOC,EAASC,GAAa,0BAEjE,SAAOl7B,sDACeA,0BAEtB,SAAQy5B,uDACeA,4BAEvB,SACEz5B,EACAm7B,UAEO,IAAIC,WAASp7B,EAAS86B,GAAMK,YAIjCL,GAAO,CACX,CACEO,OAAQ,CACN,CACEC,aAAc,SACdhxC,KAAM,QACN7C,KAAM,UAER,CACE6zC,aAAc,SACdhxC,KAAM,UACN7C,KAAM,WAGV8zC,gBAAiB,aACjB9zC,KAAM,eAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,QACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,WACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,QACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,OACdhxC,KAAM,WACN7C,KAAM,SAGV6C,KAAM,iBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,OACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,KACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,WACN7C,KAAM,SAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,KACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,UACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,QACN7C,KAAM,YAGV6C,KAAM,YACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,GACR/wC,KAAM,UACNoxC,QAAS,CACP,CACEJ,aAAc,SACdhxC,KAAM,GACN7C,KAAM,WAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,cACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,QACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,mBACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,GACN7C,KAAM,SAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,GACR/wC,KAAM,OACNoxC,QAAS,CACP,CACEJ,aAAc,SACdhxC,KAAM,GACN7C,KAAM,WAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,UACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,OACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,KACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,mBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,OACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,KACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,QACN7C,KAAM,UAGV6C,KAAM,mBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,OACdhxC,KAAM,WACN7C,KAAM,SAGV6C,KAAM,oBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,SACdhxC,KAAM,cACN7C,KAAM,WAGV6C,KAAM,oBACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,GACN7C,KAAM,SAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,GACR/wC,KAAM,SACNoxC,QAAS,CACP,CACEJ,aAAc,SACdhxC,KAAM,GACN7C,KAAM,WAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,QACN7C,KAAM,YAGV6C,KAAM,eACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,QACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,QACN7C,KAAM,YAGV6C,KAAM,sBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,WACNoxC,QAAS,CACP,CACEJ,aAAc,SACdhxC,KAAM,GACN7C,KAAM,WAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,GACR/wC,KAAM,cACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,OACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,KACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,eACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,GACR/wC,KAAM,OACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,aAIJszC,GACJ,2suBC5cWY,2EACX,SAAe37B,EAAiBm7B,UACvB,IAAIC,WAASp7B,EAAS86B,GAAMK,YAIjCL,GAAO,CACX,CACEc,SAAS,EACTL,gBAAiB,UACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,UACNoxC,QAAS,CACP,CACEJ,aAAc,SACdhxC,KAAM,GACN7C,KAAM,WAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,QACdhxC,KAAM,OACN7C,KAAM,UAGV6C,KAAM,aACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACE+zC,WAAW,EACXH,OAAQ,GACR/wC,KAAM,YACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,mBACN7C,KAAM,YAGV6C,KAAM,yBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,oBACN7C,KAAM,YAGV6C,KAAM,uBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,GACR/wC,KAAM,yBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,qBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,GACR/wC,KAAM,cACN7C,KAAM,SAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,uBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,sBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,2BACNoxC,QAAS,CACP,CACEJ,aAAc,SACdhxC,KAAM,GACN7C,KAAM,WAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,qBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,iBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,yBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,4CACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,gCACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,qCACNoxC,QAAS,CACP,CACEJ,aAAc,YACdhxC,KAAM,YACN7C,KAAM,cAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,yBACNoxC,QAAS,CACP,CACEJ,aAAc,YACdhxC,KAAM,YACN7C,KAAM,cAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,yBACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,GACN7C,KAAM,SAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,WACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,SACN7C,KAAM,SAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,aACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,GACN7C,KAAM,SAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,uBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,uBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,eACN7C,KAAM,YAGV6C,KAAM,iBACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,GACN7C,KAAM,SAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,cACN7C,KAAM,YAGV6C,KAAM,0BACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,qBACN7C,KAAM,YAGV6C,KAAM,qBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,SACdhxC,KAAM,aACN7C,KAAM,WAGV6C,KAAM,+BACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,SACdhxC,KAAM,aACN7C,KAAM,WAGV6C,KAAM,mBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,6BACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,iBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,WACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,qBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,aACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,mBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,qBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,4BACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,+BACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,2BACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,qBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,6BACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,+BACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,gBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,0BACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,4BACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,mBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,qBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,aACN7C,KAAM,YAGV6C,KAAM,qBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,aACN7C,KAAM,YAGV6C,KAAM,uBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,QACdhxC,KAAM,YACN7C,KAAM,UAGV6C,KAAM,qBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,oBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,sBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,SACN7C,KAAM,YAGV6C,KAAM,oBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,qBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,uBACN7C,KAAM,SAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,qBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,yBACN7C,KAAM,SAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,UACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,UACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,UACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,gBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,aACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,oBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,iBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,gBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,wBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,eACNoxC,QAAS,CACP,CACEJ,aAAc,QACdhxC,KAAM,YACN7C,KAAM,UAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,yBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,oBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,YACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,SACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,2BACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,MACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,6BACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,oBACN7C,KAAM,YAGV6C,KAAM,aACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,uBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,iBACN7C,KAAM,YAGV6C,KAAM,aACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,GACN7C,KAAM,SAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,cACN7C,KAAM,YAGV6C,KAAM,eACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,GACN7C,KAAM,SAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,cACN7C,KAAM,YAGV6C,KAAM,cACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,GACN7C,KAAM,SAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,GACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,GACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,GACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,GACN7C,KAAM,UAGV6C,KAAM,mBACNoxC,QAAS,CACP,CACEJ,aAAc,SACdhxC,KAAM,GACN7C,KAAM,WAGVm0C,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,cACN7C,KAAM,YAGV6C,KAAM,mBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,UAGV6C,KAAM,gBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,SAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,gBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,qBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,UAGV6C,KAAM,eACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,oBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,qBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,uBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,sBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,WACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,cACN7C,KAAM,UAGV6C,KAAM,kBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,cACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,gBACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,kBACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,aACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACE+zC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTH,aAAc,UACdhxC,KAAM,iBACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACEg0C,SAAS,EACTH,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,gBACN7C,KAAM,SAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,SACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,iBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,eACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,OACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,qBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,SACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,oBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,MACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,eACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,OACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,GACR/wC,KAAM,qBACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,SACN7C,KAAM,YAGVm0C,SAAS,EACTL,gBAAiB,OACjB9zC,KAAM,YAER,CACEqF,UAAU,EACVuuC,OAAQ,CACN,CACEC,aAAc,YACdhxC,KAAM,cACN7C,KAAM,aAER,CACE6zC,aAAc,YACdhxC,KAAM,kBACN7C,KAAM,cAGV6C,KAAM,cACNoxC,QAAS,GACTE,SAAS,EACTL,gBAAiB,aACjB9zC,KAAM,aC74DJqzC,GAAO,CACX,CACEO,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,UACNoxC,QAAS,GACTH,gBAAiB,UACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,UACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,aACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,YACNoxC,QAAS,CACP,CACEJ,aAAc,UACdhxC,KAAM,GACN7C,KAAM,YAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,UAGV6C,KAAM,eACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,WACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,cACN7C,KAAM,UAGV6C,KAAM,kBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,cACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,gBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,aACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,2gBAMR,kBACS,IAAIo0C,QAAMC,UAAUhB,2BAE7B,SAAe96B,EAAiBm7B,UACvB,IAAIC,WAASp7B,EAAS86B,GAAMK,kBALfL,IChPxB,IAAMA,GAAO,CACX,CACEO,OAAQ,CACN,CACEC,aAAc,eACdhxC,KAAM,OACN7C,KAAM,YAGV8zC,gBAAiB,aACjB9zC,KAAM,eAER,CACE4zC,OAAQ,GACR/wC,KAAM,MACNoxC,QAAS,CACP,CACEJ,aAAc,eACdhxC,KAAM,GACN7C,KAAM,YAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,YAGV6C,KAAM,eACNoxC,QAAS,CACP,CACEJ,aAAc,OACdhxC,KAAM,GACN7C,KAAM,SAGV8zC,gBAAiB,OACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,SAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,qBACNoxC,QAAS,GACTH,gBAAiB,UACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,SAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,kBACN7C,KAAM,YAGV6C,KAAM,qBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,SAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,wBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,SAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,sBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,SAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,YAGV6C,KAAM,yBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,SAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,UACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,2BACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,SAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,YAGV6C,KAAM,wBACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,YAER,CACE4zC,OAAQ,CACN,CACEC,aAAc,UACdhxC,KAAM,SACN7C,KAAM,WAER,CACE6zC,aAAc,UACdhxC,KAAM,WACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,YACN7C,KAAM,SAER,CACE6zC,aAAc,UACdhxC,KAAM,YACN7C,KAAM,WAER,CACE6zC,aAAc,QACdhxC,KAAM,cACN7C,KAAM,UAGV6C,KAAM,6BACNoxC,QAAS,GACTH,gBAAiB,aACjB9zC,KAAM,aAIJszC,GACJ,yuXAEWgB,oBAA8BlB,0CAC7BpB,gCACJqB,GAAMC,GAAWtB,mCAGzB,SACEuC,EACAd,sDAEoBc,EAAMd,GAAa,wCAEzC,SACEc,EACAd,oEAEkCc,EAAMd,GAAa,0BAEvD,SAAOl7B,sDACeA,0BAEtB,SAAQy5B,uDACeA,oCAIvB,kBACS,IAAIoC,QAAMC,UAAUhB,2BAE7B,SACE96B,EACAm7B,UAEO,IAAIC,WAASp7B,EAAS86B,GAAMK,mlBAhC1BY,cAuBgBhB,OAvBhBgB,SAwBWjB,QCpRXmB,yBAQDC,EACAzC,OACA0C,yDdlFwB,8CcgFxBD,aAAAA,OACAzC,OAAAA,OACA0C,kBAAAA,GAEH1C,EAAOvlB,eACJ,IAAIttB,MAAM,kDAEZw1C,EAAe,QAChBC,MAAQ,CACXC,kBAAK,WAAO55C,EAAawf,mEACvBk6B,EAAQ15C,GAAOwf,4FAEjBwqB,gCAAK,WAAOhqC,4FACH05C,EAAQ15C,qGAEjBwZ,qBAAQ,WAAOxZ,0EACN05C,EAAQ15C,4FAGnB4pC,UAASjpC,sGAIX,yFACS2K,YACC3K,KAAKo2C,OAAO8C,4CAClB,SAAAv8B,UAAWA,EAAQmzB,oBACnB/yB,GAAWqpB,YACXZ,2KAIJ,cACOxlC,KAAKm5C,qBACHvM,EAASmE,YACdrB,GAAeN,GAAkBpvC,KAAKm5C,gEAI1C,WAA+B/P,yFACPppC,KAAKyuC,mBAAmBrF,iBAAxC8F,2BACCtC,EAASmE,YAAYrB,GAAeN,GAAkBF,qIAG/D,SAA2BnuB,OACpB/gB,KAAKo2C,OAAOvlB,eACT,IAAIttB,MAAM,2DAEX+0C,GAAec,QAAQr4B,EAAiB/gB,KAAKo2C,+CAGtD,SAA+Br1B,OACxB/gB,KAAKo2C,OAAOvlB,eACT,IAAIttB,MAAM,2DAEXm1C,GAAsBU,QAAQr4B,EAAiB/gB,KAAKo2C,0CAI7D,WAAkBiD,kFACVzO,EAAO0O,YAAUC,cAAY9R,KAAKC,UAAU2R,UACtCvD,YAA2B91C,KAAKo2C,OAAOC,YAAYzL,6BAAzD2K,mCACCE,GAAsBF,qIAI/B,WAAqB8D,qFACPvD,YAA2B91C,KAAKo2C,OAAOC,YAAYgD,6BAAzD9D,mCACCE,GAAsBF,uIAI/B,WAAuB8D,+FACFr5C,KAAKw5C,iCAAlBn6C,SAAsCo6C,WAAW,OACjDC,EAAa,IAAIC,aAAWrN,GAAcjtC,GAAOA,cAAWA,IAC5DurC,EAAO0O,YAAUC,cAAY9R,KAAKC,UAAU2R,KAC5ChxB,EAAYuxB,gBAAcF,EAAWG,WAAWjP,sBAC/CviB,6IAIT,iGACe2oB,iBACX,CAAC,SAAU,UAAW,oBAGdhxC,KAAKk5C,gDACLl5C,KAAKovC,oDAFX,+BAHExE,gCAQkB5qC,KAAKo2C,OAAOC,YAAYzL,kBAA1CviB,2BACCA,oIAOT,WACEuD,EACAC,EACA/S,uFAEaw0B,QACX1hB,OACAC,WACM7rB,KAAKk5C,4CACXpgC,EAJIswB,0CAMuBppC,KAAKovC,kBAAkBhG,kBAA9CvnB,2BACCA,wIAGT,uBACErB,IAAAA,SACAqB,IAAAA,eACAnB,IAAAA,aAMO/V,GACL27B,cAAoB,sGAClBrsB,EAAK6/B,qBAAqBj4B,gDAE5BwkB,IAAS,kBAAMC,GAAoBrsB,EAAKu/B,qBACxCnT,IAAS,SAAA6I,OAGD6K,EAAiBzE,GADLD,GAAKnG,EADX4F,GAAmBt0B,EAAUqB,EAAgBnB,YAGlD2lB,GAAM0T,oDAKnB,uBACEv5B,IAAAA,SACAqB,IAAAA,sBAKOlX,GACL27B,cAAoB,sGAClB0T,EAAKF,qBAAqBj4B,gDAE5BwkB,IAAS,kBAAMC,GAAoB0T,EAAKR,qBACxCnT,IAAS,SAAA6I,OAGD6K,EAAiBzE,GADLD,GAAKnG,EADX8F,GAA4Bx0B,EAAUqB,YAG3CwkB,GAAM0T,gDAKnB,WACEl4B,EACAZ,EACA8K,EACA3K,EACAV,+FAEM1gB,KAAK85C,qBAAqBj4B,iBAC1BuzB,EAAMH,GACV7zB,EAAS5K,WACTkK,EACAO,EACA8K,EACAlK,YAEoB7hB,KAAKw5C,iCAArBtK,SACA7mB,EAAYgtB,GAAKnG,EAASkG,GAC1B2E,EAAiBzE,GAAmBjtB,qBACnC0xB,mIAGT,SACEl4B,EACAZ,EACAE,EACA4K,EACA3K,EACAV,qBAEO4lB,cAAoB,yGACnB2T,EAAKH,qBAAqBj4B,iBAC1BuzB,EAAMF,GACV9zB,EAAS5K,WACTkK,EACAO,EACA8K,EACAlK,YAEoBo4B,EAAKT,iCAArBtK,SACA7mB,EAAYgtB,GAAKnG,EAASkG,GAC1B2E,EAAiBzE,GAAmBjtB,qBACnC0xB,uEAIX,SACEtjC,EACA+M,EACArC,EACA4K,EACA3K,EACAV,EACAyD,qBAEOmiB,cAAoB,6GACH4T,EAAKC,gBAAgBh5B,iBAArC0Q,kBAEAqoB,EAAKJ,qBAAqBrjC,EAAKoL,8BAC/BiK,EAAkBqc,GAAqBhnB,EAAOC,EAAUyQ,GACxDujB,EAAMZ,GACV1oB,EAAgBtV,WAChBkK,EACA05B,OAAO3jC,EAAKwK,SACZ8K,EACAquB,OAAO52B,EAAGvC,SACVuC,EAAG3B,eACHsC,YAGoB+1B,EAAKV,iCAArBtK,SACA7mB,EAAYgtB,GAAKnG,EAASkG,GAC1B2E,EAAiBzE,GAAmBjtB,qBACnC0xB,0EAKX,SACEM,qBAKOhU,IACL,SAACxS,UACClpB,GACE07B,GAAU,YAAVA,CACEiU,EAAKzmB,SACH,CACEhS,eAAgBw4B,EAAUxtB,iBAC1B5L,QAAS4S,EAASjM,iBAEpB,CACE/F,eAAgBgS,EAAShM,mBACzB5G,QAAS4S,EAAS/L,mBAEpB+L,EAAS1S,MACT0S,EAAS1M,SACT0M,EAAS3Q,OACTk3B,OAAOvmB,EAASnT,OAChB05B,OAAOvmB,EAAS9L,wBAGpBse,IAAO,gBAAGhe,IAAAA,gBAAwC,CAChDR,mBAAoBgM,EAAShM,mBAC7BC,kBAAmB+L,EAAS/L,kBAC5B5E,OAAQk3B,OAAOvmB,EAAS3Q,QACxBiE,SAAU0M,EAAS1M,SACnBY,qBAAsB8L,EAAS9L,qBAC/BrH,MAAOmT,EAASnT,MAChBkH,gBAAiBiM,EAASjM,gBAC1BD,gBAAiBU,SA5BlBge,CA+BLgU,EAAUttB,+CAGd,SACElL,EACAsG,EACAC,EACAmyB,EACAC,EACA95B,EACAyD,qBAEOmiB,cAAoB,yGACnBmU,EAAKX,qBAAqBj4B,iBAC1BuzB,EAAMb,GACV6F,OAAOjyB,EAAKlH,SACZm5B,OAAOhyB,EAAInH,SACXkH,EAAK/G,SAAS5K,WACd4R,EAAIhH,SAAS5K,WACb+jC,EACAC,EACAJ,OAAO15B,GACP05B,OAAOj2B,aAEas2B,EAAKjB,iCAArBtK,SACA7mB,EAAYgtB,GAAKnG,EAASkG,GAC1B2E,EAAiBzE,GAAmBjtB,qBACnC0xB,iFAIX,SACEl4B,EACAsG,EACAC,EACAmyB,EACAC,EACA95B,EACAyD,EACA0E,qBAEOyd,cAAoB,yGACnBoU,EAAKZ,qBAAqBj4B,iBAC1BuzB,EAAMjB,GAAwB,CAClCC,UAAWgG,OAAOjyB,EAAKlH,SACvBozB,SAAU+F,OAAOhyB,EAAInH,SACrBwH,WAAYN,EAAK/G,SAAS5K,WAC1BmS,UAAWP,EAAIhH,SAAS5K,WACxBgS,UAAW+xB,EACX7xB,SAAU8xB,EACV95B,MAAO05B,OAAO15B,GACdyD,oBAAqBi2B,OAAOj2B,GAC5BnC,SAAU6G,EAAS7G,SACnBywB,SAAU2H,OAAOvxB,EAAS5G,YAC1BC,SAAU2G,EAAS3G,SAAS1L,sBAERkkC,EAAKlB,iCAArBtK,SACA7mB,EAAYgtB,GAAKnG,EAASkG,GAC1B2E,EAAiBzE,GAAmBjtB,qBACnC0xB,gFAIX,SAA0Bl2B,UACjBlZ,GACLuG,IACE,kBAAM+kC,GAAkBpyB,MACxB,SAAAxX,UAAKA,KAEPg6B,yBAIJ,gBACE6I,IAAAA,QACAkG,IAAAA,WAKOzqC,GACLuG,IACE,kBAAMmkC,GAAKnG,EAASkG,MACpB,SAAA/oC,UAAKA,KAEPg6B,sCAIJ,SAA2Bhe,UAClB1d,GACLuG,IACE,kBAAMokC,GAAmBjtB,MACzB,SAAAhc,UAAKA,KAEPg6B,+BAIJ,SAAmBxiB,qBACVlZ,GACL3K,KAAKi2C,kBAAkBpyB,GACvBwiB,IAAO,SAAA+O,SAAQ,CAAEA,IAAAA,MACjB/O,GACE,UACA58B,GACE48B,IACE,kBAAMsU,EAAKnB,sBACX,SAAAntC,UAAKA,OAIXg6B,GAASrmC,KAAK46C,OACdvU,GAASrmC,KAAKs1C,6CAKlB,uBACEv0B,IAAAA,gBACAP,IAAAA,SACAqB,IAAAA,eACAuF,IAAAA,yBAKOkf,IAAoB,kBACAuU,EAAKC,oBAAoB/5B,GAC1Bg6B,oBAAoBvP,aAC1ChrB,EACAqB,EACAuF,8BAKN,kBACErG,IAAAA,gBACAc,IAAAA,eACAT,IAAAA,SACA0K,IAAAA,gBACAC,IAAAA,QACA5K,IAAAA,MACAF,IAAAA,QAKM+5B,EAAmBh7C,KAAK86C,oBAAoB/5B,GAC5C0wB,EACJtwB,EAAM/c,OAASgb,wBAAgB67B,OAC3B/J,GAAa/vB,GAAOuwB,SAASxB,IAC7B,IAAIiB,UAAQplB,GAAS2lB,SAASxB,WAE7B3J,GACLplB,EAAM/c,cAEHsa,qBAAa+F,KAAM,kBAClB9Z,GACE27B,IAAoB,kBAClB0U,EAAiBD,oBACf,oCACAl5B,EAAgB4vB,EAAWxwB,MAE/BolB,IAAO,SAAA6U,mBACFA,OACH17C,MAAO4hB,gBAGZrC,uBAAeqpB,OAAQ,kBACtB9B,IAAoB,kBAClB0U,EAAiBD,oBACf,4CACAl5B,EAAgB4vB,EAAWxwB,EAAS6K,cAEzC1M,wBAAgB67B,QAAS,kBACxB3U,IAAoB,kBAClB0U,EAAiBD,oBAAoBI,WACnCt5B,EACA4vB,EACAxwB,EACCE,EAAsBtC,KAAKU,mBAIpC,kBAAM8mB,GAAQ,IAAI9iC,MAAM,+DAI5B,WACE4iC,4FAEOD,GACLC,EACAxa,0BAAkByvB,wBAAwBhV,OAC1CpmC,KAAKq7C,0IAIT,kBACElvB,IAAAA,4BACAtK,IAAAA,eACAT,IAAAA,SACA2K,IAAAA,QACA5K,IAAAA,MACAF,IAAAA,QACAT,IAAAA,SACA4G,IAAAA,kBAKMk0B,EAAuBt7C,KAAKu7C,wBAChCpvB,GAEIslB,EACJtwB,EAAM/c,OAASgb,wBAAgB67B,OAC3B/J,GAAa/vB,GAAOuwB,SAASxB,IAC7B,IAAIiB,UAAQplB,GAAS2lB,SAASxB,WAE7B3J,GACLplB,EAAM/c,cAEHsa,qBAAa+F,KAAM,kBAClB9Z,GACE27B,IAAoB,kBAClBgV,EAAqBP,oBACnB,6DAEAv6B,EACAqB,EACAuF,EACAqqB,EACAxwB,MAGJolB,IAAO,SAAA6U,mBACFA,OACH17C,MAAO4hB,gBAGZrC,uBAAeqpB,OAAQ,kBAAM/B,GAAQ,IAAI9iC,MAAM,+BAC/C6b,wBAAgB67B,QAAS,kBACxB5U,GAAQ,IAAI9iC,MAAM,8BAEtB,kBAAM8iC,GAAQ,IAAI9iC,MAAM,qEAI5B,WACEwd,EACAc,EACAV,EACAF,6FAEMjhB,KAAK85C,qBAAqBj4B,iBAC1Bm5B,EAAmBh7C,KAAK86C,oBAAoB/5B,GAC5C0wB,EAAYP,GAAa/vB,GAAOuwB,SAASxB,aAEvC8K,EAAiBD,oBAAoBS,cACzC35B,EACA4vB,EACAxwB,iBAJEi6B,2BAMCA,iJAGT,WACEn6B,EACAc,EACAV,EACAF,6FAEMjhB,KAAK85C,qBAAqBj4B,iBAC1Bm5B,EAAmBh7C,KAAK86C,oBAAoB/5B,GAC5C0wB,EAAYP,GAAa/vB,GAAOuwB,SAASxB,aAEvC8K,EAAiBD,oBAAoBU,eACzC55B,EACA4vB,EACAxwB,iBAJEi6B,2BAMCA,+HAGT,SACEn6B,EACAc,EACAV,qBAEOmlB,cAAoB,uGACnBoV,EAAK5B,qBAAqBj4B,0BACH65B,EAAKC,kBAAkBx6B,aAA9Cy6B,SACAZ,EAAmBU,EAAKZ,oBAAoB/5B,GAEhDI,EAAM/c,KAAK0sC,gBAAkBpyB,qBAAa+F,KAC1CtD,EAAM/c,KAAK0sC,gBAAkB/xB,uBAAeqpB,+CAErC4S,EAAiBD,oBAAoBrP,SAC1C7pB,EACA+5B,cAGAz6B,EAAM/c,KAAK0sC,gBAAkB1xB,wBAAgB67B,iDACxCD,EAAiBD,oBAAoBc,YAC1Ch6B,EACA+5B,EACCz6B,EAAsBtC,KAAKU,qBAI9B4B,EAAM/c,KAAK0sC,gBAAkBtxB,+BAAuBs8B,gBACpD36B,EAAM/c,KAAK0sC,gBAAkBhxB,gCAAwBi8B,wCAE/CC,EAAY76B,oBACX65B,EAAiBD,oBAAoBkB,gBAC1Cp6B,EACA+5B,EACAxK,GAAe4K,EAAUn9B,KAAKc,GAAIq8B,EAAUn9B,KAAKe,2BAG/C,IAAIrc,MAAM,sGAIpB,uBACE4oB,IAAAA,4BACAtK,IAAAA,eACAV,IAAAA,MACAX,IAAAA,SACA4G,IAAAA,yBAKOkf,cAAoB,qGACnB4V,EAAKpC,qBAAqBj4B,0BACHq6B,EAAKP,kBAAkBx6B,aAA9Cy6B,SACAN,EAAuBY,EAAKX,wBAChCpvB,GAIAhL,EAAM/c,KAAK0sC,gBAAkBpyB,qBAAa+F,KAC1CtD,EAAM/c,KAAK0sC,gBAAkB/xB,uBAAeqpB,+CAErCkT,EAAqBP,oBAAoBoB,oBAC9C37B,EACAqB,EACAuF,EACAw0B,iBAGE,IAAIr4C,MAAM,8GAIpB,WACEwd,EACAc,EACAZ,2FAEMjhB,KAAK85C,qBAAqBj4B,iBAC1Bm5B,EAAmBh7C,KAAK86C,oBAAoB/5B,YAE1Ci6B,EAAiBD,oBAAoBqB,sBACzCv6B,EACAZ,iBAHEi6B,2BAKCA,uIAGT,WACEn6B,EACAc,EACAZ,2FAEMjhB,KAAK85C,qBAAqBj4B,iBAC1Bm5B,EAAmBh7C,KAAK86C,oBAAoB/5B,YAE1Ci6B,EAAiBD,oBAAoBsB,cACzCx6B,EACAZ,iBAHEi6B,2BAKCA,uIAUT,WACEn6B,EACAc,EACAZ,EACAE,EACAC,+FAEMphB,KAAK85C,qBAAqBj4B,iBAC1Bm5B,EAAmBh7C,KAAK86C,oBAAoB/5B,GAC5C0wB,EAAYP,GAAa/vB,GAAOuwB,SAASxB,IACzCpkB,EAAkBqc,GAAqBhnB,EAAOC,YAE5C45B,EAAiBD,oBAAoBuB,OACzCz6B,EACAZ,EACAwwB,EACA3lB,EAAgBtV,0BALd0kC,2BAOCA,8HAIT,SAAe/7B,OACPo9B,EAAchF,GAAoB6B,QAAQj6B,EAAcnf,KAAKo2C,eAC5D9P,IAAoB,kBAAMiW,EAAYxB,oBAAoByB,oCAGnE,gBACEr9B,IAAAA,aACA4B,IAAAA,gBACAxB,IAAAA,QAKMg9B,EAAchF,GAAoB6B,QAAQj6B,EAAcnf,KAAKo2C,eAC5D9P,IAAoB,kBACzBiW,EAAYxB,oBAAoB0B,QAAQ17B,EAAiBxB,kCAI7D,gBACEJ,IAAAA,aACA+D,IAAAA,OACAnC,IAAAA,gBAKM27B,EAAgBnF,GAAoB6B,QACxCj6B,EACAnf,KAAKo2C,eAEA9P,IAAoB,kBACzBoW,EAAc3B,oBAAoB0B,QAAQ17B,EAAiBmC,wDAK/D,WAAmCrB,+EAC7BA,WAA0B7hB,KAAKovC,4EAC3B,IAAI7rC,MACR,2MAKN,6FACQvD,KAAK28C,+BACP38C,KAAKm5C,uDACAn5C,KAAKm5C,4BAER,IAAI51C,MAAM,6LAGlB,WACE6lC,EACA+P,yFAE6Bn5C,KAAK28C,kCAA5BC,UACSxT,GAAQ+P,EAAcM,WAAW,YAC3CmD,eAAiBA,OACjBzD,cAAgBA,WACfn5C,KAAKg5C,MAAMC,IAAIj5C,KAAK84C,kBAAmB8D,iJAG/C,WAAiCxT,+FACFppC,KAAK28C,8BAA5BC,SAGDxT,2CACIppC,KAAKw5C,gCAERzJ,EAAQ6M,EAAexT,6CAEpBqG,GAAyBM,4BAgBV/vC,KAAKo2C,OAAOC,Ydv1BtC,yFcu1BQhuB,SACA8wB,EAAgB1K,GAAmBoO,iBAAex0B,GAAWpL,EAAGmsB,aAChEppC,KAAK88C,iBAAiB1T,EAAM+P,oCAC3BA,+IAGT,6FACqC,IAAxBn5C,KAAK48C,wDACP58C,KAAK48C,uCAIL58C,KAAKg5C,MAAM3P,IAAIrpC,KAAK84C,mEAAuB,iBAD9C8D,YAEDA,eAAiBA,EAEhBG,EAAQ57C,OAAOqG,KAAKo1C,IACrB58C,KAAKm5C,eAAiB4D,EAAMj8C,cAC1Bq4C,cAAgB1J,GAAyBmN,EAAeG,EAAM,wBAE9DH,2HAGT,SAAqBz7B,UACZA,EAAM/c,OAAS2a,uBAAeqpB,gCAGvC,SAAmBjnB,UACVA,EAAM/c,OAASsa,qBAAa+F,8BAGrC,SAAmBtD,UACTnhB,KAAKg9C,aAAa77B,KAAWnhB,KAAKi9C,WAAW97B,kDAGvD,WAAgCA,uGACvB,IAAIxhB,oCAAQ,WAAMV,2FACDi+C,EAAK/C,gBAAgBh5B,iBAArC0Q,SACA4f,EAAYP,GAAa/vB,EAAO0Q,qBAC/B5yB,EAAQwyC,EAAUC,SAASxB,6OAItC,WAA8B/uB,uGACrB,IAAIxhB,oCAAQ,WAAMV,oFACjBk+C,EAAqB,kBAAMl+C,EAAQ,OACrCm+C,EAAKC,WAAWl8B,4CACXg8B,4BAGYG,GAAiBxT,MAAM,CAC1C+O,aAAcuE,EAAKvE,6BADf0E,kBAKIp+B,EAAkBgC,EAActC,KAAhCM,uBACwBo+B,EAAOC,SAAS,CAC9Cr+B,aAAAA,4BADes+B,IAAT5rB,0BAID5yB,EAAQw+C,6CAEflpB,QAAQ90B,MAAM,4BACd80B,QAAQ90B,MAAM,6CAAYi+C,KAAOrlC,2BAC1B8kC,+xBCp4BFQ,gCAUT9E,IAAAA,aACAzC,IAAAA,OACAwH,IAAAA,SACAC,IAAAA,SACA/E,IAAAA,gCAEK1C,EAAOvlB,eACJ,IAAIttB,MAAM,+CAEb6yC,OAAS,IAAI0H,eAAa1H,QAC1B2H,WAAa,IAAInF,GACpBC,EACA74C,KAAKo2C,OACL0C,QAEG8E,SAAWA,OACXC,SAAWA,EAChB5U,UAASjpC,gEAuBX,WACMA,KAAKo2C,kBAAkB0H,gBACzB99C,KAAKo2C,OAAO4H,qDAGhB,SACEj9B,EACAc,OAEMm5B,EACJh7C,KAAK+9C,WAAWjD,oBAAoB/5B,UAC/BulB,IAAoB,kBACzB0U,EAAiBiD,UAAUp8B,qDAI/B,WACEd,EACAc,EACAV,EACAF,kFAEM+5B,EACJh7C,KAAK+9C,WAAWjD,oBAAoB/5B,GAChCgL,EAAUylB,GAAWrwB,GAAOuwB,SAASxB,aAEnC8K,EAAiBkD,2BACrBr8B,EACAkK,EACA9K,iCAEFzK,uMAGJ,WACEuK,EACAc,EACAV,kFAEM65B,EACJh7C,KAAK+9C,WAAWjD,oBAAoB/5B,GAChCgL,EAAUylB,GAAWrwB,GAAOuwB,SAASxB,aAEnC8K,EAAiBmD,qBAAqBt8B,EAAgBkK,iCAC5DvV,2LAGJ,WACE4nC,EACAr9B,wFAEMs9B,EAAgB,IAAItG,WAASh3B,EAAiBkT,GAAOj0B,KAAKo2C,iBAC/Bz2C,QAAQ4V,IAAI,CAC3C8oC,EAAcC,UAAUF,GACxBC,EAAcv/B,8CAFToT,OAASqsB,yBAITC,cAAYtsB,EAASqsB,4IAG9B,WACEx9B,EACAq9B,EACAK,kFAEMJ,EAAgB,IAAItG,WAASh3B,EAAiBkT,GAAOj0B,KAAKo2C,iBACxCiI,EAAcK,UAAUN,EAAOK,iBAAjDC,2BACCA,mIAGT,SACExD,qBAEOvwC,GACL3K,KAAK69C,UAAY79C,KAAK49C,kBAEb1C,OACH2C,SAAU79C,KAAK69C,SAASc,cACxBf,SAAU59C,KAAK49C,SAASe,gBAE1BzD,GACJ,SAAA0D,UAAOtY,IAAoB,kBAAMrsB,EAAKm8B,OAAOyI,gBAAgBD,QAC7DvY,IAAS,SAAA/Q,UACPrb,EAAK6kC,iBACEzY,GAAM/Q,EAAEsV,uDAKrB,WACEsQ,+EAEO1V,YAAmBxlC,KAAK++C,iBAAiB7D,EAAtBl7C,iNAG5B,4FACQgvB,EAAYpV,KAAKolC,MAAMC,KAAKC,MAAQ,KAAM1oC,oBACxB2/B,GAAennB,EAAWhvB,KAAKo2C,sBAAjD/tB,2BACC,iBACY2G,kBACA3G,oIAvHrB,WACE8d,kFAEMgZ,EAAS,IAAIxB,EAAiBxX,qBAE5BgZ,EAAOpB,WAAWqB,QAAQ,UAAW,aAAc,kEAEnD/mC,EAAU,qCAChBkc,QAAQC,IAAInc,QACN,IAAI9U,MAAM8U,oCAEX8mC,8HAGT,SACEhZ,UAEOG,IAAoB,kBAAMqX,EAAiB7T,MAAM3D,eC9DtDkZ,GAAa,SAAA1tB,SACjB4C,QAAQC,mCACQ7C,EAAQtuB,2BAARi8C,EAAgBxO,0BAAiBnf,EAAQkX,gBACrDlX,EAAQ4X,OAKDgW,GAA0B,SACrCC,OAEMC,EAAgB9W,UAAM5lC,gBAG5B28C,UAAWD,EAAe,CACxBE,QAAS,EACTC,WAAYF,UAAWG,iBACvBC,eAAgB,SAAArgD,UACPigD,UAAWK,eAAetgD,IAAqC,MAA3BA,EAAM+nC,SAAU5hB,UAI/D65B,EAAcO,aAAaxY,SAASyY,KAClC,SAAAzY,UACMgY,GAjCU,SAAChY,GACnBjT,QAAQC,0BAAmBgT,EAAS5hB,mBAAU4hB,EAAS0Y,aAiCjDC,CAAY3Y,GAGPA,KAET,SAAA/nC,UACM+/C,GArCe,SAAC//C,WACxB80B,QAAQC,0BACS/0B,MAAAA,aAAAA,EAAO+nC,6BAAP4Y,EAAiBx6B,mBAAUnmB,MAAAA,aAAAA,EAAO+nC,6BAAP6Y,EAAiBH,aAoCvDI,CAAiB7gD,GAEZE,QAAQT,OAAOO,MAG1BggD,EAAcO,aAAaruB,QAAQsuB,KACjC,SAAAtuB,UACM6tB,GACFH,GAAW1tB,GAENA,KAET,SAAAlyB,UACM+/C,GACFH,GAAW5/C,GAENE,QAAQT,OAAOO,MAInBggD,2kBCnDIc,yBASCC,OAAiBhB,0DAA6BxuB,wDAAAA,OAAAA,OACnDwvB,QAAUA,OACV1X,MAAQ,IAAIC,EAAMC,WAClByW,cAAgBF,GAAwBC,QAExCiB,YAAc,CACjB5X,QAAS7oC,KAAKwgD,QACdtX,WAAYlpC,KAAK8oC,MACjBK,QAAS,gBACS,qBAKhBnY,SACGyvB,YAAYtX,QAAQ,aAAenpC,KAAKgxB,6DAOjD,SAAyBoY,EAAcsX,UAC9BtX,EAAKuX,QAAQ,wBAAkBD,8BAGxC,SACEE,EACAzX,mBAGKyX,OACHzX,iBACKyX,EAAQzX,SACRA,8BAKT,SACEyX,EACAza,mBAGKya,OACHza,gBACKya,EAAQza,QACRA,mCAQT,SAA0BqB,UACjBA,EAAS3oB,iCAGlB,SAAqBpf,wBACfA,EAAM+nC,uBAAN4Y,EAAgBvhC,qBACZpf,EAAM+nC,6BAAN6Y,EAAgBxhC,WAElBpf,iDAMR,WACE2pC,EACAjD,EACAgD,EACAuX,kFAEIE,EAAU5gD,KAAKygD,YAEfC,GAAWE,EAAQ/X,UACrB+X,EAAQ/X,QAAU7oC,KAAK6gD,kBAAkBD,EAAQ/X,QAAS6X,IAGxDva,IACFya,EAAU5gD,KAAK8gD,UAAUF,EAASza,IAGhCgD,IACFyX,EAAU5gD,KAAK+gD,WAAWH,EAASzX,sBAIZnpC,KAAKy/C,cAAcpW,cAAOD,GAAQwX,iBAAnDpZ,2BACCxnC,KAAKghD,eAAexZ,+DAEpBxnC,KAAKihD,2KAIhB,WACE7X,EACAvqB,EACAsqB,EACAuX,kFAEIE,EAAU5gD,KAAKygD,YAEfC,GAAWE,EAAQ/X,UACrB+X,EAAQ/X,QAAU7oC,KAAK6gD,kBAAkBD,EAAQ/X,QAAS6X,IAGxDvX,IACFyX,EAAU5gD,KAAK+gD,WAAWH,EAASzX,sBAIZnpC,KAAKy/C,cAAcyB,eAAQ9X,GAAQvqB,EAAM+hC,iBAA1DpZ,2BACCxnC,KAAKghD,eAAexZ,+DAEpBxnC,KAAKihD,mKAIhB,WACE7X,EACAvqB,EACAsqB,EACAuX,kFAEIE,EAAU5gD,KAAKygD,YAEfC,GAAWE,EAAQ/X,UACrB+X,EAAQ/X,QAAU7oC,KAAK6gD,kBAAkBD,EAAQ/X,QAAS6X,IAGxDvX,IACFyX,EAAU5gD,KAAK+gD,WAAWH,EAASzX,sBAIZnpC,KAAKy/C,cAAc0B,gBAAS/X,GAAQvqB,EAAM+hC,iBAA3DpZ,2BACCxnC,KAAKghD,eAAexZ,+DAEpBxnC,KAAKihD,oKAIhB,WAAoB7X,EAAcvqB,kFAC1B+hC,WACD5gD,KAAKygD,iBACR5hC,KAAAA,sBAIuB7e,KAAKy/C,+BAAwBrW,GAAQwX,iBAAtDpZ,2BACCxnC,KAAKghD,eAAexZ,6DAEpBxnC,KAAKihD,4sBCtGXG,GAAqCjvB,+BAAuBivB,mCAC5DC,GAAuClvB,+BAAuBkvB,qCAC9DzwB,GAAkCuB,+BAAuBvB,gCACzDR,GAAoC+B,+BAAuB/B,kCAC3DkxB,GAA0CnvB,+BAAuBmvB,wCACjEC,GAA2CpvB,+BAAuBovB,yCAClEC,GAA+CrvB,+BAAuBqvB,6CAkBhElE,yBAMDzE,EACAsG,EACAp+B,EACAoL,EACAs1B,EACAC,OACAlC,0DACSxuB,wDAPT6nB,aAAAA,OACAsG,OAAAA,OACAp+B,gBAAAA,OACAoL,4BAAAA,OACAs1B,SAAAA,OACAC,gBAAAA,OACAlC,YAAAA,OACSxuB,OAAAA,OAEZ8X,MAAQ,IAAIC,EAAMC,WAClB2Y,SAAW,IAAIpB,GAAc1H,EAAc2G,EAAaxuB,GAC7DiY,UAASjpC,6LASX,WACEo+C,EACAr9B,4FAEO/gB,KAAKm/C,OAAOyC,WAAWxD,EAAOr9B,mJAGvC,WACEA,EACAq9B,EACAK,yFAEwBz+C,KAAKm/C,OAAO0C,aAClC9gC,EACAq9B,EACAK,MAAAA,EAAAA,EAAWz+C,KAAK+gB,+BAHZ29B,2BAKCA,EAAUloC,6JAGnB,WACEuK,EACAmC,EACAk7B,EACAK,yFAEwBz+C,KAAKm/C,OAAO0C,aAClC9gC,EACAq9B,EACAK,MAAAA,EAAAA,EAAWz+C,KAAK+gB,+BAHZ29B,2BAKCA,EAAU5R,IAAItrB,YAAU/K,KAAKyM,6HAsDtC,kBACSljB,KAAKyhD,qCAGd,kBACSzhD,KAAK0hD,4CAGd,eACQd,EAA8B,CAClC/X,QAAS7oC,KAAK64C,aACd3P,WAAYlpC,KAAK8oC,MACjBK,QAAS,gBACS,4BAIhBnpC,KAAKgxB,SACP4vB,EAAQzX,QAAQ,aAAenpC,KAAKgxB,QAE/B4vB,mCAGT,SAA0BxX,EAAcsX,UAC/BtX,EAAKuX,QAAQ,wBAAkBD,uBAGxC,SACEtX,EACAhD,EACAsa,OAEME,EAAU5gD,KAAKspC,sBAEjBoX,GAAWE,EAAQ/X,UACrB+X,EAAQ/X,QAAU7oC,KAAK6gD,kBAAkBD,EAAQ/X,QAAS6X,IAGrD/1C,GACL27B,IAAoB,kBAAMqC,UAAMU,cAAOD,GAAQwX,MAC/Cva,IAAS,SAAA/Q,UACP3qB,GAAKy7B,EAAO9Q,EAAEzW,MAAO3N,GAAU40B,IAAgBO,4BAKrD,SACE+C,EACAvqB,EACAunB,EACAsa,OAEME,EAAU5gD,KAAKspC,sBAEjBoX,GAAWE,EAAQ/X,UACrB+X,EAAQ/X,QAAU7oC,KAAK6gD,kBAAkBD,EAAQ/X,QAAS6X,IAGrD/1C,GACL27B,IAAoB,kBAAMqC,UAAMuY,eAAQ9X,GAAQvqB,EAAM+hC,MACtDva,IAAS,SAAA/Q,UACP3qB,GAAKy7B,EAAO9Q,EAAEzW,MAAO3N,GAAU40B,IAAgBO,8BAKrD,SACE+C,EACAvqB,EACAunB,qBAEOz7B,GACL27B,IAAoB,kBAClBqC,2BAAgBS,YACXnvB,EAAKqvB,oBACRzqB,KAAAA,QAGJwnB,IAAS,SAAA/Q,UACP3qB,GAAKy7B,EAAO9Q,EAAEzW,MAAO3N,GAAU40B,IAAgBO,oCAKrD,uBACE7lB,IAAAA,SACAqB,IAAAA,eAKIigC,GAAY,SACIloC,KAAKmoC,OAAM,IAAI9C,MAAO+C,UAAY,KAEpC,aAEhBF,GAAY,GAGTA,EA+BEn3C,GACL,CACEkJ,KAAM,CACJouC,UAAWzhC,EAASsvB,cACpBvjB,UAAW1K,EACX8F,gBAAiB,GACjBu6B,cAAe,KAGnB7b,GACAA,GAAQ,kBAAkB,gBAAGxyB,IAAAA,YAC3BmmC,EAAKmF,OAAOpB,WAAWoE,8BAA8B,CACnD3hC,SAAU3M,EAAKouC,UACfpgC,eAAgBhO,EAAK0Y,eAGzB8Z,GAAQ,gBAAgB,kBACtBC,IAAoB,kBAClB0T,EAAKmF,OAAOpB,WAAWqE,QACrB,6DAIN/b,IAAS,gBAAG0T,IAAAA,eAAgB3tB,IAAAA,aAAcvY,IAAAA,KAClCgL,EAAO4oB,KAAKC,mBACb7zB,OACH8T,gBAAiBoyB,EACjBmI,cAAe91B,YAEV4tB,EAAKkH,KACV,QACAriC,EACAsT,+BAAuBkwB,6BAA6Bjc,YA9DjDz7B,GACL,CACEkJ,KAAM,CACJouC,UAAWzhC,EAASsvB,cACpBvjB,UAAW1K,EACXnB,MAAO,IAGX2lB,GACAA,GAAQ,aAAa,gBAAGxyB,IAAAA,YACtBmmC,EAAKmF,OAAOpB,WAAWuE,qBAAqB,CAC1C9hC,SAAU3M,EAAKouC,UACfpgC,eAAgBhO,EAAK0Y,UACrB7L,MAAO05B,OAAOvmC,EAAK6M,YAGvB2lB,IAAS,gBAAGhe,IAAAA,UAAWxU,IAAAA,KACfgL,EAAO4oB,KAAKC,mBACb7zB,OACH8T,gBAAiBU,YAGZ2xB,EAAKkH,KACV,QACAriC,EACAsT,+BAAuBkwB,6BAA6Bjc,oCA2C9D,SACED,UAEOnmC,KAAKqpC,oBACDlD,EAAO9e,KAAKyoB,eACrB3d,+BAAuBowB,4BAA4Bnc,8CAIvD,WAAqBD,4FACZnmC,KAAKkmC,kBACVC,EACAza,8BAAsB82B,4BAA4Bpc,OAClDpmC,KAAKyiD,kJAIT,WACEtc,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBg3B,6BAA6Btc,OACnDpmC,KAAK2iD,yIAIT,SACExc,UAEOx7B,GACL3K,KAAKyiD,SAAStc,GACdE,IACE,kBAAMuc,IAAK,MACX,kBAAMA,IAAK,MAEbA,IAAQ,SAAAv9C,UAAUghC,GAAMhhC,kDAI5B,WACE8gC,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB82B,4BAA4Bpc,OAClDpmC,KAAK6iD,+IAIT,SAA0BhhC,UACjBlX,GACL3K,KAAKm/C,OAAOlB,UAAUj+C,KAAK+gB,gBAAiBc,GAC5CwkB,IACE,kBAAMuc,IAAK,MACX,kBAAMA,IAAK,uDAKjB,WAA+B/gC,4FACtB7hB,KAAK8iD,mBAAmBjhC,EAAxB7hB,0HAGT,SACEmmC,UAEOx7B,GACL3K,KAAK2iD,aAAaxc,GAClBE,IAAO,SAAAhhC,UAAUA,EAAOgnB,mDAI5B,WACE8Z,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBg3B,6BAA6Btc,OACnDpmC,KAAK+iD,uIAIT,gBACEviC,IAAAA,SACAqB,IAAAA,eACAuF,IAAAA,yBAKOzc,GACL3K,KAAKm/C,OAAOpB,WAAWiF,SAAS,CAC9BjiC,gBAAiB/gB,KAAK+gB,gBACtBP,SAAAA,EACAqB,eAAAA,EACAuF,kBAAAA,IAEFif,GAASrmC,KAAKm/C,OAAOJ,+DAIzB,WACE5Y,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBu3B,kCAAkC7c,OACxDpmC,KAAKkjD,sJAIT,gBACE1iC,IAAAA,SACAqB,IAAAA,eAKMhD,EAAO4oB,KAAKC,UAAU,CAC1Bua,UAAWzhC,EACX+L,UAAW1K,WAEN7hB,KAAKkhD,KACV,wBACAriC,EACAsT,+BAAuBgxB,4CAA4C/c,8DAIvE,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB03B,4CAA4Chd,OAClEpmC,KAAKqjD,gJAIT,gBACElkC,IAAAA,oBAKOxU,GACL3K,KAAKm/C,OAAOpB,WAAWuF,QAAQnkC,GAC/BknB,GAASrmC,KAAKm/C,OAAOJ,yDAIzB,WACE5Y,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB63B,4BAA4Bnd,OAClDpmC,KAAKwjD,mIAIT,SACErd,UAEOx7B,GACL3K,KAAKm/C,OAAOpB,WAAW0F,oBAClBtd,OACHplB,gBAAiB/gB,KAAK+gB,mBAExBslB,GAASrmC,KAAKm/C,OAAOJ,2DAIzB,WACE5Y,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBg4B,oCAAoCtd,OAC1DpmC,KAAK2jD,uIAIT,SACExd,UAEOx7B,GACL3K,KAAKm/C,OAAOpB,WAAW6F,sBAClBzd,OACHplB,gBAAiB/gB,KAAK+gB,mBAExBslB,GAASrmC,KAAKm/C,OAAOJ,6DAIzB,WACE5Y,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBm4B,sCAAsCzd,OAC5DpmC,KAAK8jD,oIAIT,uBACEz8B,IAAAA,KACAlG,IAAAA,MACAC,IAAAA,SAKMvC,EAAO4oB,KAAKC,UAAU,CAC1BrgB,KAAMA,EAAKyoB,cACX3uB,MAAO,CACL/c,KAAM+c,EAAM/c,KACZya,KAAM7e,KAAK+jD,aAAa5iC,IAE1B+B,OAAQ9B,EAAS5K,oBAGZ7L,GACL07B,GAAU,wBAAVA,CACErmC,KAAKkhD,KACH,2BACAriC,EACAsT,+BAAuB6xB,uCAAuC5d,SAGlEC,GAAQ,gBAAgB,kBACtBA,GAAY4T,EAAK6I,mBAAmB7I,EAAKp4B,oBAE3CwkB,IAAS,gBAAG4d,IAAAA,aAAcC,IAAAA,6BACxBD,EACIt5C,GACEghB,0BAAkByvB,wBAAwBhV,OAAO,CAC/CrlB,gBAAiBk5B,EAAKl5B,gBACtBc,eAAgBqiC,EAAsB33B,UACtCR,QAASm4B,EAAsB/8B,SAC/B/F,SAAAA,EACA0K,gBAAiBo4B,EAAsBhhC,OACvC/B,MAAAA,EACAF,QAASijC,EAAsB13B,SAAShW,aAE1CtF,GAAU40B,IACVO,GACAA,GAAS4T,EAAKkF,OAAOpB,WAAW1C,WAElCl6B,EAAM/c,OAASsa,qBAAa+F,IAC5B9Z,GACEsvC,EAAKoJ,yBAAyB,CAC5B7iC,SAAU6G,EACVxF,eAAgBo4B,EAAKp4B,iBAEvBwkB,IAAS,SAAA8d,UACPx5C,GACEuhB,iCAAyBk4B,8BAA8Bhe,OACrD,CACEja,4BACE8tB,EAAK9tB,4BACPtK,eAAgBqiC,EAAsB33B,UACtCR,QAASm4B,EAAsB/8B,SAC/B/F,SAAAA,EACA0K,gBAAiBo4B,EAAsBhhC,OACvC/B,MAAAA,EACAF,QAASijC,EAAsB13B,SAAShW,WACxCgK,SAAU6G,EACVD,kBACE+8B,EAA2B13B,qBAGjCvb,GAAU40B,IACVO,GACAA,GAAS4T,EAAKkF,OAAOpB,WAAWsG,0BAItChe,GAAQ,IAAI9iC,MAAM,yBAExB8iC,GAASrmC,KAAKm/C,OAAOJ,wDAIzB,WACE5Y,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB44B,uCAAuCle,OAC7DpmC,KAAKq7C,kJAIT,WACEx5B,EACAV,EACAF,0FAEMsjC,EAAU/S,GAAWrwB,GAAO+uB,SACpBC,kBACLnwC,KAAKwkD,sBAAsB3iC,6BAAiB4iC,MAD/C/jC,iBAGA7M,EAAO,CACX0Y,UAAW1K,EACXsF,SAAUo9B,EACV/3B,SAAU2jB,SAASlvB,GACnBP,MAAAA,YAEsB1gB,KAAKm/C,OAAOpB,WAAW2G,UAAU7wC,iBAAnDwU,SACAxJ,EAAO4oB,KAAKC,mBACb7zB,OACH8T,gBAAiBU,yBAICsgB,UAAMuY,KAAK,iBAAkBriC,EAAM7e,KAAKspC,+BAApD7D,2BACCA,EAAI5mB,+CAEL0oB,gKAIV,WACE1lB,EACAV,EACAF,0FAEMsjC,EAAU/S,GAAWrwB,GAAO+uB,SACpBC,kBACLnwC,KAAKwkD,sBAAsB3iC,6BAAiB4iC,MAD/C/jC,iBAGA7M,EAAO,CACX0Y,UAAW1K,EACXsF,SAAUo9B,EACV/3B,SAAU2jB,SAASlvB,GACnBP,MAAAA,YAEsB1gB,KAAKm/C,OAAOpB,WAAW2G,UAAU7wC,iBAAnDwU,SACAxJ,EAAO4oB,KAAKC,mBACb7zB,OACH8T,gBAAiBU,yBAICsgB,UAAMuY,KACtB,kBACAriC,EACA7e,KAAKspC,+BAHD7D,2BAKCA,EAAI5mB,+CAEL0oB,sJAIV,uBACElgB,IAAAA,KACAlG,IAAAA,MACAC,IAAAA,gBAKOzW,GACL07B,GAAU,2BAAVA,CACErmC,KAAKkhD,KACH,8BACAzZ,KAAKC,UAAU,CACbrgB,KAAMA,EAAKyoB,cACX3uB,MAAO,CACL/c,KAC+B,oBAA7B+c,EAAM/c,KAAK0sC,cACP1xB,wBAAgB67B,OAChB95B,EAAM/c,KACZya,KAAM7e,KAAK+jD,aAAa5iC,IAE1B+B,OAAQ9B,EAAS5K,aAEnB2b,+BAAuBwyB,0CACpBve,SAGPC,GAAQ,aAAa,gBAAGue,IAAAA,gCACtB1K,EAAKiF,OAAOpB,WAAW8G,aACrBD,EAAyBr4B,UACzB6tB,OAAOwK,EAAyBp4B,UAChCrL,EACAyjC,EAAyBz9B,SACzBy9B,EAAyB1hC,OACzBk3B,OAAOwK,EAAyBlkC,WAGpC2lB,GAAQ,UAAU,gBAAGue,IAAAA,yBAA0Bv8B,IAAAA,iBAC7C6xB,EAAKgH,KACH,cACAzZ,KAAKC,UAAU,CACbnb,UAAWq4B,EAAyBr4B,UACpCrJ,OAAQ9B,EAAS5K,WACjB2Q,SAAUy9B,EAAyBz9B,SACnCqF,SAAUo4B,EAAyBp4B,SACnC9L,MAAOkkC,EAAyBlkC,MAChCiH,gBAAiBU,IAEnB8J,+BAAuB2yB,+BAA+B1e,WAG1DC,IAAO,qBAAGhhC,4CAId,SACE8gC,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBq5B,sCAAsC3e,OAC5DpmC,KAAKglD,wDAIT,SACEC,EACA9jC,SAEO,CACL/c,KAAM0b,gCAAwBi8B,gBAC9Bl9B,KAAM,CACJc,GAAIslC,EAAc33B,gBAClB1N,UAAWqlC,EAAcrlC,UACzBT,aAAcgC,EAAMtC,KAAKM,kDAK/B,uBACE0C,IAAAA,eACAV,IAAAA,aAKOxW,GACL07B,GAAU,iBAAVA,CACEA,GACEllB,EAAM/c,OAASgb,wBAAgB67B,OAC3BtwC,GACE3K,KAAKklD,kBAAkB,CACrB/lC,aAAcgC,EAAMtC,KAAKM,aACzBI,QAAS4B,EAAMtC,KAAKU,UAEtB8mB,IAKE,SAAAtvB,UAAM6rC,GAAKzhC,MACX,SAAA8jC,UACErC,GAAKtI,EAAK6K,qBAAqBF,EAAe9jC,QAGpDyhC,GAAKzhC,KAGbklB,GAAQ,gBAAgB,kBACtBA,GAAYiU,EAAKwI,mBAAmBjhC,OAEtCwkB,IAAS,gBAAG4d,IAAAA,aAAcmB,IAAAA,sBACxBnB,EACIt5C,GACE2vC,EAAK6E,OAAOpB,WAAWsH,WACrB/K,EAAKv5B,gBACLc,EACAujC,IAGJz6C,GACE2vC,EAAK+I,yBAAyB,CAC5B7iC,SAAU85B,EAAK39B,QACfkF,eAAgBy4B,EAAKz4B,iBAEvBwkB,IAAS,SAAA8d,UACPiB,EAAehhD,OAASsa,qBAAa+F,IACjC61B,EAAK6E,OAAOpB,WAAW5B,oBAAoB,CACzChwB,4BACEmuB,EAAKnuB,4BACPtK,eAAAA,EACAV,MAAOikC,EACP5kC,SAAU85B,EAAK39B,QACfyK,kBACE+8B,EAA2B13B,qBAE/B4Z,GAAQ,IAAI9iC,MAAM,6BAIhC8iC,GAASrmC,KAAKm/C,OAAOJ,qDAIzB,SACE5Y,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB45B,uCAAuClf,OAC7DpmC,KAAKulD,8CAIT,uBACEj+B,IAAAA,OACAnG,IAAAA,MACAC,IAAAA,SACAmG,IAAAA,gBAKO5c,GACL07B,GAAU,yBAAVA,CACErmC,KAAKkhD,KACH,4BACAzZ,KAAKC,UAAU,CACbpgB,OAAQA,EAAOwoB,cACf3uB,MAAO,CACL/c,KAAM+c,EAAM/c,KACZya,KAAM7e,KAAK+jD,aAAa5iC,IAE1B+B,OACE/B,EAAM/c,OAASgb,wBAAgB67B,OAAS,IAAM75B,EAAS5K,WACzD+Q,SAAUA,EAASuoB,gBAErB3d,+BAAuBqzB,wCAAwCpf,SAGnEC,GAAQ,aAAa,gBAAGof,IAAAA,8BACfhL,EAAK0E,OAAOpB,WAAWlqB,SAC5B,CACEhS,eAAgB4jC,EAAuB54B,iBACvC5L,QAASwkC,EAAuB79B,iBAElC,CACE/F,eAAgB4jC,EAAuB59B,mBACvC5G,QAASwkC,EAAuB39B,mBAElC3G,EACAskC,EAAuBt+B,SACvBs+B,EAAuBviC,OACvBk3B,OAAOqL,EAAuB/kC,OAC9B05B,OAAOqL,EAAuB19B,0BAGlCse,GAAQ,UAAU,gBAAGof,IAAAA,uBAAwBp9B,IAAAA,iBAC3CoyB,EAAKyG,KACH,YACAzZ,KAAKC,UAAU,CACb7a,iBAAkB44B,EAAuB54B,iBACzCjF,gBAAiB69B,EAAuB79B,gBACxCC,mBAAoB49B,EAAuB59B,mBAC3CC,kBAAmB29B,EAAuB39B,kBAC1C5E,OAAQuiC,EAAuBviC,OAAO1M,WACtC2Q,SAAUs+B,EAAuBt+B,SACjCY,qBAAsB09B,EAAuB19B,qBAC7CrH,MAAO+kC,EAAuB/kC,MAC9BiH,gBAAiBU,IAEnB8J,+BAAuBuzB,6BAA6Btf,WAGxDC,IAAO,qBAAGhhC,mCAId,SACE8gC,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBi6B,6BAA6Bvf,OACnDpmC,KAAK4lD,gCAIT,uBACEt+B,IAAAA,OACAnG,IAAAA,MACAC,IAAAA,gBAKOzW,GACL07B,GAAU,yBAAVA,CACErmC,KAAKkhD,KACH,4BACAzZ,KAAKC,UAAU,CACbpgB,OAAQA,EAAOwoB,cACf3uB,MAAO,CACL/c,KAAM+c,EAAM/c,KACZya,KAAM7e,KAAK+jD,aAAa5iC,IAE1B+B,OACE/B,EAAM/c,OAASgb,wBAAgB67B,OAAS,IAAM75B,EAAS5K,WACzD+Q,SAAUpK,oBAAY0oC,iBAExB1zB,+BAAuBqzB,wCAAwCpf,SAGnEC,GAAQ,aAAa,gBAAGof,IAAAA,8BACf/K,EAAKyE,OAAOpB,WAAWlqB,SAC5B,CACEhS,eAAgB4jC,EAAuB54B,iBACvC5L,QAASwkC,EAAuB79B,iBAElC,CACE/F,eAAgB4jC,EAAuB59B,mBACvC5G,QAASwkC,EAAuB39B,mBAElC3G,EACAskC,EAAuBt+B,SACvBs+B,EAAuBviC,OACvBk3B,OAAOqL,EAAuB/kC,OAC9B05B,OAAOqL,EAAuB19B,0BAGlCse,GAAQ,UAAU,gBAAGof,IAAAA,uBAAwBp9B,IAAAA,iBAC3CqyB,EAAKwG,KACH,YACAzZ,KAAKC,UAAU,CACb7a,iBAAkB44B,EAAuB54B,iBACzCjF,gBAAiB69B,EAAuB79B,gBACxCC,mBAAoB49B,EAAuB59B,mBAC3CC,kBAAmB29B,EAAuB39B,kBAC1C5E,OAAQuiC,EAAuBviC,OAAO1M,WACtC2Q,SAAUs+B,EAAuBt+B,SACjCY,qBAAsB09B,EAAuB19B,qBAC7CrH,MAAO+kC,EAAuB/kC,MAC9BiH,gBAAiBU,IAEnB8J,+BAAuBuzB,6BAA6Btf,WAGxDC,IAAO,qBAAGhhC,+BAId,SACE8gC,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBo6B,yBAAyB1f,OAC/CpmC,KAAK+lD,kCAIT,SACE1tC,qBAEO1N,GACL0N,EACAguB,GACAA,GAAQ,gBAAgB,kBACtBC,IAAoB,kBAAMqU,EAAKwE,OAAOpB,WAAWqE,QAAQ/pC,+BAK/D,SACE8tB,qBAEA5R,QAAQyxB,KACN,6EAEKr7C,GACLw7B,EAAOje,MACPgd,GAAWmB,GAAXnB,EAA0B,SAACsX,UACzB7xC,GACE6xC,EAAK/7B,OACLykB,IAAM,SAAC/jB,SAAgC,CACrC/c,KAAMgb,wBAAgB67B,OACtBp8B,KAAM,CACJc,GAAIwB,EAAMtC,KAAKc,GACfC,UAAWuB,EAAMtC,KAAKe,UACtBgL,cAAezJ,EAAMtC,KAAKM,mBAG9B,SAAAsB,SAAW,CACTpb,OAAQ,CACN48C,UAAWzF,EAAKh8B,SAASsvB,cACzBrvB,OAAAA,EACAC,MAAOyvB,SAASqM,EAAK97B,OACrBulC,eAAgB,OAGpB5f,GACAA,GAAQ,kBAAkB,gBAAGhhC,IAAAA,cAC3BihC,IAAoB,kBAAMuU,EAAKsE,OAAOpB,WAAW1I,KAAKhwC,SAExDghC,IAAO,gBAAGhhC,IAAAA,OAAQ4gD,IAAAA,qBAAsB,CACtC5+B,KAAMhiB,EAAO48C,UACbxhC,OAAQpb,EAAOob,OACfC,MAAOyvB,SAASqM,EAAK97B,OACrBulC,eAAAA,UAIN5f,IAAS,SAAAne,UACP2yB,EAAKqG,KACH,QACAzZ,KAAKC,UAAU,CACbxf,MAAAA,IAEFiK,+BAAuB+zB,kCAAkC9f,gCAMjE,SACED,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBy6B,iCAAiC/f,OACvDpmC,KAAKomD,8BAKT,SACEjgB,qBAKOx7B,GACLw7B,EACAjB,GAAWmB,GAAXnB,EAA0B,SAACsX,UACzB7xC,GACE6xC,EAAK17B,MAELokB,IAAM,SAAA7d,SAAS,CACb46B,UAAW56B,EAAK7G,SAASsvB,cACzBrvB,OAAQ4G,EAAK5G,OAAO5S,KAAI,SAAAsT,eAAU,CAChCxB,GAAIwB,EAAMxB,GACVC,UAAWuB,EAAMvB,UACjBM,oBAAWiB,EAAMjB,8BAANmmC,EAAiBx4C,KAAI,SAAAy4C,SAAQ,CACtC9nC,UAAW8nC,EAAI9nC,UAAUsxB,cACzBrxB,WAAY6nC,EAAI7nC,iCAKtBqC,eAAU,CACRzb,OAAQ,CACN4W,iBAAkBugC,EAAKz7B,gBACvBb,oBAAWs8B,EAAKt8B,8BAALqmC,EAAgB14C,KAAI,SAAAy4C,SAAQ,CACrC9nC,UAAW8nC,EAAI9nC,UACfC,WAAY6nC,EAAI7nC,eAElBqC,MAAAA,EACAmlC,eAAgB,OAGpB5f,GACAA,GAAQ,kBAAkB,gBAAGhhC,IAAAA,cAC3BihC,IAAoB,kBAAMoV,EAAKyD,OAAOpB,WAAW1I,KAAKhwC,SAExDghC,IAAO,gBAAGhhC,IAAAA,OAAQ4gD,IAAAA,qBAAsB,CAEtCnlC,MAAOzb,EAAOyb,MAAMjT,KAAI,SAAAwZ,SAAS,CAC/BA,KAAMA,EAAK46B,UACXxhC,OAAQ4G,EAAK5G,WAEfP,UAAWs8B,EAAKt8B,UAChBjE,iBAAkBugC,EAAKz7B,gBACvBklC,eAAAA,UAIN5f,IAAS,SAAAne,UACPwzB,EAAKwF,KACH,QACAzZ,KAAKC,UAAUxf,GACfiK,+BAAuBq0B,oCAAoCpgB,OAC3D,gCAOR,SACED,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB+6B,mCAAmCrgB,OACzDpmC,KAAK0mD,sCAKT,SACEvgB,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB+6B,mCAAmCrgB,OACzDpmC,KAAK0mD,oDAIT,SACEvgB,OAQIwgB,EACAC,KAEAzgB,EAAO3d,UAAUpkB,OAASgb,wBAAgB67B,OAC5C0L,EAAWxgB,EAAO3d,UAClBo+B,EAAazgB,EAAOxd,cACf,CAAA,GAAIwd,EAAOzd,SAAStkB,OAASgb,wBAAgB67B,cAI3C5U,GAAM,CACX5d,WAAY0d,EAAO1d,WACnBE,UAAWwd,EAAOxd,YALpBg+B,EAAWxgB,EAAOzd,SAClBk+B,EAAazgB,EAAO1d,eAQRo+B,EAAc1gB,EAApBniB,KAGF8iC,EAAaltC,KAAKquB,IAAI,GADX,UAGVt9B,GACL3K,KAAK+mD,UAAU,CACbpqC,QAASgqC,EAAS9nC,KAAKM,aACvBQ,GAAIgnC,EAAS9nC,KAAKU,QAClBqJ,cAAc,IAEhByd,GAAQ,kBAAkB,gBAAS2gB,IAANhjC,KACvBijC,EAAiBzlC,YAAU/K,KAAK,GAE9BuN,EAAkB,UAEpBgjC,MAAAA,GAAAA,EAAalmD,QACfkjB,EAAK3d,WAAL2d,KACKgjC,EAAYn5C,KAAI,SAAAy4C,SAAQ,CACzB9nC,UAAW8nC,EAAI3pC,QACf8B,WAAY6nC,EAAI7nC,iBAKlBooC,MAAAA,GAAAA,EAAW/lD,QACbkjB,EAAK3d,WAAL2d,KAAa6iC,IAGf7iC,MAAAA,GAAAA,EAAM/e,SAAQ,SAAAqhD,OAGNY,EAAYttC,KAAKolC,MACrBthC,YAAY4oC,EAAI7nC,WAAaqoC,GAAYjS,QA/BhC,KAgCTA,UACFoS,EAAiBA,EAAehuC,IAC9BuI,YAAU/K,KAAKywC,GAAWC,IAAIP,OAI3BvgB,GAAM4gB,EAAejf,IAAI,IAAM8e,OAExCzgB,IAAO,gBAAG4gB,IAAAA,eACFx+B,EAAe0d,EAAf1d,WACAE,EAAcwd,EAAdxd,iBAEFwd,EAAO3d,UAAUpkB,OAASgb,wBAAgB67B,OAC5CtyB,EAAY6c,GACV9jB,GAAkB0kB,OAAOzd,EAAU1P,IAAIguC,KAGzCx+B,EAAa+c,GACX9jB,GAAkB0kB,OAAO3d,EAAWxP,IAAIguC,KAIrC,CACLx+B,WAAAA,EACAE,UAAAA,0CAMR,uBACEtB,IAAAA,KACAmB,IAAAA,UACAE,IAAAA,SACAD,IAAAA,WACAE,IAAAA,cACAC,aAAAA,gBACA5E,IAAAA,KACA+D,IAAAA,4BAUOpd,GACL07B,GAAU,sBAAVA,CACErmC,KAAKkhD,KACH,yBACAzZ,KAAKC,UAAU,CACbrgB,KAAMA,EAAKyoB,cACXsX,WAAY,CACVhjD,KAAMokB,EAAUpkB,KAChBya,KAAM7e,KAAK+jD,aAAav7B,IAE1BgF,YAAa/E,EAAWjS,WACxB6wC,UAAW,CACTjjD,KAAMskB,EAAStkB,KACfya,KAAM7e,KAAK+jD,aAAar7B,IAE1BiF,WAAYhF,EAAUnS,WACtBoS,aAAAA,EACA5E,KAAMhkB,KAAKsnD,qBAAqBtjC,GAChC+D,qBAAAA,IAEFoK,+BAAuBo1B,qCAAqCnhB,SAGhEC,GAAQ,WAAW,gBAAGmhB,IAAAA,2BACpBA,EAAoB3+B,SAChBwd,GAAM,CACJrkB,SACEwlC,EAAoB3+B,SAAS1B,WAC7BqgC,EAAoB/5B,cAChB+5B,EAAoB/5B,cACpB+5B,EAAoB55B,aAC1B3L,WAAYulC,EAAoB3+B,SAAS3B,gBACzChF,SAAUslC,EAAoB3+B,SAAS5B,YAEzCof,GAAM,SAEZA,GAAQ,cAAc,gBAAGmhB,IAAAA,oBACjB/+B,EAAaG,EACf4+B,EAAoBh6B,YACpB2a,GAAqB3f,EAAWg/B,EAAoBh6B,oBACjD6Y,GAAM,CACXplB,QAASumC,EAAoB95B,cAC7BvM,MAAOqH,EACPpH,SAAUqH,OAGd4d,GAAQ,aAAa,gBAAGmhB,IAAAA,oBAChB7+B,EAAYC,EACd4+B,EAAoB75B,WACpBwa,GAAqBzf,EAAU8+B,EAAoB75B,mBAChD0Y,GAAM,CACXplB,QAASumC,EAAoB35B,aAC7B1M,MAAOuH,EACPtH,SAAUuH,OAGd0d,GACE,aACA,gBAAGmhB,IAAAA,oBAAqBC,IAAAA,WAAYC,IAAAA,UAAWC,IAAAA,eAC7C/+B,GACA++B,GACAD,EAAUvmC,MAAM/c,OAASgb,wBAAgB67B,OACrCiB,EAAKiD,OAAOpB,WAAW6J,mBACrBJ,EAAoBj7B,UACpBk7B,EACAC,EACAF,EAAoB/5B,cACpB+5B,EAAoB55B,aACpB45B,EAAoB9mC,MACpB8mC,EAAoBz/B,qBACpB4/B,GAEFzL,EAAKiD,OAAOpB,WAAW8J,YACrBL,EAAoBj7B,UACpBk7B,EACAC,EACAF,EAAoB/5B,cACpB+5B,EAAoB55B,aACpB45B,EAAoB9mC,MACpB8mC,EAAoBz/B,yBAG9Bse,IAAO,kBAAgE,CACrEmhB,sBADQA,oBAERC,aAF6BA,WAG7BC,YAHyCA,UAIzCr/B,YAJoDA,mDAS1D,SACErE,UAEOA,MAAAA,SAAAA,EAAMnW,KAAI,SAAAy4C,SAAQ,CACvB3pC,QAAS2pC,EAAI9nC,UACbspC,eAAgBxB,EAAI7nC,gEAIxB,SACEuK,MAOKA,MAAAA,GAAAA,EAAeloB,aAEb,CACLinD,yBAA0B/+B,EACvBnb,KAAI,SAAAy4C,UAAOA,EAAI9nC,aACflG,KAAK,KACR0vC,0BAA2Bh/B,EACxBnb,KAAI,SAAAy4C,UAAOA,EAAI7nC,cACfnG,KAAK,kCAIZ,uBACE+O,IAAAA,KACAmB,IAAAA,UACAE,IAAAA,SACAD,IAAAA,WACAE,IAAAA,cACAC,aAAAA,gBACA5E,IAAAA,KACA+D,IAAAA,4BAKOpd,GACLie,EACI5oB,KAAKioD,4BAA4B,CAC/B5gC,KAAAA,EACAmB,UAAAA,EACAE,SAAAA,EACAD,WAAAA,EACAE,UAAAA,EACAC,aAAAA,EACA5E,KAAAA,IAEFqiB,GAAM,CAAE5d,WAAAA,EAAYE,UAAAA,IACxB0d,IAAS,SAAA6hB,UACPhL,EAAKiL,oBAAoB,CACvB9gC,KAAAA,EACAmB,UAAAA,EACAE,SAAAA,EACAD,WAAYy/B,EAAoBz/B,WAChCE,UAAWu/B,EAAoBv/B,UAC/BC,aAAAA,EACA5E,KAAAA,EACA+D,qBAAAA,OAGJse,GACE,UACA,gBAAGmhB,IAAAA,oBAAqBC,IAAAA,WAAYC,IAAAA,UAAWr/B,IAAAA,iBAC7C60B,EAAKgE,KACH,SACAzZ,KAAKC,UAAU,CACbnb,UAAWi7B,EAAoBj7B,UAC/BiB,YAAag6B,EAAoBh6B,YAAYhX,WAC7CiX,cAAe+5B,EAAoB/5B,cACnCC,cAAe+5B,EAAWxmC,QAC1B0M,WAAY65B,EAAoB75B,WAAWnX,WAC3CoX,aAAc45B,EAAoB55B,aAClCC,aAAc65B,EAAUzmC,QACxB8G,qBAAsBy/B,EAAoBz/B,qBAC1CrH,MAAO8mC,EAAoB9mC,MAC3BiH,gBAAiBU,EACjBO,aAAAA,EACA5E,KAAMk5B,EAAKoK,qBAAqBtjC,KAElCmO,+BAAuBi2B,gCAAgChiB,WAG7DC,IAAO,qBAAGhhC,sCAId,SACE8gC,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBnD,qCAAqC6d,OAC3DpmC,KAAKqoD,0CAIT,SACExkC,qBAEOlZ,GACLkZ,EAAQrN,WACRxW,KAAKm/C,OAAOpB,WAAWpS,YACvBtF,IAAO,SAAAhe,UACLof,KAAKC,UAAU,CACb/f,gBAAiBU,OAGrBge,IAAS,SAAAxnB,UACPu+B,2BACav5B,GACXhF,EACAsT,+BAAuBm2B,gCAAgCliB,uCAM/D,SACED,UAEOD,GACLC,EACAza,8BAAsB68B,gCAAgCniB,OACtDpmC,KAAKwoD,0CAIT,uBACEnhC,IAAAA,KACAmB,IAAAA,UACAE,IAAAA,SACAD,IAAAA,WACAE,IAAAA,UACA9E,IAAAA,YACA+E,aAAAA,gBACA5E,IAAAA,YAKOrZ,GACL3K,KAAKmoD,oBAAoB,CACvB9gC,KAAAA,EACAmB,UAAAA,EACAE,SAAAA,EACAD,WAAAA,EACAE,UAAAA,EACAC,aAAAA,EACA5E,KAAAA,IAEFqiB,GACE,UACA,gBAAGmhB,IAAAA,oBAAqBC,IAAAA,WAAYC,IAAAA,UAAWr/B,IAAAA,UACvCs/B,EAAUH,EAAoB3+B,mBAC/B2+B,EAAoB3+B,cACvB5B,UAAWugC,EAAoB3+B,SAAS5B,UAAUzQ,oBAE7CiyC,EAAKvH,KACV,SACAzZ,KAAKC,UAAU,CACbnb,UAAWi7B,EAAoBj7B,UAC/BiB,YAAag6B,EAAoBh6B,YAAYhX,WAC7CiX,cAAe+5B,EAAoB/5B,cACnCC,cAAe+5B,EAAWxmC,QAC1B0M,WAAY65B,EAAoB75B,WAAWnX,WAC3CoX,aAAc45B,EAAoB55B,aAClCC,aAAc65B,EAAUzmC,QACxB8G,qBAAsBy/B,EAAoBz/B,qBAC1CrH,MAAO8mC,EAAoB9mC,MAC3BiH,gBAAiBU,EACjByF,SAAUjK,EACVgF,SAAU8+B,EACV/+B,aAAAA,EACA5E,KAAMykC,EAAKnB,qBAAqBtjC,KAElCmO,+BAAuBu2B,gCAAgCtiB,WAI7DC,IAAO,qBAAGhhC,sCAId,SACE8gC,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBi9B,qCAAqCviB,OAC3DpmC,KAAK4oD,uCAIT,SACEziB,gBAEOnmC,KAAKqpC,gCAEAlD,EAAOhnB,mCAAc3I,aAAc,OAC7C2b,+BAAuBP,6BAA6BwU,8CAIxD,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBm9B,6BAA6BziB,OACnDpmC,KAAK8oD,mIAIT,SACE3iB,OAEMoD,EAAMC,UAAYC,aACtB,CAAEF,IAAK,SAAUG,MAAOvD,GACxB,CAAE4iB,YAAa,iBAEV/oD,KAAKqpC,IACVE,EACApX,+BAAuB62B,+BAA+B5iB,gDAI1D,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBu9B,+BAA+B7iB,OACrDpmC,KAAKkpD,sIAKT,SACE/iB,UAEA5R,QAAQyxB,KACN,qGAEKhmD,KAAKqpC,uBACElD,EAAO9e,KAAKyoB,eACxB3d,+BAAuBg3B,gCAAgC/iB,iDAI3D,WACED,4FAEOD,GACLC,EACAza,8BAAsB09B,gCAAgChjB,OACtDpmC,KAAKqpD,sIAIT,SACEljB,UAEOnmC,KAAKqpC,uBACElD,EAAO9e,KAAKyoB,0BAAiB3J,EAAOhnB,cAChDgT,+BAAuBm3B,+BAA+BljB,OACtD,8CAIJ,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB69B,+BAA+BnjB,OACrDpmC,KAAKwpD,uIAIT,gBACEniC,IAAAA,KACAyB,IAAAA,QACAC,IAAAA,OAKMwgB,EAAMC,UAAYC,aACtB,CACEF,uBAAiBliB,EAAKyoB,eACtBpG,MAAO,CAAE5gB,QAAAA,EAASC,OAAAA,IAEpB,CACEggC,YAAa,iBAGV/oD,KAAKqpC,IACVE,EACApX,+BAAuBs3B,iCAAiCrjB,OACxD,gDAIJ,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBg+B,iCAAiCtjB,OACvDpmC,KAAK2pD,6IAIT,SACExjB,qBAKOx7B,GACLw7B,EAAO5mB,QACPjC,GAAkB8oB,OAClBl1B,IACE,SAAA6F,UACE6yC,EAAKvgB,6BACelD,EAAOhnB,yBAAgBgnB,EAAO5mB,SAChD4S,+BAAuB03B,qCAAqCzjB,WAEhE,SAAA0jB,UACEF,EAAKvgB,6BACelD,EAAO5mB,SACzB4S,+BAAuB03B,qCAAqCzjB,0DAMtE,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBq+B,qCAAqC3jB,OAC3DpmC,KAAKklD,uJAIT,WAAuBrjC,kFACfhD,EAAO4oB,KAAKC,UAAU,CAC1Bnb,UAAW1K,sBAIO8mB,UAAMuY,KAAK,aAAcriC,EAAM7e,KAAKspC,8BAAhD7D,2BACCA,EAAI5mB,4CAEL0oB,uIAIV,gBACE1jB,IAAAA,YACA+E,aAAAA,gBACAI,IAAAA,qBAKOhpB,KAAKqpC,IACVG,UAAYC,aAAa,CACvBF,qBAAe1lB,GACf6lB,UACE9gB,aAAAA,GACG5oB,KAAKgqD,kCAAkChhC,MAG9CmJ,+BAAuBtD,6BAA6BuX,gCAIxD,SACED,UAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBu+B,6BAA6B7jB,OACnDpmC,KAAKkqD,qCAIT,SACExgB,UAEO1pC,KAAKqpC,IACVG,UAAYC,aAAa,CACvBF,IAAK,SACLG,UACEvgB,SAAUugB,EAAMvgB,SAChBC,UAAWsgB,EAAMtgB,UACjBL,OAAQ2gB,EAAM3gB,OACdM,UAAWqgB,EAAMrgB,UACjBhC,KAAMqiB,EAAMriB,KACZzB,OAAQ8jB,EAAM9jB,OACd0D,cAAeogB,EAAMpgB,cACrBC,cAAemgB,EAAMngB,cACrBC,eAAgBkgB,EAAMlgB,eACtBC,aAAcigB,EAAMjgB,aACpBC,kBAAmBggB,EAAMhgB,kBACzBC,iBAAkB+f,EAAM/f,iBACxBC,iBAAkB8f,EAAM9f,iBACxBC,aAAc6f,EAAM7f,aACpBC,gBAAiB4f,EAAM5f,gBACvBC,cAAe2f,EAAM3f,cACrBC,mBAAoB0f,EAAM1f,mBAC1BC,gBAAiByf,EAAMzf,gBACvBC,kBAAmBwf,EAAMxf,kBACzBC,kBAAmBuf,EAAMvf,kBACzBC,cAAesf,EAAMtf,cACrBxB,aAAc8gB,EAAM9gB,cACjB5oB,KAAKgqD,kCAAkCtgB,EAAM1gB,kBAGpDmJ,+BAAuBg4B,8BAA8B/jB,iCAIzD,eACED,yDAA2D,CACzDvd,cAAc,UAGT5oB,KAAKkmC,kBACVC,EACAza,8BAAsB0+B,8BAA8BhkB,OACpDpmC,KAAKqqD,sCAIT,SACE3gB,UAEO1pC,KAAKqpC,IACVG,UAAYC,aAAa,CACvBF,IAAK,SACLG,UACEvgB,SAAUugB,EAAMvgB,SAChBC,UAAWsgB,EAAMtgB,UACjBL,OAAQ2gB,EAAM3gB,OACdM,UAAWqgB,EAAMrgB,UACjBhC,KAAMqiB,EAAMriB,KACZzB,OAAQ8jB,EAAM9jB,OACdlD,SAAUgnB,EAAMhnB,SAChB2H,WAAYqf,EAAMrf,WAClBpjB,KAAMyiC,EAAMziC,KACZqjB,YAAaof,EAAMpf,YACnBC,WAAYmf,EAAMnf,WAClB3B,aAAc8gB,EAAM9gB,cACjB5oB,KAAKgqD,kCAAkCtgB,EAAM1gB,kBAGpDmJ,+BAAuBm4B,8BAA8BlkB,OACrD,6CAIJ,sGACED,iCAA2D,CACzDvd,cAAc,qBAGT5oB,KAAKkmC,kBACVC,EACAza,8BAAsB6+B,8BAA8BnkB,OACpDpmC,KAAKwqD,iIAIT,gBACE7tC,IAAAA,QACAgD,IAAAA,OACAiJ,aAAAA,uBAKO5oB,KAAKqpC,qBACA1sB,EAAQmzB,0BAAiBnwB,2BAAmBiJ,GACtDuJ,+BAAuB1C,oBAAoB2W,OAC3C,4CAIJ,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB++B,6BAA6BrkB,OACnDpmC,KAAK+mD,wIAIT,eACErd,yDAA8D,GAKxDH,EAAMC,UAAYC,aAAa,CACnCF,IAAK,eACLG,MAAAA,WAGK1pC,KAAKqpC,IACVE,EACApX,+BAAuBu4B,oCAAoCtkB,uCAI/D,eACED,yDAAiE,UAE1DnmC,KAAKkmC,kBACVC,EACAza,8BAAsBi/B,oCAAoCvkB,OAC1DpmC,KAAK4qD,2CAIT,gBACEjrC,IAAAA,UAKO3f,KAAKqpC,qBACA1pB,GACVwS,+BAAuBjC,oBAAoBkW,8CAI/C,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBm/B,6BAA6BzkB,OACnDpmC,KAAK8qD,uIAIT,SACEphB,OAKMH,EAAMC,UAAYC,aAAa,CACnCF,kBACAG,MAAAA,WAGK1pC,KAAKqpC,IACVE,EACApX,+BAAuB44B,mCAAmC3kB,oDAI9D,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBs/B,mCAAmC5kB,OACzDpmC,KAAKirD,4IAIT,gBACEtuC,IAAAA,eAKO3c,KAAKqpC,0BACK1sB,GACfwV,+BAAuBnE,yBAAyBoY,mDAIpD,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBw/B,kCAAkC9kB,OACxDpmC,KAAKmrD,yIAIT,eACEzhB,yDAA0D,GAEpDH,EAAMC,UAAYC,aAAa,CACnCF,IAAK,WACLG,MAAAA,WAGK1pC,KAAKqpC,IACVE,EACApX,+BAAuBi5B,gCAAgChlB,iDAI3D,sGACED,iCAA6D,qBAEtDD,GACLC,EACAza,8BAAsB2/B,gCAAgCjlB,OACtDpmC,KAAKsrD,qIAIT,gBACE3rC,IAAAA,UAKO3f,KAAKqpC,uBACE1pB,GACZwS,+BAAuBrC,sBAAsBsW,gDAIjD,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB6/B,+BAA+BnlB,OACrDpmC,KAAKwrD,sIAIT,gBACE7rC,IAAAA,UAKO3f,KAAKqpC,wBACG1pB,GACbwS,+BAAuBlC,uBAAuBmW,iDAIlD,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBD,gCAAgC2a,OACtDpmC,KAAKyrD,iJAST,SACEtlB,UAKOnmC,KAAKkhD,KACV,4BACA/a,EACAnmC,KAAK0rD,2CAl8DO,yDA48DhB,WACEvlB,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsBigC,0CAA0CvlB,OAChEpmC,KAAK4rD,yKAIT,SACEzlB,cAEM0lB,EAA0B1lB,EAAOle,iBAAiBpa,KACtD,gBAAGsT,IAAAA,MAAO+B,IAAAA,OAAQqE,IAAAA,eAAgB,CAChCrE,OAAQ/B,EAAM/c,OAASgb,wBAAgB67B,OAAS,IAAM/3B,EAAO1M,WAC7D+Q,SAAUA,EAASuoB,cACnB3uB,MAAO,CACL/c,KAAM+c,EAAM/c,KACZya,KAAMitC,EAAK/H,aAAa5iC,cAIvB,CACLsG,iBAAkB0e,EAAO1e,iBAAiBqoB,cAC1CpoB,kBAAmBmkC,8BASvB,SACE1lB,qBAEOx7B,GACL07B,GAAU,8BAAVA,CACErmC,KAAK4rD,uBACH5rD,KAAK+rD,qCAAqC5lB,KAG9CE,GACE,iCACA,gBAAG2lB,IAAAA,mCACMC,EAAK9M,OAAOpB,WAAWmO,WAAWF,MAG7C3lB,GACE,UACA,gBAAG2lB,IAAAA,4BAA6BG,IAAAA,qCAC9BF,EAAK/K,KACH,YACA,CACEr0B,iBAAkBm/B,EAA4Bn/B,iBAC9C80B,SAAUwK,GAEZh6B,+BAAuBi6B,+BAA+BhmB,OAtgEhD,SA0gEZC,IAAO,qBAAGhhC,mDASd,WACE8gC,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB2gC,+BAA+BjmB,OACrDpmC,KAAKssD,+IAIT,WACEnmB,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB6gC,4BAA4BnmB,OAClDpmC,KAAKyrD,yIAIT,gBACE9rC,IAAAA,UAKO3f,KAAKqpC,0BACK1pB,GACfwS,+BAAuBnC,yBAAyBoW,mDAIpD,WACED,4FAEOnmC,KAAKkmC,kBACVC,EACAza,8BAAsB8gC,kCAAkCpmB,OACxDpmC,KAAKysD,4IAIT,eACE/iB,yDAA6D,GAKvDH,EAAMC,UAAYC,aAAa,CACnCF,IAAK,cACLG,MAAAA,WAGK1pC,KAAKqpC,IACVE,EACApX,+BAAuBu6B,mCAAmCtmB,oDAI9D,sGACED,iCAAgE,qBAEzDD,GACLC,EACAza,8BAAsBihC,mCAAmCvmB,OACzDpmC,KAAK4sD,0IAIT,eACEljB,yDAA2D,GAErDH,EAAMC,UAAYC,aAAa,CACnCF,IAAK,YACLG,MAAAA,WAGK1pC,KAAKqpC,IACVE,EACApX,+BAAuB06B,iCAAiCzmB,kDAI5D,sGACED,iCAA8D,qBAEvDD,GACLC,EACAza,8BAAsBohC,iCAAiC1mB,OACvDpmC,KAAK+sD,0IAIT,eACE5mB,yDAA4D,GAKtDoD,EAAMC,UAAYC,aAAa,CACnCF,IAAK,YACLG,MAAOvD,IAGH6mB,EACJ76B,+BAAuB86B,yCAAyC7mB,cAE3DpmC,KAAKqpC,IAAIE,EAAKyjB,EAAS,oCAGhC,eACE7mB,yDAA8D,UAEvDD,GACLC,EACAza,8BAAsBwhC,iCAAiC9mB,OACvDpmC,KAAKmtD,8CAIT,eACEhnB,yDAA4D,GAKtDoD,EAAMC,UAAYC,aAAa,CACnCF,IAAK,YACLG,MAAOvD,IAGH6mB,EACJ76B,+BAAuBi7B,uCAAuChnB,cAEzDpmC,KAAKqpC,IAAIE,EAAKyjB,EAAS,kCAGhC,eACE7mB,yDAA8D,UAEvDD,GACLC,EACAza,8BAAsBwhC,iCAAiC9mB,OACvDpmC,KAAKqtD,wCAIT,eACE3jB,yDAAuD,GAEjD4jB,EAA6D5jB,EACnE4jB,EAAU/lC,SAAWpK,oBAAY0oC,mBAC3Btc,EAAMC,UAAYC,aAAa,CACnCF,IAAK,YACLG,MAAO4jB,WAGFttD,KAAKqpC,IACVE,EACApX,+BAAuBo7B,6BAA6BnnB,8CAIxD,sGACED,iCAA0D,qBAEnDD,GACLC,EACAza,8BAAsB8hC,6BAA6BpnB,OACnDpmC,KAAKytD,iIAIT,eACE/jB,yDAAwD,GAElDH,EAAMC,UAAYC,aAAa,CACnCF,IAAK,SACLG,MAAAA,WAGK1pC,KAAKqpC,IACVE,EACApX,+BAAuBu7B,8BAA8BtnB,2CAIzD,SACED,EACArmC,OAEMwO,EAAI42B,YACO,SAAXyoB,EAAYxnB,EAAW9gC,UAC3BsF,GACE7K,EAAGqmC,GACHE,IAAS,SAAAxnB,UACPA,EAAKkK,OACD4kC,WACOxnB,OAAQpd,OAAQlK,EAAKkK,SAC1Bza,EAAEkD,OAAOnM,EAAQwZ,EAAKxZ,SAExBghC,GAAM/3B,EAAEkD,OAAOnM,EAAQwZ,EAAKxZ,aAI/BsoD,CAASxnB,EAAQ,6BAG1B,eACEA,yDAA2D,UAEpDnmC,KAAKkmC,kBACVC,EACAza,8BAAsBkiC,8BAA8BxnB,OACpDpmC,KAAK6tD,+DAIT,WACEhsC,oFAEMhD,EAAO4oB,KAAKC,UAAU,CAC1Bnb,UAAW1K,IAGTnB,EAAQ,oBAEQioB,UAAMuY,KACtB,2BACAriC,EACA7e,KAAKspC,uBAHD7D,SAKN/kB,EAAQ,UAAW+kB,EAAI5mB,KAAKxZ,OAASogC,EAAI5mB,KAAKxZ,OAAOqb,MAAQ,wDAEvD6mB,0CAED,CAAEkd,MAAOrK,OAAO15B,sIAGzB,SAAoBS,MACe,QAA7BA,EAAM/c,KAAK0sC,oBAEN,CACLhyB,SAFaqC,EAEItC,KAAKC,aAGO,UAA7BqC,EAAM/c,KAAK0sC,cAA2B,KAClCgd,EAAS3sC,QACR,CACLrC,SAAUgvC,EAAOjvC,KAAKC,SACtB8L,cAAekjC,EAAOjvC,KAAKM,iBAGE,WAA7BgC,EAAM/c,KAAK0sC,cAA4B,KACnCgd,EAAS3sC,QACR,CACLwJ,SAAUmjC,EAAOjvC,KAAKU,QACtBqL,cAAekjC,EAAOjvC,KAAKM,iBAGE,mBAA7BgC,EAAM/c,KAAK0sC,cAAoC,KAC3Cgd,EAAS3sC,QACR,CACLwJ,SAAU2mB,GAAmBwc,EAAOjvC,KAAKc,GAAImuC,EAAOjvC,KAAKe,WACzDgL,cAAekjC,EAAOjvC,KAAKM,iBAGE,oBAA7BgC,EAAM/c,KAAK0sC,cAAqC,KAC5Cgd,EAAS3sC,QACR,CACLwJ,SAAU2mB,GAAmBwc,EAAOjvC,KAAKc,GAAImuC,EAAOjvC,KAAKe,WACzDgL,cAAekjC,EAAOjvC,KAAKM,oBAGzB,IAAI5b,MAAM,oDAGlB,SAAsB4d,MACa,QAA7BA,EAAM/c,KAAK0sC,oBACN,CACLhyB,SAAUqC,EAAMtC,KAAKC,aAGQ,UAA7BqC,EAAM/c,KAAK0sC,oBACN,CACLhyB,SAAUqC,EAAMtC,KAAKC,SACrBK,aAAcgC,EAAMtC,KAAK+L,kBAGI,WAA7BzJ,EAAM/c,KAAK0sC,oBACN,CACLvxB,QAAS4B,EAAMtC,KAAK8L,SACpBxL,aAAcgC,EAAMtC,KAAK+L,kBAGI,mBAA7BzJ,EAAM/c,KAAK0sC,oBACN,CACLvxB,QAAS+xB,GAAmBnwB,EAAMtC,KAAKc,GAAIwB,EAAMtC,KAAKe,WACtDT,aAAcgC,EAAMtC,KAAK+L,kBAGI,oBAA7BzJ,EAAM/c,KAAK0sC,oBACN,CACLvxB,QAAS+xB,GAAmBnwB,EAAMtC,KAAKc,GAAIwB,EAAMtC,KAAKe,WACtDT,aAAcgC,EAAMtC,KAAKM,oBAGvB,IAAI5b,MAAM,gFAKlB,SAAkD8B,qBACzC6L,GAAQ,CACb6b,mBAAoB1nB,EAAO0nB,mBAAmBlf,KAAI,SAAAkgD,mBAC7CA,OACH5sC,MAAO6sC,EAAKC,eAAeF,EAAiB5sC,YAE9C0L,iBAAkBxnB,EAAOwnB,gFAI7B,WACEsZ,EACAC,EACAtmC,+EAEO0lC,YACC76B,GACJy7B,EAAOD,GACPj1B,GAAU40B,IACVO,GACAA,GAAsBvmC,GACtBumC,GAAWkB,IALP58B,iNAeV,WACE4mB,yFAEqBvxB,KAAK2hD,SAAST,KACjC,YACA,CACEl2B,eAAgBuG,QAElBlxB,EACA,oBANIgF,2BAQCmgC,GAAa6b,GAAqCjb,OAAO/gC,6IAQlE,WACEksB,8FACAV,iCAA6B,mBAER7wB,KAAK2hD,SAAST,KACjC,YACA,CACEl2B,eAAgBuG,EAChBV,SAAAA,QAEFxwB,EACA,oBAPIgF,2BASCmgC,GAAa4b,GAAmChb,OAAO/gC,4IAQhE,WACE6oD,yFAEqBluD,KAAK2hD,SAAStY,wBACpB6kB,QACb7tD,OACAA,EACA,oBAJIgF,2BAMCmgC,GAAapV,GAAkCgW,OAAO/gC,0IAQ/D,WACE6oD,yFAEqBluD,KAAK2hD,SAAStY,wBACpB6kB,QACb7tD,OACAA,EACA,oBAJIgF,2BAMCmgC,GAAa5U,GAAgCwV,OAAO/gC,kJAM7D,WACE8oD,gGACAzN,iCAAuB,KAEjB0N,EAAmB5oB,GACvB+b,GAAyCnb,OAAO+nB,IAE5CE,WACDD,OACH58B,gBACE,oBAAqB48B,EACjB3mB,KAAKC,UAAU0mB,EAAiB58B,sBAChCnxB,sBAGDL,KAAKsuD,uBAAuB5N,EAAS2N,qJAM9C,WACEF,gGACAzN,iCAAuB,KAEjB0N,EAAmB5oB,GACvBgc,GAA6Cpb,OAAO+nB,IAEhDE,WACDD,OACH18B,sBACE,0BAA2B08B,EACvB3mB,KAAKC,UAAU0mB,EAAiB18B,4BAChCrxB,sBAGDL,KAAKsuD,uBAAuB5N,EAAS2N,oJAG9C,WAA6B3N,EAAS7sC,oFAC9Bw6C,WACDx6C,OACHwd,mBAAoBxd,EAAKwd,mBACrBxd,EAAKwd,mBAAmB/Y,KAAK,UAC7BjY,IAGA+oC,EACQ,OAAZsX,EAAmB,mBAAqB,kCAErB1gD,KAAK2hD,SAAST,KACjC9X,EACA,CACEzX,QAAS6X,UAAY9B,UAAU2mB,SAEjChuD,EACAqgD,iBANIr7C,2BAQCmgC,GAAa8b,GAAwClb,OAAO/gC,yJAMrE,gFACOrF,KAAKm/C,6BACF,IAAI57C,MAAM,2EAEXvD,KAAKm/C,OAAOoP,kKAQrB,WACEpoB,2FAE0BnmC,KAAKuuD,yCAAzBC,kBACexuD,KAAK2hD,SAAST,KAAK,WAAY/a,EAAQqoB,iBAAtDnpD,2BACCmgC,GAAa/S,GAA0B2T,OAAO/gC,0IAQvD,WACE8gC,2FAE0BnmC,KAAKuuD,yCAAzBC,kBACexuD,KAAK2hD,SAAStY,IAAI,WAAYlD,EAAQqoB,iBAArDnpD,2BACCmgC,GAAavS,GAAoBmT,OAAO/gC,yIAQjD,WAAwB8gC,2FACInmC,KAAKuuD,yCAAzBC,kBACexuD,KAAK2hD,SAAStY,uBACrBlD,EAAOhqB,YACnB,KACAqyC,iBAHInpD,2BAKCmgC,GAAa9S,GAAmB0T,OAAO/gC,+IAQhD,WACE8gC,2FAE0BnmC,KAAKuuD,yCAAzBC,kBACexuD,KAAK2hD,SAAST,mBAAoB/a,EAAQqoB,iBAAzDnpD,2BACCmgC,GAAa9oB,GAA8B0pB,OAAO/gC,+IAQ3D,WACE0b,EACAolB,2FAE0BnmC,KAAKuuD,yCAAzBC,kBACexuD,KAAK2hD,SAASR,4BAClBpgC,GACfolB,EACAqoB,iBAHInpD,2BAKCmgC,GAAa1oB,GAA6BspB,OAAO/gC,8JAQ1D,WACE0b,EACAolB,2FAE0BnmC,KAAKuuD,yCAAzBC,kBACexuD,KAAK2hD,SAAST,2BAClBngC,sBACfolB,EACAqoB,iBAHInpD,2BAKCmgC,GACL7iB,GAAyCyjB,OAAO/gC,2JASpD,WACE4B,EACA8Z,EACAolB,2FAE0BnmC,KAAKuuD,yCAAzBC,kBACexuD,KAAK2hD,SAASR,4BAClBpgC,8BAAmC9Z,GAClDk/B,EACAqoB,iBAHInpD,2BAKCmgC,GAAa3iB,GAAsCujB,OAAO/gC,oJAMnE,WACE8gC,yFAEqBnmC,KAAK2hD,SAAStY,0BAClBlD,EAAOxpB,2CADlBtX,2BAGCmgC,GAAaziB,GAA6BqjB,OAAO/gC,yHAxlF1D,SACE8gC,UAEOG,IAAoB,kBAAMgX,EAAiBxT,MAAM3D,yCAqC1D,qHACE0S,IAAAA,aACAzC,IAAAA,OACAqY,IAAAA,qBACAtiC,IAAAA,4BACAyxB,IAAAA,SACAC,IAAAA,aACA2B,YAAAA,gBACAxuB,IAAAA,SAEIolB,GAAUqY,GAAwBtiC,2BAC9BuiC,EAAiB9Q,EAAWp8B,YAAU/K,KAAKmnC,QAAYv9C,EACvDsuD,EAAiB9Q,EAAWr8B,YAAU/K,KAAKonC,QAAYx9C,WACxCs9C,GAAiB7T,MAAM,CAC1C+O,aAAAA,EACAzC,OAAAA,EACAwH,SAAU8Q,EACV7Q,SAAU8Q,kBAJNxP,SAOAyP,EAAmBppB,GACvBzoB,GAAWqpB,OAAOqoB,IAEdI,EAA+BrpB,GACnCzoB,GAAWqpB,OAAOja,IAEdtK,EAAiB2jB,GACrBloB,GAAkB8oB,OAAO+Y,EAAOpB,WAAWl8B,2BAEvBs9B,EAAOpB,WAAW7E,4BAAlCv8B,2BACC,IAAI2gC,EACTzE,EACAsG,EACAyP,EACAC,EACAlyC,EACAkF,EACA29B,EACAxuB,qCAGG,IAAIssB,EACTzE,EACA,GACA,GACA,GACA,GACA,sGCjMOiW,yBAKSt6B,OAAeu6B,yDAAO,mCAFtB,yBAEAv6B,IAAAA,OACbA,IAAIw6B,MAAMhvD,KAAKivD,UAAW,sCAC1BC,IAAM,IAAIC,UAAUC,OAAO,CAAEL,KAAAA,IAClC9lB,UAASjpC,WAEJkvD,IAAIG,GAAG,aAAcrvD,KAAKsvD,4DAGjC,SAAyBC,EAAsBpB,mBACxC35B,IAAIw6B,MACPhvD,KAAKivD,iCACWd,EAAIoB,OAAOC,sBAE7BD,EAAOE,SAAU,EAEjBF,EAAOF,GAAG,UAAWrvD,KAAK0vD,eAE1BH,EAAOF,GAAG,SAAS,WACjBp1C,EAAKua,IAAIw6B,MACP/0C,EAAKg1C,sCACgBd,EAAIoB,OAAOC,sDAKtC,SAAsBn3C,QACfmc,IAAIw6B,MAAMhvD,KAAKivD,UAAW52C,QAC1B62C,IAAIS,QAAQ1qD,SAAQ,SAACs4C,GACpBA,EAAOqS,aAAeT,UAAUU,MAClCtS,EAAOuS,KAAKz3C,eC/Cd03C,GAAoB,CAAC,gBAAiB,sBAWtBC,2EAAf,WACLC,EACArP,uEAEIA,EAAQsP,gCACV37B,QAAQyxB,KAAKpF,EAAQvoC,UAEjBuoC,EAAQuP,eAAkBC,2BACtB,IAAI7sD,MAVd,qFAcO0sD,uEAGT,IAAMG,GAAgB,mBACXL,GAAkBt7B,MAAK,SAAA47B,UAC9Bj8B,OAAOk8B,SAASC,OAAOpyC,SAASkyC,OC1BvBG,GAAwC,CACnDC,gBAAgB,EAChBC,QAAQ,2kBCeGC,GAAuB,iBAA0B,CAC5DC,iBAAkBC,SAASh9C,KAC3Bi9C,UAAW,GACX/a,KAAM,CACJgb,MAAO,IACPC,OAAQ,KAEVC,SAAU,CACR3kD,MAAO,KACP4kD,OAAQ,MAEVC,gCAAgC,IAI5BC,4TADc,8CAAA,iDAAA,kDAAA,2FAkBdC,GAAoB,gBACxBtb,IAAAA,KACAkb,IAAAA,SACAE,IAAAA,4GAIMF,EAASK,mBAAcL,EAASK,SAAS,sBACzCL,EAASC,yBAAoBD,EAASC,YAAY,sBAClDD,EAAS7kD,qBAAgB6kD,EAAS7kD,UAAU,sBAC5C6kD,EAAS3kD,uBAAkB2kD,EAAS3kD,WAAW,6BACxCypC,EAAKgb,oCACJhb,EAAKib,oNA9BD,mCAAA,sCAAA,uCAAA,8SAuDhBG,EAAiCC,GAA6B,oFAOrDG,sCAEDC,yDAAS,mCACTC,yDAA2C,6CAsCnD,SAAcC,UACd,SAACvrB,UACClsB,EAAKw3C,cACDx3C,EAAK03C,WAAWD,EAAOvrB,GACvBlsB,EAAK23C,WAAWF,EAAOvrB,6BAEV,SAAcurB,EAAevrB,UAChD,IAAIxmC,SAAQ,SAACV,EAASC,OACdqqC,EAAMtvB,EAAK43C,SAASH,EAAOvrB,EAAQurB,IAAUn+B,eAAOu+B,YACpDC,EAAe,WACnB39B,OAAO49B,oBAAoB,UAAWC,GAAe,GACrDC,EAAkBtB,iBAAiBuB,YAAYC,GAC/ClzD,EAAO,IAAIqE,MAAM,wBAGb2uD,WACDvB,MACA12C,EAAKw3C,eAEJY,EAAaxB,SAASyB,cAAc,SACpCF,EAAevB,SAASyB,cAAc,OACtCC,EAAY1B,SAASyB,cAAc,UACnCE,EAAiB3B,SAASyB,cAAc,UAC9CF,EAAaK,UAAUx5C,IAAI,0BAC3Bi5C,EAAkBpB,WAChBsB,EAAaK,UAAUx5C,IAAIi5C,EAAkBpB,WAC/CyB,EAAUE,UAAUx5C,IAAI,kCACxBs5C,EAAUG,aACR,UACA,4DAEFF,EAAeC,UAAUx5C,IAAI,uCAC7Bo5C,EAAWM,OACT9B,SAAS+B,eAAevB,GAAkBa,KAE5CE,EAAaO,OAAON,EAAYE,EAAWC,GAC3CA,EAAeK,iBAAiB,QAASd,GAIzCQ,EAAUG,aAAa,MAAOnpB,GAC9B2oB,EAAkBtB,iBAAiBkC,YAAYV,GAE/CG,EAAUM,iBAAiB,QAAQ,WACjCt+B,QAAQC,IAAI,gCAIRy9B,EAAgB,SAACc,YACjBA,EAAMxC,SAAWt2C,EAAKu3C,YAClB3yC,EAASk0C,EAATl0C,Q7C1LiB,a6C4LrBA,EAAKza,YACCya,EAAKxG,cACNmb,GAAaC,WAChBc,QAAQC,cAAOk9B,8BAGZl+B,GAAaI,aAChBW,QAAQC,+BACAk9B,QACDn+B,eAAOS,iBACVu+B,MAAAA,aAAAA,EAAWS,8BAAeC,YACxB,CACE7uD,K7CxMW,W6CyMXiU,QAASmb,GAAaM,iBACtBulB,QAASlT,GAEX,mBAKF5R,QAAQ90B,yCAKT+zB,GAAanV,cAChBkW,QAAQC,cAAOk9B,gBAAmB7yC,EAAKA,MACvC5f,YAAS4f,EAAKA,oBAAQ,eAGnB2U,GAAaE,KAChBa,QAAQC,cAAOk9B,cACfxyD,eAKGs0B,GAAanuB,aAChBkvB,QAAQC,cAAOk9B,4BAA+B7yC,EAAKA,MACnD5f,YAAS4f,EAAKA,oBAAQ,IACtBkzC,eAGGv+B,GAAaG,MAChBo+B,kBAIAx9B,QAAQ90B,MAAM,kBAAmBof,MAOzCuV,OAAOy+B,iBAAiB,UAAWZ,GAAe,+BAGjC,SAAcP,EAAevrB,UAChD,IAAIxmC,SAAQ,SAACV,EAASC,OACdg0D,EAAiBvC,KACjBpnB,EAAMtvB,EAAK43C,SAASH,EAAOvrB,EAAQurB,IAAUn+B,eAAOu+B,YACpDqB,EAAM/+B,OAAOg/B,KACjB7pB,EACA,yFACuE2pB,EAAend,KAAKgb,yBAAgBmC,EAAend,KAAKib,aAE5HmC,QACG,IAAI5vD,MAAM,6BAGZ8vD,EAAcC,aAAY,WAC1BH,EAAIl7C,SACNs7C,cAAcF,GACdn0D,EAAO,IAAIqE,MAAM,0BAElB,KAqEH6wB,OAAOy+B,iBAAiB,WAnEF,SAAhBZ,EAAiBc,MACjBA,EAAMxC,SAAWt2C,EAAKu3C,YAClB3yC,EAASk0C,EAATl0C,Q7C7QiB,a6C+QrBA,EAAKza,YACCya,EAAKxG,cACNmb,GAAaC,WAChBc,QAAQC,cAAOk9B,8BAGZl+B,GAAaI,aAChBW,QAAQC,+BACAk9B,QACDn+B,eAAOS,iBACVm/B,EAAIF,YACF,CACE7uD,K7C3RW,W6C4RXiU,QAASmb,GAAaM,iBACtBulB,QAASlT,GAEX,mBAKF5R,QAAQ90B,yCAKT+zB,GAAanV,cAChBkW,QAAQC,cAAOk9B,gBAAmB7yC,EAAKA,MACvC5f,YAAS4f,EAAKA,oBAAQ,eAInB2U,GAAaE,KAChBa,QAAQC,cAAOk9B,cACfxyD,eAIGs0B,GAAanuB,aAChBkvB,QAAQC,cAAOk9B,4BAA+B7yC,EAAKA,MACnDuV,OAAO49B,oBAAoB,UAAWC,GAAe,GACrDsB,cAAcF,GACdF,EAAIx/B,QACJ10B,YAAS4f,EAAKA,oBAAQ,eAInB2U,GAAaG,MAChBS,OAAO49B,oBAAoB,UAAWC,GAAe,GACrDsB,cAAcF,GACdF,EAAIx/B,QACJz0B,EAAO,IAAIqE,MAAM,qCAKjBgxB,QAAQ90B,MAAM,kBAAmBof,QAOS,2BAG5C7e,KAAKwzD,mBAAuCjgC,eAAOkgC,sDAErD,WAAOttB,yFACQlsB,EAAKu5C,mBAGxBjgC,eAAOmgC,MAHYz5C,CAGLksB,iBAHV9gC,SAKN+uB,OAAOwS,aAAa+sB,QAClB5+C,yBAAiBwzB,oBACjBljC,EAAOwf,oBAETuP,OAAOwS,aAAa+sB,QAClB5+C,yBAAiBgyB,YACjB1hC,EAAOmgB,8BAGFngB,mHAGHrF,KAAKwzD,mBACTjgC,eAAOqgC,uBAGF5zD,KAAKwzD,mBAAoCjgC,eAAOsgC,oCAE7C,wGAAO1tB,sCAAqC9lC,EAC9C4vD,EAAW,kBACfh2C,EAAKu5C,mBAA+CjgC,eAAOrO,QAA3DjL,CACEksB,sBAGG8pB,6EAGWjwD,KAAKwzD,mBAGvBjgC,eAAOugC,iDAEY9zD,KAAKwzD,mBAGxBjgC,eAAOwgC,wCAGE/zD,KAAKwzD,mBAGdjgC,eAAOu+B,oEAGU,WAAO3rB,wEAEtBA,EAAO/2B,QAAO,SAAAykB,UAAYA,EAASzvB,OAASgb,wBAAgB67B,UACzDn6C,OAAS,yBAENyC,MAAM,0FAGP0W,EAAKu5C,mBAGVjgC,eAAOS,iBAHF/Z,CAGoBksB,uHAGpBnmC,KAAKwzD,mBAAsCjgC,eAAOygC,oCAEnD,0FACNz/B,QAAQyxB,KACN,2EAGsB/rC,EAAKu5C,mBAC3BjgC,eAAO0gC,qBADHC,2BAICA,EAAU,wEAGJl0D,KAAKwzD,mBAGlBjgC,eAAO4gC,kEAMM,WAAOhuB,gFACd8pB,EAAW,kBACfh2C,EAAKu5C,mBAA4CjgC,eAAO6gC,aAAxDn6C,CACEksB,aAEE6pB,GAAaC,EAAU,CAC3BC,cAAc,EACdC,eAAe,EACf93C,QACE,gMAlVIm5C,OAAAA,OACAC,cAAAA,oCAGV,SAAiBC,EAAevrB,EAAakuB,MACvCtgC,GAAc5V,SAASuzC,UAClB1xD,KAAKwxD,WAGV9nB,EAAQvD,GAAU,OAGpBurB,IAAUn+B,eAAOsgC,MACjBnC,IAAUn+B,eAAOqgC,OACjBlC,IAAUn+B,eAAOygC,SAKb59C,MAAMQ,QAAQuvB,EAAOniB,MAAO,KACxBA,EAAOmiB,EAAOniB,KACpB0lB,WACKvD,OACHniB,UAAM3jB,EACNi0D,gBAAiBtwC,EAAKnW,KAAI,SAAAy4C,UAAOA,EAAI7nC,cACrC81C,eAAgBvwC,EAAKnW,KAAI,SAAAy4C,UAAOA,EAAI9nC,sBAKnC61C,EACH7qB,UAAYC,aAAa,CACvBF,cAAQvpC,KAAKwxD,mBAAUE,GACvBhoB,MAAAA,cAEC1pC,KAAKwxD,mBAAUE,UAAQ8C,UAAG9sB,UAAUvB,EAAQqqB,cCnI1CiE,GACX,qHCIK,SAASC,GAAkB1wC,UACzBA,EAAK5V,QAAO,SAACu2B,EAAK2hB,UAErBnW,UDT8C,ICW1CxL,EDX0C,ICY1C2hB,EAAI7nC,YACJo2B,QAAQ,GACV,IDd4C,MCiB/C,GAGE,SAAS8f,GAAyC3wC,GACvDA,EAAK/e,SAAQ,SAAAqhD,MAETA,EAAI7nC,WAAWjI,WAAW2H,SAAS,MACnCmoC,EAAI7nC,WAAWjI,WAAWo+C,MAAM,KAAK,GAAG9zD,OAAS,QAE3C,IAAIyC,MDtBd,qDEaF,SAASsxD,GACPC,EACA9wC,OAEM+wC,EAAqBL,GAAkB1wC,GAEvCgxC,EAA8B7kB,UFvBc,IEwB/C4kB,GAA2DlgB,QAAQ,GACpE,UAQK,CACLkgB,mBAAAA,EACA9N,eAPqB6N,EACpB3N,IAAI3lC,YAAU/K,KAAKu+C,IACnBhtB,IAAIxmB,YAAU/K,KF9BiC,ME+B/CuxB,IAAIxmB,YAAU/K,KAAK,OCfxB,SAASw+C,GACPC,EACAC,EACAC,UAEOF,EACJltB,IAAIxmB,YAAU/K,KAAuB,IAAlB0+C,IACnBhO,IAAI3lC,YAAU/K,KAA0B,IAArB2+C,QCrBT1U,gW3BKqB,8DAElC,wSuBLA,6zB9CJ+B,gI8COO,qCvBKP,2bADL,qJqBJiB,CAC3C2U,mBAAmB,gDER+B,oDAMlD,krBLwFgB,6G7BUU,SAC1BC,EACAC,UAEAD,EAAYpkD,GAAO,IAAI3N,MAAMgyD,IAAiBrkD,GAAQ,oDARjD,SAAqBE,SACpB,IAAI7N,mCAA4B6N,gDoC7DjC,gBACL0jD,IAAAA,UACA9N,IAAAA,YACAH,IAAAA,UACA2O,IAAAA,aAEIV,EAAU/nB,GAAGvrB,YAAU/K,KFvCW,YE2C9B,IAAIlT,MAAMkxD,IAGlBE,gBACK3N,MACAH,MACA2O,SAGDN,EAAgBJ,IAKhBD,GAAyBC,EAAW9N,GAFlByO,IAApBV,mBACgBW,IAAhBzO,eAGFiO,EAAgBA,EAAcj8C,IAAIy8C,SAK9Bb,GAAyBC,EAAWjO,GAFlB8O,IAApBZ,mBACgBa,IAAhB3O,eAGFiO,EAAgBA,EAAcj8C,IAAI28C,SAK9Bf,GAAyBC,EAAWU,GAFlBK,IAApBd,mBACgBe,IAAhB7O,eAGFiO,EAAgBA,EAAcj8C,IAAI68C,OAI5BC,EACJJ,EAA0BE,EAEtBG,EAA0BJ,EAAoB38C,IAAI68C,GAElDf,GACyB,IAA5BU,EAC2B,IAA1BE,EAC0B,IAA1BE,GACF,UAEK,CACLf,UAAWA,EACXI,cAAeA,EACfe,aAAc,CACZC,SAAU,CAERz3C,WAAY,EACZyE,OAAQ1B,YAAU/K,KAAK,IAEzB0/C,QAAS,CACP13C,WAAYg3C,EACZvyC,OAAQwyC,GAEVU,UAAW,CACT33C,WAAYs3C,EACZ7yC,OAAQ8yC,GAEVjB,mBAAAA,gDCtFC,gBACLG,IAAAA,cACAlO,IAAAA,YACAH,IAAAA,UACA2O,IAAAA,UAEAb,gBACK3N,MACAH,MACA2O,SAGCa,EAA0B3B,GAAkB1N,GAC5CsP,EAA4B5B,gBAC7B7N,MACA2O,KAECe,EAAsB7B,gBACvB1N,MACAH,MACA2O,KAECgB,EAAgB,IAAMD,EAEtBzB,EAAYI,EACfltB,IAAIxmB,YAAU/K,KAAqB,IAAhB+/C,IACnBrP,IAAI3lC,YAAU/K,KAAK,MACnB0wC,IAAI3lC,YAAU/K,KAAK,SAElBq+C,EAAU/nB,GAAGvrB,YAAU/K,KHhDW,YGiD9B,IAAIlT,MHlDZ,sEGqDMkzD,EAAgBxB,GACpBC,EACAsB,EACAH,GAGIK,EAAkBzB,GACtBC,EACAsB,EACAF,SAGK,CACLxB,UAAWA,EACXI,cAAeA,EACfe,aAAc,CACZC,SAAU,CAERz3C,WAAY,EACZyE,OAAQ1B,YAAU/K,KAAK,IAEzB0/C,QAAS,CACP13C,WAAY43C,EACZnzC,OAAQuzC,GAEVL,UAAW,CACT33C,WAAY63C,EACZpzC,OAAQwzC,GAEV3B,mBAAoBwB,wOlCGE,SAC1BnY,EACAj/B,OACAw3C,yDAAW,IAELC,EAAa,IAAIC,cAAwB,SAAAl8C,GAqBjChQ,GACV09B,GACAhC,IAAQ,SAAAh6B,UAAKu2C,IAAS,kBAAMjoC,EAAWlb,MAAM4M,SAtBzB,SAAhByqD,EAAiBjmC,UACrBlW,EAAW1C,OACP2qC,QAAKviD,GACLsK,GACE27B,cAAoB,kGACZ+X,EAAgB,IAAItG,WAAS54B,EAAc8U,GAAOpD,YACvBlxB,QAAQ4V,IAAI,CAC3C8oC,EAAcC,UAAUF,GACxBC,EAAcv/B,8CAFToT,OAASqsB,yBAIT,CAAErsB,QAAS1Q,YAAU/K,KAAKyb,GAAUqsB,QAAAA,gDAE7ClY,IAAS,SAAA0wB,UACP1wB,IAAU,kBAAM1rB,EAAWhV,KAAKoxD,SAElC1wB,IACE,SAAAh6B,UAAKu2C,IAAS,kBAAMjoC,EAAWlb,MAAM4M,SACrC,kBAAM1B,GAAKmsD,EAAcjmC,GAAW+xB,GAAQ+T,WAOtDK,aAGKrsD,GACLisD,EACAt7C,IAAqB,SAACzT,EAAMovD,UAASpvD,EAAKqqB,QAAQqT,GAAG0xB,EAAK/kC,kFD1ErC,SAAChP,UACxBvY,GACEuY,EAAOikC,IAAIvtC,KAAKquB,IAAI,GAAI,IACxBmS,OACA8c,cACAt5C,GAAsBwoB,OACtBZ,uBATqB,SAACtiB,UACxBvY,GAAKuY,EAAOikC,IAAIvtC,KAAKquB,IAAI,GAAI,IAAKvmB,GAAkB0kB,OAAQZ,wBCWpC,SAAC7oB,OAAiBg6C,yDAAW,IAC/CC,EAAa,IAAIC,cAAwB,SAAAl8C,GAgBjChQ,GACV09B,GACAhC,IAAQ,SAAAh6B,UAAKu2C,IAAS,kBAAMjoC,EAAWlb,MAAM4M,SAjBzB,SAAhByqD,EAAiBjmC,UACrBlW,EAAW1C,OACP2qC,QAAKviD,GACLsK,GACE27B,IAAoB,kBAAMzV,EAAS+wB,WAAWjlC,MAC9C0pB,IAAS,SAAAnU,UACPmU,IAAU,kBACR1rB,EAAWhV,KAAK,CAAEusB,QAAAA,EAASqsB,QAASzW,GAASjpB,KAAKC,iBAGtDunB,IACE,SAAAh6B,UAAKu2C,IAAS,kBAAMjoC,EAAWlb,MAAM4M,SACrC,kBAAM1B,GAAKmsD,EAAcjmC,GAAW+xB,GAAQ+T,WAOtDK,aAGKrsD,GACLisD,EACAt7C,IAAqB,SAACzT,EAAMovD,UAASpvD,EAAKqqB,QAAQqT,GAAG0xB,EAAK/kC,gCDvBrC,SAAChP,UACxBvY,GAAKwsD,aAAWj0C,GAASxB,GAAkB0kB,OAAQZ,GAAcuC,8gCFW/C,SAAOqvB,UACzBlmD,IACE,SAAA7E,UACEkoB,QAAQ90B,MAAM,cACd80B,QAAQ90B,MAAM4M,GACPA,KAET,SAAA+E,UACEmjB,QAAQC,IAAI,aACZD,QAAQC,IAAIpjB,GACLA,IATXF,CAWEkmD,oBA/BmB,SAAIhmD,UACzBmjB,QAAQC,IAAIpjB,GACLA,iBAGY,SAAOgmD,UAC1B/wB,IACE,SAAAh6B,UACEkoB,QAAQ90B,MAAM,eACd80B,QAAQ8iC,IAAIhrD,EAAG,CAAEirD,MAAO,OACjBjrD,KAET,SAAA+E,UACEmjB,QAAQC,IAAI,cACZD,QAAQ8iC,IAAIjmD,EAAG,CAAEkmD,MAAO,OACjBlmD,IATXi1B,CAWE+wB,8NE1DG,kBACoB,IAAInY,MAAO+C,UAAYpoC,KAAKquB,IAAI,GAAI,GACnCruB,KAAKolC,MAAMplC,KAAKC,SAAWD,KAAKquB,IAAI,GAAI,uPAkB7D,SAAetb,UACb,IAAIhtB,SAAQ,SAAAV,GACjBmU,WAAWnU,EAAS0tB"}