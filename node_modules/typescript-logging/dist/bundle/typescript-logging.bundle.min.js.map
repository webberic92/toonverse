{"version":3,"file":"typescript-logging.bundle.min.js","mappings":"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","sources":["webpack://TSL/./dist/commonjs/control/CategoryServiceControl.js","webpack://TSL/./dist/commonjs/control/LogGroupControl.js","webpack://TSL/./dist/commonjs/extension/ExtensionHelper.js","webpack://TSL/./dist/commonjs/extension/ExtensionMessageJSON.js","webpack://TSL/./dist/commonjs/extension/MessagesFromExtensionJSON.js","webpack://TSL/./dist/commonjs/extension/MessagesToExtensionJSON.js","webpack://TSL/./dist/commonjs/log/LoggerOptions.js","webpack://TSL/./dist/commonjs/log/category/AbstractCategoryLogger.js","webpack://TSL/./dist/commonjs/log/category/Category.js","webpack://TSL/./dist/commonjs/log/category/CategoryConfiguration.js","webpack://TSL/./dist/commonjs/log/category/CategoryConsoleLoggerImpl.js","webpack://TSL/./dist/commonjs/log/category/CategoryDelegateLoggerImpl.js","webpack://TSL/./dist/commonjs/log/category/CategoryExtensionLoggerImpl.js","webpack://TSL/./dist/commonjs/log/category/CategoryMessageBufferImpl.js","webpack://TSL/./dist/commonjs/log/category/CategoryRuntimeSettings.js","webpack://TSL/./dist/commonjs/log/category/CategoryService.js","webpack://TSL/./dist/commonjs/log/category/CategoryServiceFactory.js","webpack://TSL/./dist/commonjs/log/standard/AbstractLogger.js","webpack://TSL/./dist/commonjs/log/standard/ConsoleLoggerImpl.js","webpack://TSL/./dist/commonjs/log/standard/LFService.js","webpack://TSL/./dist/commonjs/log/standard/LogGroupRule.js","webpack://TSL/./dist/commonjs/log/standard/LogGroupRuntimeSettings.js","webpack://TSL/./dist/commonjs/log/standard/LoggerFactoryImpl.js","webpack://TSL/./dist/commonjs/log/standard/LoggerFactoryOptions.js","webpack://TSL/./dist/commonjs/log/standard/MessageBufferLoggerImpl.js","webpack://TSL/./dist/commonjs/typescript-logging.js","webpack://TSL/./dist/commonjs/utils/DataStructures.js","webpack://TSL/./dist/commonjs/utils/JSONHelper.js","webpack://TSL/./dist/commonjs/utils/MessageUtils.js","webpack://TSL/./node_modules/error-stack-parser/error-stack-parser.js","webpack://TSL/./node_modules/source-map/lib/array-set.js","webpack://TSL/./node_modules/source-map/lib/base64-vlq.js","webpack://TSL/./node_modules/source-map/lib/base64.js","webpack://TSL/./node_modules/source-map/lib/binary-search.js","webpack://TSL/./node_modules/source-map/lib/mapping-list.js","webpack://TSL/./node_modules/source-map/lib/quick-sort.js","webpack://TSL/./node_modules/source-map/lib/source-map-consumer.js","webpack://TSL/./node_modules/source-map/lib/source-map-generator.js","webpack://TSL/./node_modules/source-map/lib/source-node.js","webpack://TSL/./node_modules/source-map/lib/util.js","webpack://TSL/./node_modules/source-map/source-map.js","webpack://TSL/./node_modules/stack-generator/node_modules/stackframe/stackframe.js","webpack://TSL/./node_modules/stack-generator/stack-generator.js","webpack://TSL/./node_modules/stackframe/stackframe.js","webpack://TSL/./node_modules/stacktrace-gps/stacktrace-gps.js","webpack://TSL/./node_modules/stacktrace-js/stacktrace.js","webpack://TSL/webpack/bootstrap","webpack://TSL/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryServiceControlImpl = void 0;\nvar CategoryService_1 = require(\"../log/category/CategoryService\");\nvar LoggerOptions_1 = require(\"../log/LoggerOptions\");\nvar DataStructures_1 = require(\"../utils/DataStructures\");\n/**\n * Implementation class for CategoryServiceControl.\n */\nvar CategoryServiceControlImpl = /** @class */ (function () {\n    function CategoryServiceControlImpl() {\n    }\n    CategoryServiceControlImpl.prototype.help = function () {\n        /* tslint:disable:no-console */\n        console.log(CategoryServiceControlImpl._help);\n        /* tslint:enable:no-console */\n    };\n    CategoryServiceControlImpl.prototype.example = function () {\n        /* tslint:disable:no-console */\n        console.log(CategoryServiceControlImpl._example);\n        /* tslint:enable:no-console */\n    };\n    CategoryServiceControlImpl.prototype.showSettings = function (id) {\n        if (id === void 0) { id = \"all\"; }\n        var result = new DataStructures_1.StringBuilder();\n        var service = CategoryServiceControlImpl._getCategoryService();\n        var categories = CategoryServiceControlImpl._getCategories(id);\n        categories.forEach(function (category) {\n            CategoryServiceControlImpl._processCategory(service, category, result, 0);\n        });\n        /* tslint:disable:no-console */\n        console.log(result.toString());\n        /* tslint:enable:no-console */\n    };\n    CategoryServiceControlImpl.prototype.change = function (settings) {\n        var service = CategoryServiceControlImpl._getCategoryService();\n        var categories = CategoryServiceControlImpl._getCategories(settings.category);\n        var logLevel = null;\n        var formatEnum = null;\n        var showCategoryName = null;\n        var showTimestamp = null;\n        var result = null;\n        var addResult = function (value) {\n            if (result !== null) {\n                result += \", \";\n            }\n            if (result === null) {\n                result = value;\n            }\n            else {\n                result += value;\n            }\n        };\n        addResult(\"recursive=\" + settings.recursive);\n        if (typeof settings.logLevel === \"string\") {\n            logLevel = LoggerOptions_1.LogLevel.fromString(settings.logLevel);\n            addResult(\"logLevel=\" + settings.logLevel);\n        }\n        if (typeof settings.logFormat === \"string\") {\n            formatEnum = LoggerOptions_1.DateFormatEnum.fromString(settings.logFormat);\n            addResult(\"logFormat=\" + settings.logFormat);\n        }\n        if (typeof settings.showCategoryName === \"boolean\") {\n            showCategoryName = settings.showCategoryName;\n            addResult(\"showCategoryName=\" + settings.showCategoryName);\n        }\n        if (typeof settings.showTimestamp === \"boolean\") {\n            showTimestamp = settings.showTimestamp;\n            addResult(\"showTimestamp=\" + settings.showTimestamp);\n        }\n        var applyChanges = function (cat) {\n            var categorySettings = service.getCategorySettings(cat);\n            // Should not happen but make tslint happy\n            if (categorySettings !== null) {\n                if (logLevel !== null) {\n                    categorySettings.logLevel = logLevel;\n                }\n                if (formatEnum !== null) {\n                    categorySettings.logFormat.dateFormat.formatEnum = formatEnum;\n                }\n                if (showTimestamp !== null) {\n                    categorySettings.logFormat.showTimeStamp = showTimestamp;\n                }\n                if (showCategoryName !== null) {\n                    categorySettings.logFormat.showCategoryName = showCategoryName;\n                }\n            }\n        };\n        categories.forEach(function (cat) { return CategoryServiceControlImpl._applyToCategory(cat, settings.recursive, applyChanges); });\n        /* tslint:disable:no-console */\n        console.log(\"Applied changes: \" + result + \" to categories '\" + settings.category + \"'.\");\n        /* tslint:enable:no-console */\n    };\n    CategoryServiceControlImpl.prototype.reset = function (id) {\n        if (id === void 0) { id = \"all\"; }\n        var service = CategoryServiceControlImpl._getCategoryService();\n        var categories = CategoryServiceControlImpl._getCategories(id);\n        var applyChanges = function (cat) {\n            var categorySettings = service.getCategorySettings(cat);\n            var original = service.getOriginalCategorySettings(cat);\n            // Should not happen but make tslint happy\n            if (categorySettings !== null && original !== null) {\n                categorySettings.logLevel = original.logLevel;\n                categorySettings.logFormat.dateFormat.formatEnum = original.logFormat.dateFormat.formatEnum;\n                categorySettings.logFormat.showTimeStamp = original.logFormat.showTimeStamp;\n                categorySettings.logFormat.showCategoryName = original.logFormat.showCategoryName;\n            }\n        };\n        categories.forEach(function (cat) { return CategoryServiceControlImpl._applyToCategory(cat, true, applyChanges); });\n        /* tslint:disable:no-console */\n        console.log(\"Applied reset to category: \" + id + \".\");\n        /* tslint:enable:no-console */\n    };\n    CategoryServiceControlImpl._processCategory = function (service, category, result, indent) {\n        var settings = service.getCategorySettings(category);\n        if (settings !== null) {\n            result.append(\"  \" + category.id + \": \");\n            if (indent > 0) {\n                for (var i = 0; i < indent; i++) {\n                    result.append(\"  \");\n                }\n            }\n            result.append(category.name + \" (\" + LoggerOptions_1.LogLevel[settings.logLevel].toString() + \"@\" + LoggerOptions_1.LoggerType[settings.loggerType].toString() + \")\\n\");\n            if (category.children.length > 0) {\n                category.children.forEach(function (child) {\n                    CategoryServiceControlImpl._processCategory(service, child, result, indent + 1);\n                });\n            }\n        }\n    };\n    CategoryServiceControlImpl._applyToCategory = function (category, recursive, apply) {\n        apply(category);\n        if (recursive) {\n            category.children.forEach(function (child) {\n                CategoryServiceControlImpl._applyToCategory(child, recursive, apply);\n            });\n        }\n    };\n    CategoryServiceControlImpl._getCategoryService = function () {\n        return CategoryService_1.CategoryServiceImpl.getInstance();\n    };\n    CategoryServiceControlImpl._getCategories = function (idCategory) {\n        var service = CategoryServiceControlImpl._getCategoryService();\n        var categories = [];\n        if (idCategory === \"all\") {\n            categories = service.getRootCategories();\n        }\n        else {\n            var category = service.getCategoryById(idCategory);\n            if (category === null) {\n                throw new Error(\"Failed to find category with id \" + idCategory);\n            }\n            categories.push(category);\n        }\n        return categories;\n    };\n    CategoryServiceControlImpl._help = \"\\n  help(): void\\n    ** Shows this help.\\n\\n  example(): void\\n    ** Shows an example on how to use this.\\n\\n  showSettings(id: number | \\\"all\\\" = \\\"all\\\"): void\\n    ** Shows settings for a specific category, or for all. The id of categories can be found by calling this method without parameter.\\n\\n  change(settings: CategoryServiceControlSettings): void\\n    ** Changes the current settings for one or all categories.\\n    **\\n       CategoryServiceControlSettings, properties of object:\\n         category: number | \\\"all\\\"\\n           ** Apply to specific category, or \\\"all\\\".\\n           ** Required\\n\\n         recursive: boolean\\n           ** Apply to child categories (true) or not.\\n           ** Required\\n\\n         logLevel: \\\"Fatal\\\" | \\\"Error\\\" | \\\"Warn\\\" | \\\"Info\\\" | \\\"Debug\\\" | \\\"Trace\\\" | undefined\\n           ** Set log level, undefined will not change the setting.\\n           ** Optional\\n\\n         logFormat: \\\"Default\\\" | \\\"YearMonthDayTime\\\" | \\\"YearDayMonthWithFullTime\\\" | \\\"YearDayMonthTime\\\" | undefined\\n           ** Set the log format, undefined will not change the setting.\\n           ** Optional\\n\\n         showTimestamp: boolean | undefined\\n           ** Whether to show timestamp, undefined will not change the setting.\\n           ** Optional\\n\\n         showCategoryName: boolean | undefined\\n           ** Whether to show the category name, undefined will not change the setting.\\n           ** Optional\\n\\n   reset(id: number | \\\"all\\\"): void\\n     ** Resets everything to original values, for one specific or for all categories.\\n\";\n    CategoryServiceControlImpl._example = \"\\n  Examples:\\n    change({category: \\\"all\\\", recursive:true, logLevel: \\\"Info\\\"})\\n      ** Change loglevel to Info for all categories, apply to child categories as well.\\n\\n    change({category: 1, recursive:false, logLevel: \\\"Warn\\\"})\\n      ** Change logLevel for category 1, do not recurse.\\n\\n    change({category: \\\"all\\\", recursive:true, logLevel: \\\"Debug\\\", logFormat: \\\"YearDayMonthTime\\\", showTimestamp:false, showCategoryName:false})\\n      ** Change loglevel to Debug for all categories, apply format, do not show timestamp and category names - recursively to child categories.\\n\\n\";\n    return CategoryServiceControlImpl;\n}());\nexports.CategoryServiceControlImpl = CategoryServiceControlImpl;\n//# sourceMappingURL=CategoryServiceControl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggerControlImpl = void 0;\nvar LoggerOptions_1 = require(\"../log/LoggerOptions\");\nvar LFService_1 = require(\"../log/standard/LFService\");\nvar DataStructures_1 = require(\"../utils/DataStructures\");\nvar LoggerControlImpl = /** @class */ (function () {\n    function LoggerControlImpl() {\n    }\n    LoggerControlImpl.prototype.help = function () {\n        /* tslint:disable:no-console */\n        console.log(LoggerControlImpl._help);\n        /* tslint:enable:no-console */\n    };\n    LoggerControlImpl.prototype.listFactories = function () {\n        var rtSettingsFactories = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\n        var result = new DataStructures_1.StringBuilder();\n        result.appendLine(\"Registered LoggerFactories (index / name)\");\n        for (var i = 0; i < rtSettingsFactories.length; i++) {\n            var rtSettingsFactory = rtSettingsFactories[i];\n            result.append(\"  \" + i).append(\": \" + rtSettingsFactory.getName() + \"\\n\");\n        }\n        /* tslint:disable:no-console */\n        console.log(result.toString());\n        /* tslint:enable:no-console */\n    };\n    LoggerControlImpl.prototype.showSettings = function (id) {\n        if (id === void 0) { id = \"all\"; }\n        var result = [];\n        if (id === \"all\") {\n            var idx_1 = 0;\n            LoggerControlImpl._getRuntimeSettingsLoggerFactories().forEach(function (item) {\n                result.push(new DataStructures_1.TuplePair(idx_1++, item));\n            });\n        }\n        else {\n            var settings = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\n            if (id >= 0 && id < settings.length) {\n                result.push(new DataStructures_1.TuplePair(id, settings[id]));\n            }\n            else {\n                throw new Error(\"Requested number: \" + id + \" was not found.\");\n            }\n        }\n        for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\n            var setting = result_1[_i];\n            /* tslint:disable:no-console */\n            console.log(\"  LoggerFactory: \" + setting.y.getName() + \" (id=\" + setting.x + \")\");\n            var logGroupRuntimeSettings = setting.y.getLogGroupRuntimeSettings();\n            for (var g = 0; g < logGroupRuntimeSettings.length; g++) {\n                var groupSetting = logGroupRuntimeSettings[g];\n                console.log(\"     LogGroup: (id=\" + g + \")\");\n                console.log(\"       RegExp: \" + groupSetting.logGroupRule.regExp.source);\n                console.log(\"       Level: \" + LoggerOptions_1.LogLevel[groupSetting.level].toString());\n                console.log(\"       LoggerType: \" + LoggerOptions_1.LoggerType[groupSetting.loggerType].toString());\n            }\n            /* tslint:enable:no-console */\n        }\n    };\n    LoggerControlImpl.prototype.reset = function (idFactory) {\n        if (idFactory === void 0) { idFactory = \"all\"; }\n        var loggerFactoriesSettings = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\n        var result = [];\n        if (idFactory === \"all\") {\n            result = loggerFactoriesSettings;\n        }\n        else {\n            if (idFactory >= 0 && idFactory < loggerFactoriesSettings.length) {\n                result.push(loggerFactoriesSettings[idFactory]);\n            }\n        }\n        result.forEach(function (setting) {\n            /* tslint:disable:no-console */\n            console.log(\"Reset all settings for factory \" + idFactory);\n            /* tslint:enable:no-console */\n            var control = new LoggerFactoryControlImpl(setting);\n            control.reset();\n        });\n    };\n    LoggerControlImpl.prototype.getLoggerFactoryControl = function (idFactory) {\n        var loggerFactoriesSettings = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\n        if (idFactory >= 0 && idFactory < loggerFactoriesSettings.length) {\n            return new LoggerFactoryControlImpl(loggerFactoriesSettings[idFactory]);\n        }\n        throw new Error(\"idFactory is invalid (less than 0) or non existing id.\");\n    };\n    LoggerControlImpl._getRuntimeSettingsLoggerFactories = function () {\n        return LoggerControlImpl._getSettings().getRuntimeSettingsForLoggerFactories();\n    };\n    LoggerControlImpl._getSettings = function () {\n        return LFService_1.LFService.getRuntimeSettings();\n    };\n    LoggerControlImpl._help = \"\\n  help(): void\\n    ** Shows this help.\\n\\n  listFactories(): void\\n    ** List all registered LoggerFactories with associated log groups with respective ids (ids can be used to target a factory and/or group).\\n\\n  showSettings(idFactory: number | \\\"all\\\"): void\\n    ** Show log group settings for idFactory (use listFactories to find id for a LoggerFactory). If idFactory is \\\"all\\\" shows all factories.\\n\\n  getLoggerFactoryControl(idFactory: number): LoggerFactoryControl\\n    ** Return LoggerFactoryControl when found for given idFactory or throws Error if invalid or null, get the id by using listFactories()\\n\\n  reset(idFactory: number | \\\"all\\\"): void\\n    ** Resets given factory or all factories back to original values.\\n\";\n    return LoggerControlImpl;\n}());\nexports.LoggerControlImpl = LoggerControlImpl;\nvar LoggerFactoryControlImpl = /** @class */ (function () {\n    function LoggerFactoryControlImpl(settings) {\n        this._settings = settings;\n    }\n    LoggerFactoryControlImpl.prototype.help = function () {\n        /* tslint:disable:no-console */\n        console.log(LoggerFactoryControlImpl._help);\n        /* tslint:enable:no-console */\n    };\n    LoggerFactoryControlImpl.prototype.example = function () {\n        /* tslint:disable:no-console */\n        console.log(LoggerFactoryControlImpl._example);\n        /* tslint:enable:no-console */\n    };\n    LoggerFactoryControlImpl.prototype.showSettings = function (id) {\n        if (id === void 0) { id = \"all\"; }\n        var result = new DataStructures_1.StringBuilder();\n        var logGroupRuntimeSettings = this._settings.getLogGroupRuntimeSettings();\n        result.appendLine(\"Registered LogGroups (index / expression)\");\n        for (var i = 0; i < logGroupRuntimeSettings.length; i++) {\n            var logGroupRuntimeSetting = logGroupRuntimeSettings[i];\n            result.appendLine(\"  \" + i + \": \" + logGroupRuntimeSetting.logGroupRule.regExp.source + \", logLevel=\" +\n                LoggerOptions_1.LogLevel[logGroupRuntimeSetting.level].toString() + \", showTimestamp=\" + logGroupRuntimeSetting.logFormat.showTimeStamp +\n                \", showLoggerName=\" + logGroupRuntimeSetting.logFormat.showLoggerName +\n                \", format=\" + LoggerOptions_1.DateFormatEnum[logGroupRuntimeSetting.logFormat.dateFormat.formatEnum].toString());\n        }\n        /* tslint:disable:no-console */\n        console.log(result.toString());\n        /* tslint:enable:no-console */\n    };\n    LoggerFactoryControlImpl.prototype.change = function (settings) {\n        var logGroupRuntimeSettings = this._getLogGroupRunTimeSettingsFor(settings.group);\n        var logLevel = null;\n        var formatEnum = null;\n        var showLoggerName = null;\n        var showTimestamp = null;\n        var result = null;\n        var addResult = function (value) {\n            if (result !== null) {\n                result += \", \";\n            }\n            if (result === null) {\n                result = value;\n            }\n            else {\n                result += value;\n            }\n        };\n        if (typeof settings.logLevel === \"string\") {\n            logLevel = LoggerOptions_1.LogLevel.fromString(settings.logLevel);\n            addResult(\"logLevel=\" + settings.logLevel);\n        }\n        if (typeof settings.logFormat === \"string\") {\n            formatEnum = LoggerOptions_1.DateFormatEnum.fromString(settings.logFormat);\n            addResult(\"logFormat=\" + settings.logFormat);\n        }\n        if (typeof settings.showLoggerName === \"boolean\") {\n            showLoggerName = settings.showLoggerName;\n            addResult(\"showLoggerName=\" + settings.showLoggerName);\n        }\n        if (typeof settings.showTimestamp === \"boolean\") {\n            showTimestamp = settings.showTimestamp;\n            addResult(\"showTimestamp=\" + settings.showTimestamp);\n        }\n        logGroupRuntimeSettings.forEach(function (s) {\n            if (logLevel !== null) {\n                s.level = logLevel;\n            }\n            if (formatEnum !== null) {\n                s.logFormat.dateFormat.formatEnum = formatEnum;\n            }\n            if (showTimestamp !== null) {\n                s.logFormat.showTimeStamp = showTimestamp;\n            }\n            if (showLoggerName !== null) {\n                s.logFormat.showLoggerName = showLoggerName;\n            }\n        });\n        /* tslint:disable:no-console */\n        console.log(\"Applied changes: \" + result + \" to log groups '\" + settings.group + \"'.\");\n        /* tslint:enable:no-console */\n    };\n    LoggerFactoryControlImpl.prototype.reset = function (idGroup) {\n        if (idGroup === void 0) { idGroup = \"all\"; }\n        var settings = this._getLogGroupRunTimeSettingsFor(idGroup);\n        for (var _i = 0, settings_1 = settings; _i < settings_1.length; _i++) {\n            var setting = settings_1[_i];\n            setting.level = setting.logGroupRule.level;\n            setting.logFormat.showTimeStamp = setting.logGroupRule.logFormat.showTimeStamp;\n            setting.logFormat.showLoggerName = setting.logGroupRule.logFormat.showLoggerName;\n            setting.logFormat.dateFormat.formatEnum = setting.logGroupRule.logFormat.dateFormat.formatEnum;\n        }\n        /* tslint:disable:no-console */\n        console.log(\"Reset all settings for group \" + idGroup);\n        /* tslint:enable:no-console */\n    };\n    LoggerFactoryControlImpl.prototype._getLogGroupRunTimeSettingsFor = function (idGroup) {\n        var settings = [];\n        if (idGroup === \"all\") {\n            settings = this._settings.getLogGroupRuntimeSettings();\n        }\n        else {\n            this._checkIndex(idGroup);\n            settings.push(this._settings.getLogGroupRuntimeSettings()[idGroup]);\n        }\n        return settings;\n    };\n    LoggerFactoryControlImpl.prototype._checkIndex = function (index) {\n        if (index < 0 || index >= this._settings.getLogGroupRuntimeSettings().length) {\n            throw new Error(\"Invalid index, use listLogGroups to find out a valid one.\");\n        }\n    };\n    LoggerFactoryControlImpl._help = \"\\n  help(): void\\n    ** Shows this help.\\n\\n  example(): void\\n    ** Shows an example of usage.\\n\\n  showSettings(id: number | \\\"all\\\"): void\\n    ** Prints settings for given group id, \\\"all\\\" for all group.\\n\\n  change(settings: LogGroupControlSettings): void\\n    ** Changes the current settings for one or all log groups.\\n    **\\n       LogGroupControlSettings, properties of object:\\n         group: number | \\\"all\\\"\\n           ** Apply to specific group, or \\\"all\\\".\\n           ** Required\\n\\n         logLevel: \\\"Fatal\\\" | \\\"Error\\\" | \\\"Warn\\\" | \\\"Info\\\" | \\\"Debug\\\" | \\\"Trace\\\" | undefined\\n           ** Set log level, undefined will not change the setting.\\n           ** Optional\\n\\n         logFormat: \\\"Default\\\" | \\\"YearMonthDayTime\\\" | \\\"YearDayMonthWithFullTime\\\" | \\\"YearDayMonthTime\\\" | undefined\\n           ** Set the log format, undefined will not change the setting.\\n           ** Optional\\n\\n         showTimestamp: boolean | undefined\\n           ** Whether to show timestamp, undefined will not change the setting.\\n           ** Optional\\n\\n         showLoggerName: boolean | undefined\\n           ** Whether to show the logger name, undefined will not change the setting.\\n           ** Optional\\n\\n  reset(id: number | \\\"all\\\"): void\\n    ** Resets everything to original values, for one specific or for all groups.\\n\\n  help():\\n    ** Shows this help.\\n\";\n    LoggerFactoryControlImpl._example = \"\\n  Examples:\\n    change({group: \\\"all\\\", logLevel: \\\"Info\\\"})\\n      ** Change loglevel to Info for all groups.\\n\\n    change({group: 1, recursive:false, logLevel: \\\"Warn\\\"})\\n      ** Change logLevel for group 1 to Warn.\\n\\n    change({group: \\\"all\\\", logLevel: \\\"Debug\\\", logFormat: \\\"YearDayMonthTime\\\", showTimestamp:false, showLoggerName:false})\\n      ** Change loglevel to Debug for all groups, apply format, do not show timestamp and logger names.\\n\";\n    return LoggerFactoryControlImpl;\n}());\n//# sourceMappingURL=LogGroupControl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExtensionHelper = void 0;\nvar CategoryService_1 = require(\"../log/category/CategoryService\");\nvar LoggerOptions_1 = require(\"../log/LoggerOptions\");\nvar MessageUtils_1 = require(\"../utils/MessageUtils\");\nvar ExtensionHelper = /** @class */ (function () {\n    function ExtensionHelper() {\n        // Private constructor\n    }\n    /**\n     * Enables the window event listener to listen to messages (from extensions).\n     * Can be registered/enabled only once.\n     */\n    ExtensionHelper.register = function () {\n        if (!ExtensionHelper.registered) {\n            var listener = function (evt) {\n                var msg = evt.data;\n                if (msg !== null) {\n                    ExtensionHelper.processMessageFromExtension(msg);\n                }\n            };\n            if (typeof window !== \"undefined\" && typeof window.removeEventListener !== \"undefined\" && typeof window.addEventListener !== \"undefined\") {\n                window.removeEventListener(\"message\", listener);\n                window.addEventListener(\"message\", listener);\n                ExtensionHelper.registered = true;\n            }\n        }\n    };\n    ExtensionHelper.processMessageFromExtension = function (msg) {\n        if (!ExtensionHelper.registered) {\n            return;\n        }\n        /* tslint:disable:no-console */\n        if (msg.from === \"tsl-extension\") {\n            var data = msg.data;\n            switch (data.type) {\n                case \"register\":\n                    ExtensionHelper.enableExtensionIntegration();\n                    break;\n                case \"request-change-loglevel\":\n                    var valueRequest = data.value;\n                    var catsApplied = ExtensionHelper.applyLogLevel(valueRequest.categoryId, valueRequest.logLevel, valueRequest.recursive);\n                    if (catsApplied.length > 0) {\n                        // Send changes back\n                        ExtensionHelper.sendCategoriesRuntimeUpdateMessage(catsApplied);\n                    }\n                    break;\n                default:\n                    console.log(\"Unknown command to process message from extension, command was: \" + data.type);\n                    break;\n            }\n        }\n        /* tslint:enable:no-console */\n    };\n    ExtensionHelper.sendCategoryLogMessage = function (msg) {\n        if (!ExtensionHelper.registered) {\n            return;\n        }\n        var categoryIds = msg.categories.map(function (cat) {\n            return cat.id;\n        });\n        var content = {\n            type: \"log-message\",\n            value: {\n                categories: categoryIds,\n                errorAsStack: msg.errorAsStack,\n                formattedMessage: MessageUtils_1.MessageFormatUtils.renderDefaultMessage(msg, false),\n                logLevel: LoggerOptions_1.LogLevel[msg.level].toString(),\n                message: msg.messageAsString,\n                resolvedErrorMessage: msg.isResolvedErrorMessage\n            }\n        };\n        var message = {\n            data: content,\n            from: \"tsl-logging\",\n        };\n        ExtensionHelper.sendMessage(message);\n    };\n    ExtensionHelper.sendCategoriesRuntimeUpdateMessage = function (categories) {\n        if (!ExtensionHelper.registered) {\n            return;\n        }\n        var service = CategoryService_1.CategoryServiceImpl.getInstance();\n        var catLevels = { categories: Array() };\n        categories.forEach(function (cat) {\n            var catSettings = service.getCategorySettings(cat);\n            if (catSettings != null) {\n                catLevels.categories.push({ id: cat.id, logLevel: LoggerOptions_1.LogLevel[catSettings.logLevel].toString() });\n            }\n        });\n        var content = {\n            type: \"categories-rt-update\",\n            value: catLevels,\n        };\n        var message = {\n            data: content,\n            from: \"tsl-logging\"\n        };\n        ExtensionHelper.sendMessage(message);\n    };\n    ExtensionHelper.sendRootCategoriesToExtension = function () {\n        if (!ExtensionHelper.registered) {\n            return;\n        }\n        var categories = CategoryService_1.CategoryServiceImpl.getInstance().getRootCategories().map(function (cat) {\n            return ExtensionHelper.getCategoryAsJSON(cat);\n        });\n        var content = {\n            type: \"root-categories-tree\",\n            value: categories\n        };\n        var message = {\n            data: content,\n            from: \"tsl-logging\"\n        };\n        ExtensionHelper.sendMessage(message);\n    };\n    /**\n     * If extension integration is enabled, will send the root categories over to the extension.\n     * Otherwise does nothing.\n     */\n    ExtensionHelper.getCategoryAsJSON = function (cat) {\n        var childCategories = cat.children.map(function (child) {\n            return ExtensionHelper.getCategoryAsJSON(child);\n        });\n        return {\n            children: childCategories,\n            id: cat.id,\n            logLevel: LoggerOptions_1.LogLevel[cat.logLevel].toString(),\n            name: cat.name,\n            parentId: (cat.parent != null ? cat.parent.id : null),\n        };\n    };\n    ExtensionHelper.applyLogLevel = function (categoryId, logLevel, recursive) {\n        var cats = [];\n        var category = CategoryService_1.CategoryServiceImpl.getInstance().getCategoryById(categoryId);\n        if (category != null) {\n            ExtensionHelper._applyLogLevelRecursive(category, LoggerOptions_1.LogLevel.fromString(logLevel), recursive, cats);\n        }\n        else {\n            /* tslint:disable:no-console */\n            console.log(\"Could not change log level, failed to find category with id: \" + categoryId);\n            /* tslint:enable:no-console */\n        }\n        return cats;\n    };\n    ExtensionHelper._applyLogLevelRecursive = function (category, logLevel, recursive, cats) {\n        var categorySettings = CategoryService_1.CategoryServiceImpl.getInstance().getCategorySettings(category);\n        if (categorySettings != null) {\n            categorySettings.logLevel = logLevel;\n            cats.push(category);\n            if (recursive) {\n                category.children.forEach(function (child) {\n                    ExtensionHelper._applyLogLevelRecursive(child, logLevel, recursive, cats);\n                });\n            }\n        }\n    };\n    ExtensionHelper.getAllCategories = function () {\n        var cats = [];\n        var addCats = function (cat, allCats) {\n            allCats.push(cat);\n            cat.children.forEach(function (catChild) {\n                addCats(catChild, allCats);\n            });\n        };\n        CategoryService_1.CategoryServiceImpl.getInstance().getRootCategories().forEach(function (cat) {\n            addCats(cat, cats);\n        });\n        return cats;\n    };\n    ExtensionHelper.sendMessage = function (msg) {\n        if (!ExtensionHelper.registered) {\n            return;\n        }\n        if (typeof window !== \"undefined\" && typeof window.postMessage !== \"undefined\") {\n            window.postMessage(msg, \"*\");\n        }\n    };\n    /**\n     *  Extension framework will call this to enable the integration between two,\n     *  after this call the framework will respond with postMessage() messages.\n     */\n    ExtensionHelper.enableExtensionIntegration = function () {\n        if (!ExtensionHelper.registered) {\n            return;\n        }\n        var instance = CategoryService_1.CategoryServiceImpl.getInstance();\n        instance.enableExtensionIntegration();\n        // Send over all categories\n        ExtensionHelper.sendRootCategoriesToExtension();\n        // Send over the current runtime levels\n        var cats = ExtensionHelper.getAllCategories();\n        ExtensionHelper.sendCategoriesRuntimeUpdateMessage(cats);\n    };\n    ExtensionHelper.registered = false;\n    return ExtensionHelper;\n}());\nexports.ExtensionHelper = ExtensionHelper;\n//# sourceMappingURL=ExtensionHelper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ExtensionMessageJSON.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MessagesFromExtensionJSON.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MessagesToExtensionJSON.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryLogFormat = exports.LogFormat = exports.DateFormat = exports.DateFormatEnum = exports.LoggerType = exports.LogLevel = void 0;\n/**\n * Log level for a logger.\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Warn\"] = 3] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    LogLevel[LogLevel[\"Fatal\"] = 5] = \"Fatal\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/* tslint:disable:no-namespace */\n(function (LogLevel) {\n    /**\n     * Returns LogLevel based on string representation\n     * @param val Value\n     * @returns {LogLevel}, Error is thrown if invalid.\n     */\n    function fromString(val) {\n        if (val == null) {\n            throw new Error(\"Argument must be set\");\n        }\n        switch (val.toLowerCase()) {\n            case \"trace\":\n                return LogLevel.Trace;\n            case \"debug\":\n                return LogLevel.Debug;\n            case \"info\":\n                return LogLevel.Info;\n            case \"warn\":\n                return LogLevel.Warn;\n            case \"error\":\n                return LogLevel.Error;\n            case \"fatal\":\n                return LogLevel.Fatal;\n            default:\n                throw new Error(\"Unsupported value for conversion: \" + val);\n        }\n    }\n    LogLevel.fromString = fromString;\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/* tslint:disable:enable-namespace */\n/**\n * Where to log to? Pick one of the constants. Custom requires a callback to be present, see LFService.createLoggerFactory(...)\n * where this comes into play.\n */\nvar LoggerType;\n(function (LoggerType) {\n    LoggerType[LoggerType[\"Console\"] = 0] = \"Console\";\n    LoggerType[LoggerType[\"MessageBuffer\"] = 1] = \"MessageBuffer\";\n    LoggerType[LoggerType[\"Custom\"] = 2] = \"Custom\";\n})(LoggerType = exports.LoggerType || (exports.LoggerType = {}));\n/**\n * Defines several date enums used for formatting a date.\n */\nvar DateFormatEnum;\n(function (DateFormatEnum) {\n    /**\n     * Displays as: year-month-day hour:minute:second,millis -> 1999-02-12 23:59:59,123\n     * Note the date separator can be set separately.\n     */\n    DateFormatEnum[DateFormatEnum[\"Default\"] = 0] = \"Default\";\n    /**\n     * Displays as: year-month-day hour:minute:second -> 1999-02-12 23:59:59\n     * Note the date separator can be set separately.\n     */\n    DateFormatEnum[DateFormatEnum[\"YearMonthDayTime\"] = 1] = \"YearMonthDayTime\";\n    /**\n     * Displays as: year-day-month hour:minute:second,millis -> 1999-12-02 23:59:59,123\n     * Note the date separator can be set separately.\n     */\n    DateFormatEnum[DateFormatEnum[\"YearDayMonthWithFullTime\"] = 2] = \"YearDayMonthWithFullTime\";\n    /**\n     * Displays as: year-day-month hour:minute:second -> 1999-12-02 23:59:59\n     * Note the date separator can be set separately.\n     */\n    DateFormatEnum[DateFormatEnum[\"YearDayMonthTime\"] = 3] = \"YearDayMonthTime\";\n})(DateFormatEnum = exports.DateFormatEnum || (exports.DateFormatEnum = {}));\n/* tslint:disable:no-namespace */\n(function (DateFormatEnum) {\n    /**\n     * Returns LogLevel based on string representation\n     * @param val Value\n     * @returns {LogLevel}, Error is thrown if invalid.\n     */\n    function fromString(val) {\n        if (val == null) {\n            throw new Error(\"Argument must be set\");\n        }\n        switch (val.toLowerCase()) {\n            case \"default\":\n                return DateFormatEnum.Default;\n            case \"yearmonthdayTime\":\n                return DateFormatEnum.YearMonthDayTime;\n            case \"yeardaymonthwithfulltime\":\n                return DateFormatEnum.YearDayMonthWithFullTime;\n            case \"yeardaymonthtime\":\n                return DateFormatEnum.YearDayMonthTime;\n            default:\n                throw new Error(\"Unsupported value for conversion: \" + val);\n        }\n    }\n    DateFormatEnum.fromString = fromString;\n})(DateFormatEnum = exports.DateFormatEnum || (exports.DateFormatEnum = {}));\n/* tslint:disable:enable-namespace */\n/**\n * DateFormat class, stores data on how to format a date.\n */\nvar DateFormat = /** @class */ (function () {\n    /**\n     * Constructor to define the dateformat used for logging, can be called empty as it uses defaults.\n     * @param formatEnum DateFormatEnum, use one of the constants from the enum. Defaults to DateFormatEnum.Default\n     * @param dateSeparator Separator used between dates, defaults to -\n     */\n    function DateFormat(formatEnum, dateSeparator) {\n        if (formatEnum === void 0) { formatEnum = DateFormatEnum.Default; }\n        if (dateSeparator === void 0) { dateSeparator = \"-\"; }\n        this._formatEnum = formatEnum;\n        this._dateSeparator = dateSeparator;\n    }\n    Object.defineProperty(DateFormat.prototype, \"formatEnum\", {\n        get: function () {\n            return this._formatEnum;\n        },\n        set: function (value) {\n            this._formatEnum = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DateFormat.prototype, \"dateSeparator\", {\n        get: function () {\n            return this._dateSeparator;\n        },\n        set: function (value) {\n            this._dateSeparator = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DateFormat.prototype.copy = function () {\n        return new DateFormat(this._formatEnum, this._dateSeparator);\n    };\n    return DateFormat;\n}());\nexports.DateFormat = DateFormat;\n/**\n * Information about the log format, what will a log line look like?\n */\nvar LogFormat = /** @class */ (function () {\n    /**\n     * Constructor to create a LogFormat. Can be created without parameters where it will use sane defaults.\n     * @param dateFormat DateFormat (what needs the date look like in the log line)\n     * @param showTimeStamp Show date timestamp at all?\n     * @param showLoggerName Show the logger name?\n     */\n    function LogFormat(dateFormat, showTimeStamp, showLoggerName) {\n        if (dateFormat === void 0) { dateFormat = new DateFormat(); }\n        if (showTimeStamp === void 0) { showTimeStamp = true; }\n        if (showLoggerName === void 0) { showLoggerName = true; }\n        this._showTimeStamp = true;\n        this._showLoggerName = true;\n        this._dateFormat = dateFormat;\n        this._showTimeStamp = showTimeStamp;\n        this._showLoggerName = showLoggerName;\n    }\n    Object.defineProperty(LogFormat.prototype, \"dateFormat\", {\n        get: function () {\n            return this._dateFormat;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogFormat.prototype, \"showTimeStamp\", {\n        get: function () {\n            return this._showTimeStamp;\n        },\n        set: function (value) {\n            this._showTimeStamp = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogFormat.prototype, \"showLoggerName\", {\n        get: function () {\n            return this._showLoggerName;\n        },\n        set: function (value) {\n            this._showLoggerName = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return LogFormat;\n}());\nexports.LogFormat = LogFormat;\n/**\n * Information about the log format, what will a log line look like?\n */\nvar CategoryLogFormat = /** @class */ (function () {\n    /**\n     * Create an instance defining the category log format used.\n     * @param dateFormat Date format (uses default), for details see DateFormat class.\n     * @param showTimeStamp True to show timestamp in the logging, defaults to true.\n     * @param showCategoryName True to show category name in the logging, defaults to true.\n     */\n    function CategoryLogFormat(dateFormat, showTimeStamp, showCategoryName) {\n        if (dateFormat === void 0) { dateFormat = new DateFormat(); }\n        if (showTimeStamp === void 0) { showTimeStamp = true; }\n        if (showCategoryName === void 0) { showCategoryName = true; }\n        this._dateFormat = dateFormat;\n        this._showTimeStamp = showTimeStamp;\n        this._showCategoryName = showCategoryName;\n    }\n    Object.defineProperty(CategoryLogFormat.prototype, \"dateFormat\", {\n        get: function () {\n            return this._dateFormat;\n        },\n        set: function (value) {\n            this._dateFormat = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogFormat.prototype, \"showTimeStamp\", {\n        get: function () {\n            return this._showTimeStamp;\n        },\n        set: function (value) {\n            this._showTimeStamp = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogFormat.prototype, \"showCategoryName\", {\n        get: function () {\n            return this._showCategoryName;\n        },\n        set: function (value) {\n            this._showCategoryName = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CategoryLogFormat.prototype.copy = function () {\n        return new CategoryLogFormat(this._dateFormat.copy(), this._showTimeStamp, this._showCategoryName);\n    };\n    return CategoryLogFormat;\n}());\nexports.CategoryLogFormat = CategoryLogFormat;\n//# sourceMappingURL=LoggerOptions.js.map","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractCategoryLogger = void 0;\nvar DataStructures_1 = require(\"../../utils/DataStructures\");\nvar MessageUtils_1 = require(\"../../utils/MessageUtils\");\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\nvar CategoryLogMessageImpl = /** @class */ (function () {\n    function CategoryLogMessageImpl(message, error, categories, date, level, logFormat, ready) {\n        this._resolvedErrorMessage = false;\n        this._errorAsStack = null;\n        this._message = message;\n        this._error = error;\n        this._categories = categories;\n        this._date = date;\n        this._level = level;\n        this._logFormat = logFormat;\n        this._ready = ready;\n    }\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"message\", {\n        get: function () {\n            return this._message;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"error\", {\n        get: function () {\n            return this._error;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"categories\", {\n        get: function () {\n            return this._categories;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"date\", {\n        get: function () {\n            return this._date;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"level\", {\n        get: function () {\n            return this._level;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"logFormat\", {\n        get: function () {\n            return this._logFormat;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"isMessageLogData\", {\n        get: function () {\n            return typeof (this._message) !== \"string\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"messageAsString\", {\n        get: function () {\n            if (typeof (this._message) === \"string\") {\n                return this._message;\n            }\n            return this._message.msg;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"logData\", {\n        get: function () {\n            var result = null;\n            if (typeof (this._message) !== \"string\") {\n                result = this.message;\n            }\n            return result;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"isResolvedErrorMessage\", {\n        get: function () {\n            return this._resolvedErrorMessage;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"errorAsStack\", {\n        get: function () {\n            return this._errorAsStack;\n        },\n        set: function (stack) {\n            this._errorAsStack = stack;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CategoryLogMessageImpl.prototype.isReady = function () {\n        return this._ready;\n    };\n    CategoryLogMessageImpl.prototype.setReady = function (value) {\n        this._ready = value;\n    };\n    Object.defineProperty(CategoryLogMessageImpl.prototype, \"resolvedErrorMessage\", {\n        get: function () {\n            return this._resolvedErrorMessage;\n        },\n        set: function (value) {\n            this._resolvedErrorMessage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CategoryLogMessageImpl;\n}());\n/**\n * Abstract category logger, use as your base class for new type of loggers (it\n * saves you a lot of work) and override doLog(CategoryLogMessage). The message argument\n * provides full access to anything related to the logging event.\n * If you just want the standard line of logging, call: this.createDefaultLogMessage(msg) on\n * this class which will return you the formatted log message as string (e.g. the\n * default loggers all use this).\n */\nvar AbstractCategoryLogger = /** @class */ (function () {\n    function AbstractCategoryLogger(rootCategory, runtimeSettings) {\n        this.allMessages = new DataStructures_1.LinkedList();\n        this.rootCategory = rootCategory;\n        this.runtimeSettings = runtimeSettings;\n    }\n    AbstractCategoryLogger.prototype.trace = function (msg) {\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LoggerOptions_1.LogLevel.Trace, msg, null, false], categories, false));\n    };\n    AbstractCategoryLogger.prototype.debug = function (msg) {\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LoggerOptions_1.LogLevel.Debug, msg, null, false], categories, false));\n    };\n    AbstractCategoryLogger.prototype.info = function (msg) {\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LoggerOptions_1.LogLevel.Info, msg, null, false], categories, false));\n    };\n    AbstractCategoryLogger.prototype.warn = function (msg) {\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LoggerOptions_1.LogLevel.Warn, msg, null, false], categories, false));\n    };\n    AbstractCategoryLogger.prototype.error = function (msg, error) {\n        var categories = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            categories[_i - 2] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LoggerOptions_1.LogLevel.Error, msg, error, false], categories, false));\n    };\n    AbstractCategoryLogger.prototype.fatal = function (msg, error) {\n        var categories = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            categories[_i - 2] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LoggerOptions_1.LogLevel.Fatal, msg, error, false], categories, false));\n    };\n    AbstractCategoryLogger.prototype.resolved = function (msg, error) {\n        var categories = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            categories[_i - 2] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LoggerOptions_1.LogLevel.Error, msg, error, true], categories, false));\n    };\n    AbstractCategoryLogger.prototype.log = function (level, msg, error) {\n        var categories = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            categories[_i - 3] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([level, msg, error, false], categories, false));\n    };\n    AbstractCategoryLogger.prototype.getRootCategory = function () {\n        return this.rootCategory;\n    };\n    AbstractCategoryLogger.prototype.createDefaultLogMessage = function (msg) {\n        return MessageUtils_1.MessageFormatUtils.renderDefaultMessage(msg, true);\n    };\n    /**\n     * Return optional message formatter. All LoggerTypes (except custom) will see if\n     * they have this, and if so use it to log.\n     * @returns {((message:CategoryLogMessage)=>string)|null}\n     */\n    AbstractCategoryLogger.prototype._getMessageFormatter = function () {\n        var categorySettings = this.runtimeSettings.getCategorySettings(this.rootCategory);\n        // Should not happen but make ts happy\n        if (categorySettings === null) {\n            throw new Error(\"Did not find CategorySettings for rootCategory: \" + this.rootCategory.name);\n        }\n        return categorySettings.formatterLogMessage;\n    };\n    AbstractCategoryLogger.prototype._log = function (level, msg, error, resolved) {\n        if (error === void 0) { error = null; }\n        if (resolved === void 0) { resolved = false; }\n        var categories = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            categories[_i - 4] = arguments[_i];\n        }\n        // this._logInternal(level, () => msg, () => error, resolved, ...categories);\n        var functionMessage = function () {\n            if (typeof msg === \"function\") {\n                return msg();\n            }\n            return msg;\n        };\n        var functionError = function () {\n            if (typeof error === \"function\") {\n                return error();\n            }\n            return error;\n        };\n        this._logInternal.apply(this, __spreadArray([level, functionMessage, functionError, resolved], categories, false));\n    };\n    AbstractCategoryLogger.prototype._logInternal = function (level, msg, error, resolved) {\n        var _this = this;\n        var categories = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            categories[_i - 4] = arguments[_i];\n        }\n        var logCategories = [this.rootCategory];\n        // Log root category by default if none present\n        if (typeof categories !== \"undefined\" && categories.length > 0) {\n            logCategories = logCategories.concat(categories.filter(function (c) { return c !== _this.rootCategory; }));\n        }\n        var _loop_1 = function (i) {\n            var category = logCategories[i];\n            if (category === null) {\n                throw new Error(\"Cannot have a null element within categories, at index=\" + i);\n            }\n            var settings = this_1.runtimeSettings.getCategorySettings(category);\n            if (settings === null) {\n                throw new Error(\"Category with path: \" + category.getCategoryPath() + \" is not registered with this logger, maybe \" +\n                    \"you registered it with a different root logger?\");\n            }\n            if (settings.logLevel <= level) {\n                var actualError = error !== null ? error() : null;\n                if (actualError === null) {\n                    var logMessage = new CategoryLogMessageImpl(msg(), actualError, logCategories, new Date(), level, settings.logFormat, true);\n                    logMessage.resolvedErrorMessage = resolved;\n                    this_1.allMessages.addTail(logMessage);\n                    this_1.processMessages();\n                }\n                else {\n                    var logMessage_1 = new CategoryLogMessageImpl(msg(), actualError, logCategories, new Date(), level, settings.logFormat, false);\n                    logMessage_1.resolvedErrorMessage = resolved;\n                    this_1.allMessages.addTail(logMessage_1);\n                    MessageUtils_1.MessageFormatUtils.renderError(actualError).then(function (stack) {\n                        logMessage_1.errorAsStack = stack;\n                        logMessage_1.setReady(true);\n                        _this.processMessages();\n                    }).catch(function () {\n                        logMessage_1.errorAsStack = \"<UNKNOWN> unable to get stack.\";\n                        logMessage_1.setReady(true);\n                        _this.processMessages();\n                    });\n                }\n                return \"break\";\n            }\n        };\n        var this_1 = this;\n        // Get the runtime levels for given categories. If their level is lower than given level, we log.\n        // In addition we pass along which category/categories we log this statement for.\n        for (var i = 0; i < logCategories.length; i++) {\n            var state_1 = _loop_1(i);\n            if (state_1 === \"break\")\n                break;\n        }\n    };\n    AbstractCategoryLogger.prototype.processMessages = function () {\n        // Basically we wait until errors are resolved (those messages\n        // may not be ready).\n        var msgs = this.allMessages;\n        if (msgs.getSize() > 0) {\n            do {\n                var msg = msgs.getHead();\n                if (msg != null) {\n                    if (!msg.isReady()) {\n                        break;\n                    }\n                    msgs.removeHead();\n                    this.doLog(msg);\n                }\n            } while (msgs.getSize() > 0);\n        }\n    };\n    return AbstractCategoryLogger;\n}());\nexports.AbstractCategoryLogger = AbstractCategoryLogger;\n//# sourceMappingURL=AbstractCategoryLogger.js.map","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Category = void 0;\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\nvar CategoryService_1 = require(\"./CategoryService\");\n/**\n * Category for use with categorized logging.\n * At minimum you need one category, which will serve as the root category.\n * You can create child categories (like a tree). You can have multiple root\n * categories.\n */\nvar Category = /** @class */ (function () {\n    function Category(name, parent) {\n        if (parent === void 0) { parent = null; }\n        this._children = [];\n        this._logLevel = LoggerOptions_1.LogLevel.Error;\n        if (name.indexOf(\"#\") !== -1) {\n            throw new Error(\"Cannot use # in a name of a Category\");\n        }\n        this._id = Category.nextId();\n        this._name = name;\n        this._parent = parent;\n        if (this._parent !== null) {\n            this._parent._children.push(this);\n        }\n        CategoryService_1.CategoryServiceImpl.getInstance().registerCategory(this);\n    }\n    Object.defineProperty(Category.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Category.prototype, \"parent\", {\n        get: function () {\n            return this._parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Category.prototype, \"children\", {\n        get: function () {\n            return this._children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Category.prototype, \"logLevel\", {\n        get: function () {\n            return this._logLevel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Category.prototype.trace = function (msg) {\n        var _a;\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        this.loadCategoryLogger();\n        (_a = this._logger).trace.apply(_a, __spreadArray([msg], categories, false));\n    };\n    Category.prototype.debug = function (msg) {\n        var _a;\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        this.loadCategoryLogger();\n        (_a = this._logger).debug.apply(_a, __spreadArray([msg], categories, false));\n    };\n    Category.prototype.info = function (msg) {\n        var _a;\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        this.loadCategoryLogger();\n        (_a = this._logger).info.apply(_a, __spreadArray([msg], categories, false));\n    };\n    Category.prototype.warn = function (msg) {\n        var _a;\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        this.loadCategoryLogger();\n        (_a = this._logger).warn.apply(_a, __spreadArray([msg], categories, false));\n    };\n    Category.prototype.error = function (msg, error) {\n        var _a;\n        var categories = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            categories[_i - 2] = arguments[_i];\n        }\n        this.loadCategoryLogger();\n        (_a = this._logger).error.apply(_a, __spreadArray([msg, error], categories, false));\n    };\n    Category.prototype.fatal = function (msg, error) {\n        var _a;\n        var categories = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            categories[_i - 2] = arguments[_i];\n        }\n        this.loadCategoryLogger();\n        (_a = this._logger).fatal.apply(_a, __spreadArray([msg, error], categories, false));\n    };\n    Category.prototype.resolved = function (msg, error) {\n        var _a;\n        var categories = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            categories[_i - 2] = arguments[_i];\n        }\n        this.loadCategoryLogger();\n        (_a = this._logger).resolved.apply(_a, __spreadArray([msg, error], categories, false));\n    };\n    Category.prototype.log = function (level, msg, error) {\n        var _a;\n        var categories = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            categories[_i - 3] = arguments[_i];\n        }\n        this.loadCategoryLogger();\n        (_a = this._logger).log.apply(_a, __spreadArray([level, msg, error], categories, false));\n    };\n    Category.prototype.getCategoryPath = function () {\n        var result = this.name;\n        var cat = this.parent;\n        while (cat != null) {\n            result = cat.name + \"#\" + result;\n            cat = cat.parent;\n        }\n        return result;\n    };\n    Object.defineProperty(Category.prototype, \"id\", {\n        /**\n         * Returns the id for this category (this\n         * is for internal purposes only).\n         * @returns {number} Id\n         */\n        get: function () {\n            return this._id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Category.prototype.loadCategoryLogger = function () {\n        if (!this._logger) {\n            this._logger = CategoryService_1.CategoryServiceImpl.getInstance().getLogger(this);\n        }\n        if (typeof this._logger === \"undefined\" || this._logger === null) {\n            throw new Error(\"Failed to load a logger for category (should not happen): \" + this.name);\n        }\n    };\n    Category.nextId = function () {\n        return Category.currentId++;\n    };\n    Category.currentId = 1;\n    return Category;\n}());\nexports.Category = Category;\n//# sourceMappingURL=Category.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryConfiguration = void 0;\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\n/**\n * Default configuration, can be used to initially set a different default configuration\n * on the CategoryServiceFactory. This will be applied to all categories already registered (or\n * registered in the future). Can also be applied to one Category (and childs).\n */\nvar CategoryConfiguration = /** @class */ (function () {\n    /**\n     * Create a new instance\n     * @param logLevel Log level for all loggers, default is LogLevel.Error\n     * @param loggerType Where to log, default is LoggerType.Console\n     * @param logFormat What logging format to use, use default instance, for default values see CategoryLogFormat.\n     * @param callBackLogger Optional callback, if LoggerType.Custom is used as loggerType. In that case must return a new Logger instance.\n     *            It is recommended to extend AbstractCategoryLogger to make your custom logger.\n     */\n    function CategoryConfiguration(logLevel, loggerType, logFormat, callBackLogger) {\n        if (logLevel === void 0) { logLevel = LoggerOptions_1.LogLevel.Error; }\n        if (loggerType === void 0) { loggerType = LoggerOptions_1.LoggerType.Console; }\n        if (logFormat === void 0) { logFormat = new LoggerOptions_1.CategoryLogFormat(); }\n        if (callBackLogger === void 0) { callBackLogger = null; }\n        this._formatterLogMessage = null;\n        this._logLevel = logLevel;\n        this._loggerType = loggerType;\n        this._logFormat = logFormat;\n        this._callBackLogger = callBackLogger;\n        if (this._loggerType === LoggerOptions_1.LoggerType.Custom && this.callBackLogger === null) {\n            throw new Error(\"If you specify loggerType to be Custom, you must provide the callBackLogger argument\");\n        }\n    }\n    Object.defineProperty(CategoryConfiguration.prototype, \"logLevel\", {\n        get: function () {\n            return this._logLevel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryConfiguration.prototype, \"loggerType\", {\n        get: function () {\n            return this._loggerType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryConfiguration.prototype, \"logFormat\", {\n        get: function () {\n            return this._logFormat;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryConfiguration.prototype, \"callBackLogger\", {\n        get: function () {\n            return this._callBackLogger;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryConfiguration.prototype, \"formatterLogMessage\", {\n        /**\n         * Get the formatterLogMessage function, see comment on the setter.\n         * @returns {((message:CategoryLogMessage)=>string)|null}\n         */\n        get: function () {\n            return this._formatterLogMessage;\n        },\n        /**\n         * Set the default formatterLogMessage function, if set it is applied to all type of loggers except for a custom logger.\n         * By default this is null (not set). You can assign a function to allow custom formatting of a log message.\n         * Each log message will call this function then and expects your function to format the message and return a string.\n         * Will throw an error if you attempt to set a formatterLogMessage if the LoggerType is custom.\n         * @param value The formatter function, or null to reset it.\n         */\n        set: function (value) {\n            if (value !== null && this._loggerType === LoggerOptions_1.LoggerType.Custom) {\n                throw new Error(\"You cannot specify a formatter for log messages if your loggerType is Custom\");\n            }\n            this._formatterLogMessage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CategoryConfiguration.prototype.copy = function () {\n        var config = new CategoryConfiguration(this.logLevel, this.loggerType, this.logFormat.copy(), this.callBackLogger);\n        config.formatterLogMessage = this.formatterLogMessage;\n        return config;\n    };\n    return CategoryConfiguration;\n}());\nexports.CategoryConfiguration = CategoryConfiguration;\n//# sourceMappingURL=CategoryConfiguration.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryConsoleLoggerImpl = void 0;\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\nvar AbstractCategoryLogger_1 = require(\"./AbstractCategoryLogger\");\n/**\n * Simple logger, that logs to the console. If the console is unavailable will throw an exception.\n */\nvar CategoryConsoleLoggerImpl = /** @class */ (function (_super) {\n    __extends(CategoryConsoleLoggerImpl, _super);\n    function CategoryConsoleLoggerImpl(rootCategory, runtimeSettings) {\n        return _super.call(this, rootCategory, runtimeSettings) || this;\n    }\n    CategoryConsoleLoggerImpl.prototype.doLog = function (msg) {\n        if (console !== undefined) {\n            var messageFormatter = this._getMessageFormatter();\n            var fullMsg = void 0;\n            if (messageFormatter === null) {\n                fullMsg = this.createDefaultLogMessage(msg);\n            }\n            else {\n                fullMsg = messageFormatter(msg);\n            }\n            var logged = false;\n            /* tslint:disable:no-console */\n            switch (msg.level) {\n                case LoggerOptions_1.LogLevel.Trace:\n                    // Don't try trace we don't want stacks\n                    break;\n                case LoggerOptions_1.LogLevel.Debug:\n                    // Don't try, too much differences of consoles.\n                    break;\n                case LoggerOptions_1.LogLevel.Info:\n                    if (console.info) {\n                        console.info(fullMsg);\n                        logged = true;\n                    }\n                    break;\n                case LoggerOptions_1.LogLevel.Warn:\n                    if (console.warn) {\n                        console.warn(fullMsg);\n                        logged = true;\n                    }\n                    break;\n                case LoggerOptions_1.LogLevel.Error:\n                case LoggerOptions_1.LogLevel.Fatal:\n                    if (console.error) {\n                        console.error(fullMsg);\n                        logged = true;\n                    }\n                    break;\n                default:\n                    throw new Error(\"Unsupported level: \" + msg.level);\n            }\n            if (!logged) {\n                console.log(fullMsg);\n            }\n            /* tslint:enable:no-console */\n        }\n        else {\n            throw new Error(\"Console is not defined, cannot log msg: \" + msg.messageAsString);\n        }\n    };\n    return CategoryConsoleLoggerImpl;\n}(AbstractCategoryLogger_1.AbstractCategoryLogger));\nexports.CategoryConsoleLoggerImpl = CategoryConsoleLoggerImpl;\n//# sourceMappingURL=CategoryConsoleLoggerImpl.js.map","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryDelegateLoggerImpl = void 0;\n/**\n * Delegate logger, delegates logging to given logger (constructor).\n */\nvar CategoryDelegateLoggerImpl = /** @class */ (function () {\n    function CategoryDelegateLoggerImpl(delegate) {\n        this._delegate = delegate;\n    }\n    Object.defineProperty(CategoryDelegateLoggerImpl.prototype, \"delegate\", {\n        get: function () {\n            return this._delegate;\n        },\n        set: function (value) {\n            this._delegate = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CategoryDelegateLoggerImpl.prototype.trace = function (msg) {\n        var _a;\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        (_a = this._delegate).trace.apply(_a, __spreadArray([msg], categories, false));\n    };\n    CategoryDelegateLoggerImpl.prototype.debug = function (msg) {\n        var _a;\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        (_a = this._delegate).debug.apply(_a, __spreadArray([msg], categories, false));\n    };\n    CategoryDelegateLoggerImpl.prototype.info = function (msg) {\n        var _a;\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        (_a = this._delegate).info.apply(_a, __spreadArray([msg], categories, false));\n    };\n    CategoryDelegateLoggerImpl.prototype.warn = function (msg) {\n        var _a;\n        var categories = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            categories[_i - 1] = arguments[_i];\n        }\n        (_a = this._delegate).warn.apply(_a, __spreadArray([msg], categories, false));\n    };\n    CategoryDelegateLoggerImpl.prototype.error = function (msg, error) {\n        var _a;\n        var categories = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            categories[_i - 2] = arguments[_i];\n        }\n        (_a = this._delegate).error.apply(_a, __spreadArray([msg, error], categories, false));\n    };\n    CategoryDelegateLoggerImpl.prototype.fatal = function (msg, error) {\n        var _a;\n        var categories = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            categories[_i - 2] = arguments[_i];\n        }\n        (_a = this._delegate).fatal.apply(_a, __spreadArray([msg, error], categories, false));\n    };\n    CategoryDelegateLoggerImpl.prototype.resolved = function (msg, error) {\n        var _a;\n        var categories = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            categories[_i - 2] = arguments[_i];\n        }\n        (_a = this._delegate).resolved.apply(_a, __spreadArray([msg, error], categories, false));\n    };\n    CategoryDelegateLoggerImpl.prototype.log = function (level, msg, error) {\n        var _a;\n        var categories = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            categories[_i - 3] = arguments[_i];\n        }\n        (_a = this._delegate).log.apply(_a, __spreadArray([level, msg, error], categories, false));\n    };\n    return CategoryDelegateLoggerImpl;\n}());\nexports.CategoryDelegateLoggerImpl = CategoryDelegateLoggerImpl;\n//# sourceMappingURL=CategoryDelegateLoggerImpl.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryExtensionLoggerImpl = void 0;\nvar ExtensionHelper_1 = require(\"../../extension/ExtensionHelper\");\nvar AbstractCategoryLogger_1 = require(\"./AbstractCategoryLogger\");\n/**\n * This class should not be used directly, it is used for communication with the extension only.\n */\nvar CategoryExtensionLoggerImpl = /** @class */ (function (_super) {\n    __extends(CategoryExtensionLoggerImpl, _super);\n    function CategoryExtensionLoggerImpl(rootCategory, runtimeSettings) {\n        return _super.call(this, rootCategory, runtimeSettings) || this;\n    }\n    CategoryExtensionLoggerImpl.prototype.doLog = function (msg) {\n        if (typeof window !== \"undefined\") {\n            ExtensionHelper_1.ExtensionHelper.sendCategoryLogMessage(msg);\n        }\n        else {\n            /* tslint:disable:no-console */\n            console.log(\"window is not available, you must be running in a browser for this. Dropped message.\");\n            /* tslint:enable:no-console */\n        }\n    };\n    return CategoryExtensionLoggerImpl;\n}(AbstractCategoryLogger_1.AbstractCategoryLogger));\nexports.CategoryExtensionLoggerImpl = CategoryExtensionLoggerImpl;\n//# sourceMappingURL=CategoryExtensionLoggerImpl.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryMessageBufferLoggerImpl = void 0;\nvar AbstractCategoryLogger_1 = require(\"./AbstractCategoryLogger\");\n/**\n * Logger which buffers all messages, use with care due to possible high memory footprint.\n * Can be convenient in some cases. Call toString() for full output, or cast to this class\n * and call getMessages() to do something with it yourself.\n */\nvar CategoryMessageBufferLoggerImpl = /** @class */ (function (_super) {\n    __extends(CategoryMessageBufferLoggerImpl, _super);\n    function CategoryMessageBufferLoggerImpl() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.messages = [];\n        return _this;\n    }\n    CategoryMessageBufferLoggerImpl.prototype.getMessages = function () {\n        return this.messages;\n    };\n    CategoryMessageBufferLoggerImpl.prototype.toString = function () {\n        return this.messages.map(function (msg) {\n            return msg;\n        }).join(\"\\n\");\n    };\n    CategoryMessageBufferLoggerImpl.prototype.doLog = function (msg) {\n        var messageFormatter = this._getMessageFormatter();\n        var fullMsg;\n        if (messageFormatter === null) {\n            fullMsg = this.createDefaultLogMessage(msg);\n        }\n        else {\n            fullMsg = messageFormatter(msg);\n        }\n        this.messages.push(fullMsg);\n    };\n    return CategoryMessageBufferLoggerImpl;\n}(AbstractCategoryLogger_1.AbstractCategoryLogger));\nexports.CategoryMessageBufferLoggerImpl = CategoryMessageBufferLoggerImpl;\n//# sourceMappingURL=CategoryMessageBufferImpl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryRuntimeSettings = void 0;\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\n/**\n * RuntimeSettings for a category, at runtime these are associated to a category.\n */\nvar CategoryRuntimeSettings = /** @class */ (function () {\n    function CategoryRuntimeSettings(category, logLevel, loggerType, logFormat, callBackLogger, formatterLogMessage) {\n        if (logLevel === void 0) { logLevel = LoggerOptions_1.LogLevel.Error; }\n        if (loggerType === void 0) { loggerType = LoggerOptions_1.LoggerType.Console; }\n        if (logFormat === void 0) { logFormat = new LoggerOptions_1.CategoryLogFormat(); }\n        if (callBackLogger === void 0) { callBackLogger = null; }\n        if (formatterLogMessage === void 0) { formatterLogMessage = null; }\n        this._formatterLogMessage = null;\n        this._category = category;\n        this._logLevel = logLevel;\n        this._loggerType = loggerType;\n        this._logFormat = logFormat;\n        this._callBackLogger = callBackLogger;\n        this._formatterLogMessage = formatterLogMessage;\n    }\n    Object.defineProperty(CategoryRuntimeSettings.prototype, \"category\", {\n        get: function () {\n            return this._category;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryRuntimeSettings.prototype, \"logLevel\", {\n        get: function () {\n            return this._logLevel;\n        },\n        set: function (value) {\n            this._logLevel = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryRuntimeSettings.prototype, \"loggerType\", {\n        get: function () {\n            return this._loggerType;\n        },\n        set: function (value) {\n            this._loggerType = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryRuntimeSettings.prototype, \"logFormat\", {\n        get: function () {\n            return this._logFormat;\n        },\n        set: function (value) {\n            this._logFormat = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryRuntimeSettings.prototype, \"callBackLogger\", {\n        get: function () {\n            return this._callBackLogger;\n        },\n        set: function (value) {\n            this._callBackLogger = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryRuntimeSettings.prototype, \"formatterLogMessage\", {\n        get: function () {\n            return this._formatterLogMessage;\n        },\n        set: function (value) {\n            this._formatterLogMessage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CategoryRuntimeSettings;\n}());\nexports.CategoryRuntimeSettings = CategoryRuntimeSettings;\n//# sourceMappingURL=CategoryRuntimeSettings.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryServiceImpl = void 0;\nvar DataStructures_1 = require(\"../../utils/DataStructures\");\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\nvar CategoryConsoleLoggerImpl_1 = require(\"./CategoryConsoleLoggerImpl\");\nvar CategoryDelegateLoggerImpl_1 = require(\"./CategoryDelegateLoggerImpl\");\nvar CategoryExtensionLoggerImpl_1 = require(\"./CategoryExtensionLoggerImpl\");\nvar CategoryMessageBufferImpl_1 = require(\"./CategoryMessageBufferImpl\");\nvar ExtensionHelper_1 = require(\"../../extension/ExtensionHelper\");\nvar CategoryRuntimeSettings_1 = require(\"./CategoryRuntimeSettings\");\nvar CategoryConfiguration_1 = require(\"./CategoryConfiguration\");\n/**\n * The service (only available as singleton) for all category related stuff as\n * retrieving, registering a logger. You should normally NOT use this,\n * instead use CategoryServiceFactory which is meant for end users.\n */\nvar CategoryServiceImpl = /** @class */ (function () {\n    function CategoryServiceImpl() {\n        this._defaultConfig = new CategoryConfiguration_1.CategoryConfiguration();\n        this._mapState = new DataStructures_1.SimpleMap();\n        // Private constructor\n        ExtensionHelper_1.ExtensionHelper.register();\n    }\n    CategoryServiceImpl.getInstance = function () {\n        // Load on-demand, to assure webpack ordering of module usage doesn't screw things over\n        // for us when we accidentally change the order.\n        if (CategoryServiceImpl._INSTANCE === null) {\n            CategoryServiceImpl._INSTANCE = new CategoryServiceImpl();\n        }\n        return CategoryServiceImpl._INSTANCE;\n    };\n    CategoryServiceImpl.prototype.getLogger = function (category) {\n        return this.createOrGetCategoryState(category).logger;\n    };\n    /**\n     * Clears everything, including a default configuration you may have set.\n     * After this you need to re-register your categories etc.\n     */\n    CategoryServiceImpl.prototype.clear = function () {\n        this._mapState.clear();\n        this.setDefaultConfiguration(new CategoryConfiguration_1.CategoryConfiguration());\n    };\n    CategoryServiceImpl.prototype.getCategorySettings = function (category) {\n        return this.createOrGetCategoryState(category).currentRuntimeSettings;\n    };\n    CategoryServiceImpl.prototype.getOriginalCategorySettings = function (category) {\n        return this.createOrGetCategoryState(category).originalRuntimeSettings;\n    };\n    /**\n     * Set the default configuration. New root loggers created get this\n     * applied. If you want to reset all current loggers to have this\n     * applied as well, pass in reset=true (the default is false). All\n     * categories will be reset then as well.\n     * @param config New config\n     * @param reset Defaults to true. Set to true to reset all loggers and current runtimesettings.\n     */\n    CategoryServiceImpl.prototype.setDefaultConfiguration = function (config, reset) {\n        if (reset === void 0) { reset = true; }\n        this._defaultConfig = config;\n        if (reset) {\n            this._mapState.forEachValue(function (state) {\n                state.updateSettings(config);\n            });\n        }\n    };\n    /**\n     * Set new configuration settings for a category (and possibly its child categories)\n     * @param config Config\n     * @param category Category\n     * @param applyChildren True to apply to child categories, defaults to false.\n     */\n    CategoryServiceImpl.prototype.setConfigurationCategory = function (config, category, applyChildren) {\n        var _this = this;\n        if (applyChildren === void 0) { applyChildren = false; }\n        this.createOrGetCategoryState(category).updateSettings(config);\n        // Apply the settings to children recursive if requested\n        if (applyChildren) {\n            category.children.forEach(function (child) {\n                // False flag, a child cannot reset a rootlogger\n                _this.setConfigurationCategory(config, child, applyChildren);\n            });\n        }\n    };\n    CategoryServiceImpl.prototype.registerCategory = function (category) {\n        if (category === null || typeof category === \"undefined\") {\n            throw new Error(\"Category CANNOT be null/undefined\");\n        }\n        if (this._mapState.exists(CategoryServiceImpl.getCategoryKey(category))) {\n            throw new Error(\"Cannot add this root category with name: \" + category.name + \", it already exists (same name in hierarchy).\");\n        }\n        this.createOrGetCategoryState(category);\n    };\n    /**\n     * Used to enable integration with chrome extension. Do not use manually, the\n     * extension and the logger framework deal with this.\n     */\n    CategoryServiceImpl.prototype.enableExtensionIntegration = function () {\n        var _this = this;\n        this._mapState.forEachValue(function (state) { return state.enableForExtension(_this); });\n    };\n    /**\n     * Return all root categories currently registered.\n     */\n    CategoryServiceImpl.prototype.getRootCategories = function () {\n        return this._mapState.values().filter(function (state) { return state.category.parent == null; }).map(function (state) { return state.category; });\n    };\n    /**\n     * Return Category by id\n     * @param id The id of the category to find\n     * @returns {Category} or null if not found\n     */\n    CategoryServiceImpl.prototype.getCategoryById = function (id) {\n        var result = this._mapState.values().filter(function (state) { return state.category.id === id; }).map(function (state) { return state.category; });\n        if (result.length === 1) {\n            return result[0];\n        }\n        return null;\n    };\n    CategoryServiceImpl.prototype.createOrGetCategoryState = function (category) {\n        var key = CategoryServiceImpl.getCategoryKey(category);\n        var state = this._mapState.get(key);\n        if (typeof state !== \"undefined\") {\n            return state;\n        }\n        var newState = this.createState(category);\n        this._mapState.put(key, newState);\n        return newState;\n    };\n    CategoryServiceImpl.prototype.createState = function (category) {\n        var _this = this;\n        return new CategoryState(category, function () { return _this._defaultConfig; }, function (config, cat) { return _this.createLogger(config, cat); });\n    };\n    CategoryServiceImpl.prototype.createLogger = function (config, category) {\n        // Default is always a console logger\n        switch (config.loggerType) {\n            case LoggerOptions_1.LoggerType.Console:\n                return new CategoryConsoleLoggerImpl_1.CategoryConsoleLoggerImpl(category, this);\n            case LoggerOptions_1.LoggerType.MessageBuffer:\n                return new CategoryMessageBufferImpl_1.CategoryMessageBufferLoggerImpl(category, this);\n            case LoggerOptions_1.LoggerType.Custom:\n                if (config.callBackLogger === null) {\n                    throw new Error(\"Cannot create custom logger, custom callback is null\");\n                }\n                else {\n                    return config.callBackLogger(category, this);\n                }\n            default:\n                throw new Error(\"Cannot create a Logger for LoggerType: \" + config.loggerType);\n        }\n    };\n    CategoryServiceImpl.getCategoryKey = function (category) {\n        return category.getCategoryPath();\n    };\n    // Singleton category service, used by CategoryServiceFactory as well as Categories.\n    // Loaded on demand. Do NOT change as webpack may pack things in wrong order otherwise.\n    CategoryServiceImpl._INSTANCE = null;\n    return CategoryServiceImpl;\n}());\nexports.CategoryServiceImpl = CategoryServiceImpl;\nvar CategoryState = /** @class */ (function () {\n    function CategoryState(category, defaultConfig, createLogger) {\n        this._category = category;\n        this._lazyState = new LazyState(category, defaultConfig, createLogger);\n    }\n    Object.defineProperty(CategoryState.prototype, \"category\", {\n        get: function () {\n            return this._category;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryState.prototype, \"logger\", {\n        get: function () {\n            return this._lazyState.getLogger();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryState.prototype, \"originalRuntimeSettings\", {\n        get: function () {\n            return this._lazyState.getOriginalRuntimeSettings();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CategoryState.prototype, \"currentRuntimeSettings\", {\n        get: function () {\n            return this._lazyState.getCurrentRuntimeSettings();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CategoryState.prototype.enableForExtension = function (runtimeSettings) {\n        this._lazyState.enableForExtension(runtimeSettings);\n    };\n    CategoryState.prototype.updateSettings = function (config) {\n        this._lazyState.updateSettings(config);\n    };\n    return CategoryState;\n}());\nvar LazyState = /** @class */ (function () {\n    function LazyState(category, defaultConfig, createLogger) {\n        this._category = category;\n        this._defaultConfig = defaultConfig;\n        this._createLogger = createLogger;\n    }\n    LazyState.prototype.isLoaded = function () {\n        return (typeof this._logger !== \"undefined\");\n    };\n    LazyState.prototype.getLogger = function () {\n        this.loadLoggerOnDemand();\n        return this._delegateLogger;\n    };\n    LazyState.prototype.getOriginalRuntimeSettings = function () {\n        this.loadLoggerOnDemand();\n        return this._originalRuntimeSettings;\n    };\n    LazyState.prototype.getCurrentRuntimeSettings = function () {\n        this.loadLoggerOnDemand();\n        return this._currentRuntimeSettings;\n    };\n    LazyState.prototype.enableForExtension = function (runtimeSettings) {\n        this.loadLoggerOnDemand();\n        if (!(this._wrappedLogger instanceof CategoryExtensionLoggerImpl_1.CategoryExtensionLoggerImpl)) {\n            /* tslint:disable no-console */\n            console.log(\"Reconfiguring logger for extension for category: \" + this._category.name);\n            /* tslint:enable no-console */\n            this._wrappedLogger = new CategoryExtensionLoggerImpl_1.CategoryExtensionLoggerImpl(this._category, runtimeSettings);\n            this._delegateLogger.delegate = this._wrappedLogger;\n        }\n    };\n    LazyState.prototype.updateSettings = function (config) {\n        if (this.isLoaded()) {\n            this._currentRuntimeSettings.logLevel = config.logLevel;\n            this._currentRuntimeSettings.loggerType = config.loggerType;\n            this._currentRuntimeSettings.logFormat = config.logFormat;\n            this._currentRuntimeSettings.callBackLogger = config.callBackLogger;\n            this._currentRuntimeSettings.formatterLogMessage = config.formatterLogMessage;\n            // Replace the real logger, it may have changed.\n            this._logger = this._createLogger(config, this._category);\n            if (!(this._wrappedLogger instanceof CategoryExtensionLoggerImpl_1.CategoryExtensionLoggerImpl)) {\n                this._wrappedLogger = this._logger;\n            }\n            this._delegateLogger.delegate = this._wrappedLogger;\n        }\n        else {\n            // Set this config, it may be for the category specific, the default is therefore not good enough.\n            this._defaultConfig = function () { return config; };\n        }\n    };\n    LazyState.prototype.loadLoggerOnDemand = function () {\n        if (!this.isLoaded()) {\n            this._logger = this._createLogger(this._defaultConfig(), this._category);\n            this._wrappedLogger = this._logger;\n            this._delegateLogger = new CategoryDelegateLoggerImpl_1.CategoryDelegateLoggerImpl(this._wrappedLogger);\n            this._originalRuntimeSettings = this.initNewSettings();\n            this._currentRuntimeSettings = this.initNewSettings();\n        }\n    };\n    LazyState.prototype.initNewSettings = function () {\n        var defSettings = this._defaultConfig().copy();\n        return new CategoryRuntimeSettings_1.CategoryRuntimeSettings(this._category, defSettings.logLevel, defSettings.loggerType, defSettings.logFormat, defSettings.callBackLogger, defSettings.formatterLogMessage);\n    };\n    return LazyState;\n}());\n//# sourceMappingURL=CategoryService.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CategoryServiceFactory = void 0;\nvar CategoryService_1 = require(\"./CategoryService\");\n/**\n * Categorized service for logging, where logging is bound to categories which\n * can log horizontally through specific application logic (services, group(s) of components etc).\n * For the standard way of logging like most frameworks do these days, use LFService instead.\n * If you want fine grained control to divide sections of your application in\n * logical units to enable/disable logging for, this is the service you want to use instead.\n * Also for this type a browser plugin will be available.\n */\nvar CategoryServiceFactory = /** @class */ (function () {\n    function CategoryServiceFactory() {\n        // Private constructor.\n    }\n    /**\n     * Return a CategoryLogger for given ROOT category (thus has no parent).\n     * You can only retrieve loggers for their root, when logging\n     * you specify to log for what (child)categories.\n     * @param root Category root (has no parent)\n     * @returns {CategoryLogger}\n     */\n    CategoryServiceFactory.getLogger = function (root) {\n        return CategoryService_1.CategoryServiceImpl.getInstance().getLogger(root);\n    };\n    /**\n     * Clears everything, any registered (root)categories and loggers\n     * are discarded. Resets to default configuration.\n     */\n    CategoryServiceFactory.clear = function () {\n        return CategoryService_1.CategoryServiceImpl.getInstance().clear();\n    };\n    /**\n     * Set the default configuration. New root loggers created get this\n     * applied. If you want to reset all current loggers to have this\n     * applied as well, pass in reset=true (the default is false). All\n     * categories runtimesettings will be reset then as well.\n     * @param config The new default configuration\n     * @param reset If true, will reset *all* runtimesettings for all loggers/categories to these. Default is true.\n     */\n    CategoryServiceFactory.setDefaultConfiguration = function (config, reset) {\n        if (reset === void 0) { reset = true; }\n        CategoryService_1.CategoryServiceImpl.getInstance().setDefaultConfiguration(config, reset);\n    };\n    /**\n     * Set new configuration settings for a category (and possibly its child categories)\n     * @param config Config\n     * @param category Category\n     * @param applyChildren True to apply to child categories, defaults to false.\n     */\n    CategoryServiceFactory.setConfigurationCategory = function (config, category, applyChildren) {\n        if (applyChildren === void 0) { applyChildren = false; }\n        CategoryService_1.CategoryServiceImpl.getInstance().setConfigurationCategory(config, category, applyChildren);\n    };\n    return CategoryServiceFactory;\n}());\nexports.CategoryServiceFactory = CategoryServiceFactory;\n//# sourceMappingURL=CategoryServiceFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractLogger = void 0;\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\nvar DataStructures_1 = require(\"../../utils/DataStructures\");\nvar MessageUtils_1 = require(\"../../utils/MessageUtils\");\nvar LogMessageInternalImpl = /** @class */ (function () {\n    function LogMessageInternalImpl(loggerName, message, errorAsStack, error, logGroupRule, date, level, ready) {\n        this._errorAsStack = null;\n        this._error = null;\n        this._loggerName = loggerName;\n        this._message = message;\n        this._errorAsStack = errorAsStack;\n        this._error = error;\n        this._logGroupRule = logGroupRule;\n        this._date = date;\n        this._level = level;\n        this._ready = ready;\n    }\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"loggerName\", {\n        get: function () {\n            return this._loggerName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"message\", {\n        get: function () {\n            return this._message;\n        },\n        set: function (value) {\n            this._message = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"errorAsStack\", {\n        get: function () {\n            return this._errorAsStack;\n        },\n        set: function (value) {\n            this._errorAsStack = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"error\", {\n        get: function () {\n            return this._error;\n        },\n        set: function (value) {\n            this._error = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"logGroupRule\", {\n        get: function () {\n            return this._logGroupRule;\n        },\n        set: function (value) {\n            this._logGroupRule = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"date\", {\n        get: function () {\n            return this._date;\n        },\n        set: function (value) {\n            this._date = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"level\", {\n        get: function () {\n            return this._level;\n        },\n        set: function (value) {\n            this._level = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"isMessageLogData\", {\n        get: function () {\n            return typeof (this._message) !== \"string\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"ready\", {\n        get: function () {\n            return this._ready;\n        },\n        set: function (value) {\n            this._ready = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"messageAsString\", {\n        get: function () {\n            if (typeof (this._message) === \"string\") {\n                return this._message;\n            }\n            return this._message.msg;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogMessageInternalImpl.prototype, \"logData\", {\n        get: function () {\n            var result = null;\n            if (typeof (this._message) !== \"string\") {\n                result = this.message;\n            }\n            return result;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return LogMessageInternalImpl;\n}());\n/**\n * Abstract base logger, extend to easily implement a custom logger that\n * logs wherever you want. You only need to implement doLog(msg: LogMessage) and\n * log that somewhere (it will contain format and everything else).\n */\nvar AbstractLogger = /** @class */ (function () {\n    function AbstractLogger(name, logGroupRuntimeSettings) {\n        this._allMessages = new DataStructures_1.LinkedList();\n        this._open = true;\n        this._name = name;\n        this._logGroupRuntimeSettings = logGroupRuntimeSettings;\n    }\n    Object.defineProperty(AbstractLogger.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractLogger.prototype.trace = function (msg, error) {\n        if (error === void 0) { error = null; }\n        this._log(LoggerOptions_1.LogLevel.Trace, msg, error);\n    };\n    AbstractLogger.prototype.debug = function (msg, error) {\n        if (error === void 0) { error = null; }\n        this._log(LoggerOptions_1.LogLevel.Debug, msg, error);\n    };\n    AbstractLogger.prototype.info = function (msg, error) {\n        if (error === void 0) { error = null; }\n        this._log(LoggerOptions_1.LogLevel.Info, msg, error);\n    };\n    AbstractLogger.prototype.warn = function (msg, error) {\n        if (error === void 0) { error = null; }\n        this._log(LoggerOptions_1.LogLevel.Warn, msg, error);\n    };\n    AbstractLogger.prototype.error = function (msg, error) {\n        if (error === void 0) { error = null; }\n        this._log(LoggerOptions_1.LogLevel.Error, msg, error);\n    };\n    AbstractLogger.prototype.fatal = function (msg, error) {\n        if (error === void 0) { error = null; }\n        this._log(LoggerOptions_1.LogLevel.Fatal, msg, error);\n    };\n    AbstractLogger.prototype.isTraceEnabled = function () {\n        return this._logGroupRuntimeSettings.level === LoggerOptions_1.LogLevel.Trace;\n    };\n    AbstractLogger.prototype.isDebugEnabled = function () {\n        return this._logGroupRuntimeSettings.level <= LoggerOptions_1.LogLevel.Debug;\n    };\n    AbstractLogger.prototype.isInfoEnabled = function () {\n        return this._logGroupRuntimeSettings.level <= LoggerOptions_1.LogLevel.Info;\n    };\n    AbstractLogger.prototype.isWarnEnabled = function () {\n        return this._logGroupRuntimeSettings.level <= LoggerOptions_1.LogLevel.Warn;\n    };\n    AbstractLogger.prototype.isErrorEnabled = function () {\n        return this._logGroupRuntimeSettings.level <= LoggerOptions_1.LogLevel.Error;\n    };\n    AbstractLogger.prototype.isFatalEnabled = function () {\n        return this._logGroupRuntimeSettings.level <= LoggerOptions_1.LogLevel.Fatal;\n    };\n    AbstractLogger.prototype.getLogLevel = function () {\n        return this._logGroupRuntimeSettings.level;\n    };\n    AbstractLogger.prototype.isOpen = function () {\n        return this._open;\n    };\n    AbstractLogger.prototype.close = function () {\n        this._open = false;\n        this._allMessages.clear();\n    };\n    AbstractLogger.prototype.createDefaultLogMessage = function (msg) {\n        return MessageUtils_1.MessageFormatUtils.renderDefaultLog4jMessage(msg, true);\n    };\n    /**\n     * Return optional message formatter. All LoggerTypes (except custom) will see if\n     * they have this, and if so use it to log.\n     * @returns {((message:LogMessage)=>string)|null}\n     */\n    AbstractLogger.prototype._getMessageFormatter = function () {\n        return this._logGroupRuntimeSettings.formatterLogMessage;\n    };\n    AbstractLogger.prototype._log = function (level, msg, error) {\n        if (error === void 0) { error = null; }\n        if (this._open && this._logGroupRuntimeSettings.level <= level) {\n            var functionMessage = function () {\n                if (typeof msg === \"function\") {\n                    return msg();\n                }\n                return msg;\n            };\n            var functionError = function () {\n                if (typeof error === \"function\") {\n                    return error();\n                }\n                return error;\n            };\n            this._allMessages.addTail(this.createMessage(level, functionMessage, functionError, new Date()));\n            this.processMessages();\n        }\n    };\n    AbstractLogger.prototype.createMessage = function (level, msg, error, date) {\n        var _this = this;\n        var errorResult = error();\n        if (errorResult !== null) {\n            var message_1 = new LogMessageInternalImpl(this._name, msg(), null, errorResult, this._logGroupRuntimeSettings.logGroupRule, date, level, false);\n            MessageUtils_1.MessageFormatUtils.renderError(errorResult).then(function (stack) {\n                message_1.errorAsStack = stack;\n                message_1.ready = true;\n                _this.processMessages();\n            }).catch(function () {\n                message_1.errorAsStack = \"<UNKNOWN> unable to get stack.\";\n                message_1.ready = true;\n                _this.processMessages();\n            });\n            return message_1;\n        }\n        return new LogMessageInternalImpl(this._name, msg(), null, errorResult, this._logGroupRuntimeSettings.logGroupRule, date, level, true);\n    };\n    AbstractLogger.prototype.processMessages = function () {\n        // Basically we wait until errors are resolved (those messages\n        // may not be ready).\n        var msgs = this._allMessages;\n        if (msgs.getSize() > 0) {\n            do {\n                var msg = msgs.getHead();\n                if (msg != null) {\n                    if (!msg.ready) {\n                        break;\n                    }\n                    msgs.removeHead();\n                    // This can never be null normally, but strict null checking ...\n                    if (msg.message !== null) {\n                        this.doLog(msg);\n                    }\n                }\n            } while (msgs.getSize() > 0);\n        }\n    };\n    return AbstractLogger;\n}());\nexports.AbstractLogger = AbstractLogger;\n//# sourceMappingURL=AbstractLogger.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleLoggerImpl = void 0;\nvar AbstractLogger_1 = require(\"./AbstractLogger\");\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\n/**\n * Simple logger, that logs to the console. If the console is unavailable will throw exception.\n */\nvar ConsoleLoggerImpl = /** @class */ (function (_super) {\n    __extends(ConsoleLoggerImpl, _super);\n    function ConsoleLoggerImpl(name, logGroupRuntimeSettings) {\n        return _super.call(this, name, logGroupRuntimeSettings) || this;\n    }\n    ConsoleLoggerImpl.prototype.doLog = function (message) {\n        if (console !== undefined) {\n            var logged = false;\n            var logLevel = message.level;\n            var messageFormatter = this._getMessageFormatter();\n            var msg = void 0;\n            if (messageFormatter === null) {\n                msg = this.createDefaultLogMessage(message);\n            }\n            else {\n                msg = messageFormatter(message);\n            }\n            /* tslint:disable:no-console */\n            switch (logLevel) {\n                case LoggerOptions_1.LogLevel.Trace:\n                    // Do not try trace we don't want a stack\n                    break;\n                case LoggerOptions_1.LogLevel.Debug:\n                    // Don't try, too much differences of consoles.\n                    break;\n                case LoggerOptions_1.LogLevel.Info:\n                    if (console.info) {\n                        console.info(msg);\n                        logged = true;\n                    }\n                    break;\n                case LoggerOptions_1.LogLevel.Warn:\n                    if (console.warn) {\n                        console.warn(msg);\n                        logged = true;\n                    }\n                    break;\n                case LoggerOptions_1.LogLevel.Error:\n                case LoggerOptions_1.LogLevel.Fatal:\n                    if (console.error) {\n                        console.error(msg);\n                        logged = true;\n                    }\n                    break;\n                default:\n                    throw new Error(\"Log level not supported: \" + logLevel);\n            }\n            if (!logged) {\n                console.log(msg);\n            }\n            /* tslint:enable:no-console */\n        }\n        else {\n            throw new Error(\"Console is not defined, cannot log msg: \" + message.message);\n        }\n    };\n    return ConsoleLoggerImpl;\n}(AbstractLogger_1.AbstractLogger));\nexports.ConsoleLoggerImpl = ConsoleLoggerImpl;\n//# sourceMappingURL=ConsoleLoggerImpl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LFService = void 0;\nvar DataStructures_1 = require(\"../../utils/DataStructures\");\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\nvar LoggerFactoryImpl_1 = require(\"./LoggerFactoryImpl\");\nvar ExtensionHelper_1 = require(\"../../extension/ExtensionHelper\");\nvar LogGroupRule_1 = require(\"./LogGroupRule\");\nvar LoggerFactoryOptions_1 = require(\"./LoggerFactoryOptions\");\nvar LFServiceImpl = /** @class */ (function () {\n    function LFServiceImpl() {\n        // Private constructor.\n        this._nameCounter = 1;\n        this._mapFactories = new DataStructures_1.SimpleMap();\n        ExtensionHelper_1.ExtensionHelper.register();\n    }\n    LFServiceImpl.getInstance = function () {\n        // Loaded on demand. Do NOT change as webpack may pack things in wrong order otherwise.\n        if (LFServiceImpl._INSTANCE === null) {\n            LFServiceImpl._INSTANCE = new LFServiceImpl();\n        }\n        return LFServiceImpl._INSTANCE;\n    };\n    /**\n     * Create a new LoggerFactory with given options (if any). If no options\n     * are specified, the LoggerFactory, will accept any named logger and will\n     * log on info level by default for, to the console.\n     * @param options Options, optional.\n     * @returns {LoggerFactory}\n     */\n    LFServiceImpl.prototype.createLoggerFactory = function (options) {\n        if (options === void 0) { options = null; }\n        var name = \"LoggerFactory\" + this._nameCounter++;\n        return this.createNamedLoggerFactory(name, options);\n    };\n    /**\n     * Create a new LoggerFactory using given name (used for console api/extension).\n     * @param name Name Pick something short but distinguishable.\n     * @param options Options, optional\n     * @return {LoggerFactory}\n     */\n    LFServiceImpl.prototype.createNamedLoggerFactory = function (name, options) {\n        if (options === void 0) { options = null; }\n        if (this._mapFactories.exists(name)) {\n            throw new Error(\"LoggerFactory with name \" + name + \" already exists.\");\n        }\n        var factory;\n        if (options !== null) {\n            factory = new LoggerFactoryImpl_1.LoggerFactoryImpl(name, options);\n        }\n        else {\n            factory = new LoggerFactoryImpl_1.LoggerFactoryImpl(name, LFServiceImpl.createDefaultOptions());\n        }\n        this._mapFactories.put(name, factory);\n        return factory;\n    };\n    /**\n     * Closes all Loggers for LoggerFactories that were created.\n     * After this call, all previously fetched Loggers (from their\n     * factories) are unusable. The factories remain as they were.\n     */\n    LFServiceImpl.prototype.closeLoggers = function () {\n        this._mapFactories.values().forEach(function (factory) {\n            factory.closeLoggers();\n        });\n        this._mapFactories.clear();\n        this._nameCounter = 1;\n    };\n    LFServiceImpl.prototype.getRuntimeSettingsForLoggerFactories = function () {\n        var result = [];\n        this._mapFactories.forEachValue(function (factory) { return result.push(factory); });\n        return result;\n    };\n    LFServiceImpl.prototype.getLogGroupSettings = function (nameLoggerFactory, idLogGroupRule) {\n        var factory = this._mapFactories.get(nameLoggerFactory);\n        if (typeof factory === \"undefined\") {\n            return null;\n        }\n        return factory.getLogGroupRuntimeSettingsByIndex(idLogGroupRule);\n    };\n    LFServiceImpl.prototype.getLoggerFactoryRuntimeSettingsByName = function (nameLoggerFactory) {\n        var result = this._mapFactories.get(nameLoggerFactory);\n        if (typeof result === \"undefined\") {\n            return null;\n        }\n        return result;\n    };\n    LFServiceImpl.createDefaultOptions = function () {\n        return new LoggerFactoryOptions_1.LoggerFactoryOptions().addLogGroupRule(new LogGroupRule_1.LogGroupRule(new RegExp(\".+\"), LoggerOptions_1.LogLevel.Info));\n    };\n    // Loaded on demand. Do NOT change as webpack may pack things in wrong order otherwise.\n    LFServiceImpl._INSTANCE = null;\n    return LFServiceImpl;\n}());\n/**\n * Create and configure your LoggerFactory from here.\n */\nvar LFService = /** @class */ (function () {\n    function LFService() {\n    }\n    /**\n     * Create a new LoggerFactory with given options (if any). If no options\n     * are specified, the LoggerFactory, will accept any named logger and will\n     * log on info level by default for, to the console.\n     * @param options Options, optional.\n     * @returns {LoggerFactory}\n     */\n    LFService.createLoggerFactory = function (options) {\n        if (options === void 0) { options = null; }\n        return LFService.INSTANCE_SERVICE.createLoggerFactory(options);\n    };\n    /**\n     * Create a new LoggerFactory using given name (used for console api/extension).\n     * @param name Name Pick something short but distinguishable. The word \"DEFAULT\" is reserved and cannot be taken, it is used\n     * for the default LoggerFactory.\n     * @param options Options, optional\n     * @return {LoggerFactory}\n     */\n    LFService.createNamedLoggerFactory = function (name, options) {\n        if (options === void 0) { options = null; }\n        if (name === LFService.DEFAULT_LOGGER_FACTORY_NAME) {\n            throw new Error(\"LoggerFactory name: \" + LFService.DEFAULT_LOGGER_FACTORY_NAME + \" is reserved and cannot be used.\");\n        }\n        return LFService.INSTANCE_SERVICE.createNamedLoggerFactory(name, options);\n    };\n    /**\n     * Closes all Loggers for LoggerFactories that were created.\n     * After this call, all previously fetched Loggers (from their\n     * factories) are unusable. The factories remain as they were.\n     */\n    LFService.closeLoggers = function () {\n        return LFService.INSTANCE_SERVICE.closeLoggers();\n    };\n    /**\n     * Return LFServiceRuntimeSettings to retrieve information loggerfactories\n     * and their runtime settings.\n     * @returns {LFServiceRuntimeSettings}\n     */\n    LFService.getRuntimeSettings = function () {\n        return LFService.INSTANCE_SERVICE;\n    };\n    Object.defineProperty(LFService, \"DEFAULT\", {\n        /**\n         * This property returns the default LoggerFactory (if not yet initialized it is initialized).\n         * This LoggerFactory can be used to share among multiple\n         * applications/libraries - that way you can enable/change logging over everything from\n         * your own application when required.\n         * It is recommended to be used by library developers to make logging easily available for the\n         * consumers of their libraries.\n         * It is highly recommended to use Loggers from the LoggerFactory with unique grouping/names to prevent\n         * clashes of Loggers between multiple projects.\n         * @returns {LoggerFactory} Returns the default LoggerFactory\n         */\n        get: function () {\n            return LFService.getDefault();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LFService.getDefault = function () {\n        if (LFService.DEFAULT_LOGGER_FACTORY === null) {\n            LFService.DEFAULT_LOGGER_FACTORY = LFService.DEFAULT_LOGGER_FACTORY = LFService.INSTANCE_SERVICE.createNamedLoggerFactory(LFService.DEFAULT_LOGGER_FACTORY_NAME, new LoggerFactoryOptions_1.LoggerFactoryOptions().addLogGroupRule(new LogGroupRule_1.LogGroupRule(new RegExp(\".+\"), LoggerOptions_1.LogLevel.Error)));\n        }\n        return LFService.DEFAULT_LOGGER_FACTORY;\n    };\n    LFService.DEFAULT_LOGGER_FACTORY_NAME = \"DEFAULT\";\n    LFService.INSTANCE_SERVICE = LFServiceImpl.getInstance();\n    LFService.DEFAULT_LOGGER_FACTORY = null;\n    return LFService;\n}());\nexports.LFService = LFService;\n//# sourceMappingURL=LFService.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogGroupRule = void 0;\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\n/**\n * Defines a LogGroupRule, this allows you to either have everything configured the same way\n * or for example loggers that start with name model. It allows you to group loggers together\n * to have a certain loglevel and other settings. You can configure this when creating the\n * LoggerFactory (which accepts multiple LogGroupRules).\n */\nvar LogGroupRule = /** @class */ (function () {\n    /**\n     * Create a LogGroupRule. Basically you define what logger name(s) match for this group, what level should be used what logger type (where to log)\n     * and what format to write in. If the loggerType is custom, then the callBackLogger must be supplied as callback function to return a custom logger.\n     * @param regExp Regular expression, what matches for your logger names for this group\n     * @param level LogLevel\n     * @param logFormat LogFormat\n     * @param loggerType Type of logger, if Custom, make sure to implement callBackLogger and pass in, this will be called so you can return your own logger.\n     * @param callBackLogger Callback function to return a new clean custom logger (yours!)\n     */\n    function LogGroupRule(regExp, level, logFormat, loggerType, callBackLogger) {\n        if (logFormat === void 0) { logFormat = new LoggerOptions_1.LogFormat(); }\n        if (loggerType === void 0) { loggerType = LoggerOptions_1.LoggerType.Console; }\n        if (callBackLogger === void 0) { callBackLogger = null; }\n        this._formatterLogMessage = null;\n        this._regExp = regExp;\n        this._level = level;\n        this._logFormat = logFormat;\n        this._loggerType = loggerType;\n        this._callBackLogger = callBackLogger;\n    }\n    Object.defineProperty(LogGroupRule.prototype, \"regExp\", {\n        get: function () {\n            return this._regExp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRule.prototype, \"level\", {\n        get: function () {\n            return this._level;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRule.prototype, \"loggerType\", {\n        get: function () {\n            return this._loggerType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRule.prototype, \"logFormat\", {\n        get: function () {\n            return this._logFormat;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRule.prototype, \"callBackLogger\", {\n        get: function () {\n            return this._callBackLogger;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRule.prototype, \"formatterLogMessage\", {\n        /**\n         * Get the formatterLogMessage function, see comment on the setter.\n         * @returns {((message:LogMessage)=>string)|null}\n         */\n        get: function () {\n            return this._formatterLogMessage;\n        },\n        /**\n         * Set the default formatterLogMessage function, if set it is applied to all type of loggers except for a custom logger.\n         * By default this is null (not set). You can assign a function to allow custom formatting of a log message.\n         * Each log message will call this function then and expects your function to format the message and return a string.\n         * Will throw an error if you attempt to set a formatterLogMessage if the LoggerType is custom.\n         * @param value The formatter function, or null to reset it.\n         */\n        set: function (value) {\n            if (value !== null && this._loggerType === LoggerOptions_1.LoggerType.Custom) {\n                throw new Error(\"You cannot specify a formatter for log messages if your loggerType is Custom\");\n            }\n            this._formatterLogMessage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return LogGroupRule;\n}());\nexports.LogGroupRule = LogGroupRule;\n//# sourceMappingURL=LogGroupRule.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogGroupRuntimeSettings = void 0;\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\n/**\n * Represents the runtime settings for a LogGroup (LogGroupRule).\n */\nvar LogGroupRuntimeSettings = /** @class */ (function () {\n    function LogGroupRuntimeSettings(logGroupRule) {\n        this._formatterLogMessage = null;\n        this._logGroupRule = logGroupRule;\n        this._level = logGroupRule.level;\n        this._loggerType = logGroupRule.loggerType;\n        this._logFormat = new LoggerOptions_1.LogFormat(new LoggerOptions_1.DateFormat(logGroupRule.logFormat.dateFormat.formatEnum, logGroupRule.logFormat.dateFormat.dateSeparator), logGroupRule.logFormat.showTimeStamp, logGroupRule.logFormat.showLoggerName);\n        this._callBackLogger = logGroupRule.callBackLogger;\n        this._formatterLogMessage = logGroupRule.formatterLogMessage;\n    }\n    Object.defineProperty(LogGroupRuntimeSettings.prototype, \"logGroupRule\", {\n        /**\n         * Returns original LogGroupRule (so not runtime settings!)\n         * @return {LogGroupRule}\n         */\n        get: function () {\n            return this._logGroupRule;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRuntimeSettings.prototype, \"level\", {\n        get: function () {\n            return this._level;\n        },\n        set: function (value) {\n            this._level = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRuntimeSettings.prototype, \"loggerType\", {\n        get: function () {\n            return this._loggerType;\n        },\n        set: function (value) {\n            this._loggerType = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRuntimeSettings.prototype, \"logFormat\", {\n        get: function () {\n            return this._logFormat;\n        },\n        set: function (value) {\n            this._logFormat = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRuntimeSettings.prototype, \"callBackLogger\", {\n        get: function () {\n            return this._callBackLogger;\n        },\n        set: function (value) {\n            this._callBackLogger = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogGroupRuntimeSettings.prototype, \"formatterLogMessage\", {\n        get: function () {\n            return this._formatterLogMessage;\n        },\n        set: function (value) {\n            this._formatterLogMessage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return LogGroupRuntimeSettings;\n}());\nexports.LogGroupRuntimeSettings = LogGroupRuntimeSettings;\n//# sourceMappingURL=LogGroupRuntimeSettings.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggerFactoryImpl = void 0;\nvar DataStructures_1 = require(\"../../utils/DataStructures\");\nvar LoggerOptions_1 = require(\"../LoggerOptions\");\nvar ConsoleLoggerImpl_1 = require(\"./ConsoleLoggerImpl\");\nvar MessageBufferLoggerImpl_1 = require(\"./MessageBufferLoggerImpl\");\nvar AbstractLogger_1 = require(\"./AbstractLogger\");\nvar LogGroupRuntimeSettings_1 = require(\"./LogGroupRuntimeSettings\");\nvar LoggerFactoryImpl = /** @class */ (function () {\n    function LoggerFactoryImpl(name, options) {\n        this._loggers = new DataStructures_1.SimpleMap();\n        this._logGroupRuntimeSettingsIndexed = [];\n        this._loggerToLogGroupSettings = new DataStructures_1.SimpleMap();\n        this._name = name;\n        this.configure(options);\n    }\n    LoggerFactoryImpl.prototype.configure = function (options) {\n        this._options = options;\n        // Close any current open loggers.\n        this.closeLoggers();\n        this._loggerToLogGroupSettings.clear();\n        this._logGroupRuntimeSettingsIndexed = [];\n        var logGroupRules = this._options.logGroupRules;\n        /* tslint:disable:prefer-for-of */\n        for (var i = 0; i < logGroupRules.length; i++) {\n            this._logGroupRuntimeSettingsIndexed.push(new LogGroupRuntimeSettings_1.LogGroupRuntimeSettings(logGroupRules[i]));\n        }\n        /* tslint:enable:prefer-for-of */\n    };\n    LoggerFactoryImpl.prototype.getLogger = function (named) {\n        if (!this._options.enabled) {\n            throw new Error(\"LoggerFactory is not enabled, please check your options passed in\");\n        }\n        var logger = this._loggers.get(named);\n        if (typeof logger !== \"undefined\") {\n            return logger;\n        }\n        // Initialize logger with appropriate level\n        logger = this.loadLogger(named);\n        this._loggers.put(named, logger);\n        return logger;\n    };\n    LoggerFactoryImpl.prototype.isEnabled = function () {\n        return this._options.enabled;\n    };\n    LoggerFactoryImpl.prototype.closeLoggers = function () {\n        this._loggers.forEachValue(function (logger) {\n            // We can only close if AbstractLogger is used (our loggers, but user loggers may not extend it, even though unlikely).\n            if (logger instanceof AbstractLogger_1.AbstractLogger) {\n                logger.close();\n            }\n        });\n        this._loggers.clear();\n    };\n    LoggerFactoryImpl.prototype.getName = function () {\n        return this._name;\n    };\n    LoggerFactoryImpl.prototype.getLogGroupRuntimeSettingsByIndex = function (idx) {\n        if (idx >= 0 && idx < this._logGroupRuntimeSettingsIndexed.length) {\n            return this._logGroupRuntimeSettingsIndexed[idx];\n        }\n        return null;\n    };\n    LoggerFactoryImpl.prototype.getLogGroupRuntimeSettingsByLoggerName = function (nameLogger) {\n        var result = this._loggerToLogGroupSettings.get(nameLogger);\n        if (typeof result === \"undefined\") {\n            return null;\n        }\n        return result;\n    };\n    LoggerFactoryImpl.prototype.getLogGroupRuntimeSettings = function () {\n        return this._logGroupRuntimeSettingsIndexed.slice(0);\n    };\n    LoggerFactoryImpl.prototype.loadLogger = function (named) {\n        var logGroupRules = this._options.logGroupRules;\n        for (var i = 0; i < logGroupRules.length; i++) {\n            var logGroupRule = logGroupRules[i];\n            if (logGroupRule.regExp.test(named)) {\n                var logGroupRuntimeSettings = this._logGroupRuntimeSettingsIndexed[i];\n                var logger = void 0;\n                switch (logGroupRule.loggerType) {\n                    case LoggerOptions_1.LoggerType.Console:\n                        logger = new ConsoleLoggerImpl_1.ConsoleLoggerImpl(named, logGroupRuntimeSettings);\n                        break;\n                    case LoggerOptions_1.LoggerType.MessageBuffer:\n                        logger = new MessageBufferLoggerImpl_1.MessageBufferLoggerImpl(named, logGroupRuntimeSettings);\n                        break;\n                    case LoggerOptions_1.LoggerType.Custom:\n                        if (logGroupRule.callBackLogger != null) {\n                            logger = logGroupRule.callBackLogger(named, logGroupRuntimeSettings);\n                        }\n                        else {\n                            throw new Error(\"Cannot create a custom logger, custom callback is null\");\n                        }\n                        break;\n                    default:\n                        throw new Error(\"Cannot create a Logger for LoggerType: \" + logGroupRule.loggerType);\n                }\n                // For a new logger map it by its name\n                this._loggerToLogGroupSettings.put(named, logGroupRuntimeSettings);\n                return logger;\n            }\n        }\n        throw new Error(\"Failed to find a match to create a Logger for: \" + named);\n    };\n    return LoggerFactoryImpl;\n}());\nexports.LoggerFactoryImpl = LoggerFactoryImpl;\n//# sourceMappingURL=LoggerFactoryImpl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggerFactoryOptions = void 0;\n/**\n * Options object you can use to configure the LoggerFactory you create at LFService.\n */\nvar LoggerFactoryOptions = /** @class */ (function () {\n    function LoggerFactoryOptions() {\n        this._logGroupRules = [];\n        this._enabled = true;\n    }\n    /**\n     * Add LogGroupRule, see {LogGroupRule) for details\n     * @param rule Rule to add\n     * @returns {LoggerFactoryOptions} returns itself\n     */\n    LoggerFactoryOptions.prototype.addLogGroupRule = function (rule) {\n        this._logGroupRules.push(rule);\n        return this;\n    };\n    /**\n     * Enable or disable logging completely for the LoggerFactory.\n     * @param enabled True for enabled (default)\n     * @returns {LoggerFactoryOptions} returns itself\n     */\n    LoggerFactoryOptions.prototype.setEnabled = function (enabled) {\n        this._enabled = enabled;\n        return this;\n    };\n    Object.defineProperty(LoggerFactoryOptions.prototype, \"logGroupRules\", {\n        get: function () {\n            return this._logGroupRules;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LoggerFactoryOptions.prototype, \"enabled\", {\n        get: function () {\n            return this._enabled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return LoggerFactoryOptions;\n}());\nexports.LoggerFactoryOptions = LoggerFactoryOptions;\n//# sourceMappingURL=LoggerFactoryOptions.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageBufferLoggerImpl = void 0;\nvar AbstractLogger_1 = require(\"./AbstractLogger\");\n/**\n * Logger which buffers all messages, use with care due to possible high memory footprint.\n * Can be convenient in some cases. Call toString() for full output, or cast to this class\n * and call getMessages() to do something with it yourself.\n */\nvar MessageBufferLoggerImpl = /** @class */ (function (_super) {\n    __extends(MessageBufferLoggerImpl, _super);\n    function MessageBufferLoggerImpl(name, logGroupRuntimeSettings) {\n        var _this = _super.call(this, name, logGroupRuntimeSettings) || this;\n        _this.messages = [];\n        return _this;\n    }\n    MessageBufferLoggerImpl.prototype.close = function () {\n        this.messages = [];\n        _super.prototype.close.call(this);\n    };\n    MessageBufferLoggerImpl.prototype.getMessages = function () {\n        return this.messages;\n    };\n    MessageBufferLoggerImpl.prototype.toString = function () {\n        return this.messages.map(function (msg) {\n            return msg;\n        }).join(\"\\n\");\n    };\n    MessageBufferLoggerImpl.prototype.doLog = function (message) {\n        var messageFormatter = this._getMessageFormatter();\n        var fullMsg;\n        if (messageFormatter === null) {\n            fullMsg = this.createDefaultLogMessage(message);\n        }\n        else {\n            fullMsg = messageFormatter(message);\n        }\n        this.messages.push(fullMsg);\n    };\n    return MessageBufferLoggerImpl;\n}(AbstractLogger_1.AbstractLogger));\nexports.MessageBufferLoggerImpl = MessageBufferLoggerImpl;\n//# sourceMappingURL=MessageBufferLoggerImpl.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCategoryControl = exports.getLogControl = exports.help = exports.MessageFormatUtils = exports.LinkedList = exports.SimpleMap = exports.LogLevel = exports.LoggerType = exports.LogFormat = exports.DateFormatEnum = exports.DateFormat = exports.CategoryLogFormat = exports.MessageBufferLoggerImpl = exports.ConsoleLoggerImpl = exports.AbstractLogger = exports.LFService = exports.LogGroupRule = exports.LoggerFactoryOptions = exports.CategoryServiceFactory = exports.CategoryMessageBufferLoggerImpl = exports.CategoryConfiguration = exports.CategoryRuntimeSettings = exports.Category = exports.CategoryDelegateLoggerImpl = exports.CategoryConsoleLoggerImpl = exports.AbstractCategoryLogger = exports.ExtensionHelper = void 0;\nvar LogGroupControl_1 = require(\"./control/LogGroupControl\");\nvar CategoryServiceControl_1 = require(\"./control/CategoryServiceControl\");\n// Public stuff we export for extension\n__exportStar(require(\"./extension/MessagesToExtensionJSON\"), exports);\n__exportStar(require(\"./extension/MessagesFromExtensionJSON\"), exports);\n__exportStar(require(\"./extension/ExtensionMessageJSON\"), exports);\nvar ExtensionHelper_1 = require(\"./extension/ExtensionHelper\");\nObject.defineProperty(exports, \"ExtensionHelper\", { enumerable: true, get: function () { return ExtensionHelper_1.ExtensionHelper; } });\n// Category related\nvar AbstractCategoryLogger_1 = require(\"./log/category/AbstractCategoryLogger\");\nObject.defineProperty(exports, \"AbstractCategoryLogger\", { enumerable: true, get: function () { return AbstractCategoryLogger_1.AbstractCategoryLogger; } });\nvar CategoryConsoleLoggerImpl_1 = require(\"./log/category/CategoryConsoleLoggerImpl\");\nObject.defineProperty(exports, \"CategoryConsoleLoggerImpl\", { enumerable: true, get: function () { return CategoryConsoleLoggerImpl_1.CategoryConsoleLoggerImpl; } });\nvar CategoryDelegateLoggerImpl_1 = require(\"./log/category/CategoryDelegateLoggerImpl\");\nObject.defineProperty(exports, \"CategoryDelegateLoggerImpl\", { enumerable: true, get: function () { return CategoryDelegateLoggerImpl_1.CategoryDelegateLoggerImpl; } });\nvar Category_1 = require(\"./log/category/Category\");\nObject.defineProperty(exports, \"Category\", { enumerable: true, get: function () { return Category_1.Category; } });\nvar CategoryRuntimeSettings_1 = require(\"./log/category/CategoryRuntimeSettings\");\nObject.defineProperty(exports, \"CategoryRuntimeSettings\", { enumerable: true, get: function () { return CategoryRuntimeSettings_1.CategoryRuntimeSettings; } });\nvar CategoryConfiguration_1 = require(\"./log/category/CategoryConfiguration\");\nObject.defineProperty(exports, \"CategoryConfiguration\", { enumerable: true, get: function () { return CategoryConfiguration_1.CategoryConfiguration; } });\nvar CategoryMessageBufferImpl_1 = require(\"./log/category/CategoryMessageBufferImpl\");\nObject.defineProperty(exports, \"CategoryMessageBufferLoggerImpl\", { enumerable: true, get: function () { return CategoryMessageBufferImpl_1.CategoryMessageBufferLoggerImpl; } });\nvar CategoryServiceFactory_1 = require(\"./log/category/CategoryServiceFactory\");\nObject.defineProperty(exports, \"CategoryServiceFactory\", { enumerable: true, get: function () { return CategoryServiceFactory_1.CategoryServiceFactory; } });\nvar LoggerFactoryOptions_1 = require(\"./log/standard/LoggerFactoryOptions\");\nObject.defineProperty(exports, \"LoggerFactoryOptions\", { enumerable: true, get: function () { return LoggerFactoryOptions_1.LoggerFactoryOptions; } });\nvar LogGroupRule_1 = require(\"./log/standard/LogGroupRule\");\nObject.defineProperty(exports, \"LogGroupRule\", { enumerable: true, get: function () { return LogGroupRule_1.LogGroupRule; } });\nvar LFService_1 = require(\"./log/standard/LFService\");\nObject.defineProperty(exports, \"LFService\", { enumerable: true, get: function () { return LFService_1.LFService; } });\nvar AbstractLogger_1 = require(\"./log/standard/AbstractLogger\");\nObject.defineProperty(exports, \"AbstractLogger\", { enumerable: true, get: function () { return AbstractLogger_1.AbstractLogger; } });\nvar ConsoleLoggerImpl_1 = require(\"./log/standard/ConsoleLoggerImpl\");\nObject.defineProperty(exports, \"ConsoleLoggerImpl\", { enumerable: true, get: function () { return ConsoleLoggerImpl_1.ConsoleLoggerImpl; } });\nvar MessageBufferLoggerImpl_1 = require(\"./log/standard/MessageBufferLoggerImpl\");\nObject.defineProperty(exports, \"MessageBufferLoggerImpl\", { enumerable: true, get: function () { return MessageBufferLoggerImpl_1.MessageBufferLoggerImpl; } });\nvar LoggerOptions_1 = require(\"./log/LoggerOptions\");\nObject.defineProperty(exports, \"CategoryLogFormat\", { enumerable: true, get: function () { return LoggerOptions_1.CategoryLogFormat; } });\nObject.defineProperty(exports, \"DateFormat\", { enumerable: true, get: function () { return LoggerOptions_1.DateFormat; } });\nObject.defineProperty(exports, \"DateFormatEnum\", { enumerable: true, get: function () { return LoggerOptions_1.DateFormatEnum; } });\nObject.defineProperty(exports, \"LogFormat\", { enumerable: true, get: function () { return LoggerOptions_1.LogFormat; } });\nObject.defineProperty(exports, \"LoggerType\", { enumerable: true, get: function () { return LoggerOptions_1.LoggerType; } });\nObject.defineProperty(exports, \"LogLevel\", { enumerable: true, get: function () { return LoggerOptions_1.LogLevel; } });\n// Utilities\nvar DataStructures_1 = require(\"./utils/DataStructures\");\nObject.defineProperty(exports, \"SimpleMap\", { enumerable: true, get: function () { return DataStructures_1.SimpleMap; } });\nObject.defineProperty(exports, \"LinkedList\", { enumerable: true, get: function () { return DataStructures_1.LinkedList; } });\n__exportStar(require(\"./utils/JSONHelper\"), exports);\nvar MessageUtils_1 = require(\"./utils/MessageUtils\");\nObject.defineProperty(exports, \"MessageFormatUtils\", { enumerable: true, get: function () { return MessageUtils_1.MessageFormatUtils; } });\n/*\n Functions to export on TSL libarary var.\n*/\n// Export help function\nfunction help() {\n    /* tslint:disable:no-console */\n    console.log(\"help()\\n   ** Shows this help\\n\\n getLogControl(): LoggerControl\\n   ** Returns LoggerControl Object, use to dynamically change loglevels for log4j logging.\\n   ** Call .help() on LoggerControl object for available options.\\n\\n getCategoryControl(): CategoryServiceControl\\n   ** Returns CategoryServiceControl Object, use to dynamically change loglevels for category logging.\\n   ** Call .help() on CategoryServiceControl object for available options.\\n\");\n    /* tslint:enable:no-console */\n}\nexports.help = help;\n// Export LogControl function (log4j)\nfunction getLogControl() {\n    return new LogGroupControl_1.LoggerControlImpl();\n}\nexports.getLogControl = getLogControl;\n// Export CategoryControl function\nfunction getCategoryControl() {\n    return new CategoryServiceControl_1.CategoryServiceControlImpl();\n}\nexports.getCategoryControl = getCategoryControl;\n//# sourceMappingURL=typescript-logging.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringBuilder = exports.TuplePair = exports.SimpleMap = exports.LinkedList = void 0;\nvar LinkedNode = /** @class */ (function () {\n    function LinkedNode(value) {\n        this._previous = null;\n        this._next = null;\n        this._value = value;\n    }\n    Object.defineProperty(LinkedNode.prototype, \"previous\", {\n        get: function () {\n            return this._previous;\n        },\n        set: function (value) {\n            this._previous = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LinkedNode.prototype, \"next\", {\n        get: function () {\n            return this._next;\n        },\n        set: function (value) {\n            this._next = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LinkedNode.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return LinkedNode;\n}());\n/**\n * Double linkedlist implementation.\n */\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this.head = null;\n        this.size = 0;\n    }\n    LinkedList.prototype.addHead = function (value) {\n        if (!this.createHeadIfNeeded(value)) {\n            if (this.head != null) {\n                var nextNode = this.head.next;\n                var newHeadNode = new LinkedNode(value);\n                if (nextNode != null) {\n                    nextNode.previous = newHeadNode;\n                    newHeadNode.next = nextNode;\n                }\n                this.head = newHeadNode;\n            }\n            else {\n                throw new Error(\"This should never happen, list implementation broken\");\n            }\n        }\n        this.size++;\n    };\n    LinkedList.prototype.addTail = function (value) {\n        if (!this.createHeadIfNeeded(value)) {\n            var oldTailNode = this.getTailNode();\n            if (oldTailNode != null) {\n                var newTailNode = new LinkedNode(value);\n                oldTailNode.next = newTailNode;\n                newTailNode.previous = oldTailNode;\n            }\n            else {\n                throw new Error(\"List implementation broken\");\n            }\n        }\n        this.size++;\n    };\n    LinkedList.prototype.clear = function () {\n        this.head = null;\n        this.size = 0;\n    };\n    LinkedList.prototype.getHead = function () {\n        if (this.head != null) {\n            return this.head.value;\n        }\n        return null;\n    };\n    LinkedList.prototype.removeHead = function () {\n        if (this.head != null) {\n            var oldHead = this.head;\n            var value = oldHead.value;\n            this.head = oldHead.next;\n            this.size--;\n            return value;\n        }\n        return null;\n    };\n    LinkedList.prototype.getTail = function () {\n        var node = this.getTailNode();\n        if (node != null) {\n            return node.value;\n        }\n        return null;\n    };\n    LinkedList.prototype.removeTail = function () {\n        var node = this.getTailNode();\n        if (node != null) {\n            if (node === this.head) {\n                this.head = null;\n            }\n            else {\n                var previousNode = node.previous;\n                if (previousNode != null) {\n                    previousNode.next = null;\n                }\n                else {\n                    throw new Error(\"List implementation is broken\");\n                }\n            }\n            this.size--;\n            return node.value;\n        }\n        return null;\n    };\n    LinkedList.prototype.getSize = function () {\n        return this.size;\n    };\n    LinkedList.prototype.filter = function (f) {\n        var recurse = function (fn, node, values) {\n            if (fn(node.value)) {\n                values.push(node.value);\n            }\n            var nextNode = node.next;\n            if (nextNode != null) {\n                recurse(fn, nextNode, values);\n            }\n        };\n        var result = [];\n        var currentNode = this.head;\n        if (currentNode != null) {\n            recurse(f, currentNode, result);\n        }\n        return result;\n    };\n    LinkedList.prototype.createHeadIfNeeded = function (value) {\n        if (this.head == null) {\n            this.head = new LinkedNode(value);\n            return true;\n        }\n        return false;\n    };\n    LinkedList.prototype.getTailNode = function () {\n        if (this.head == null) {\n            return null;\n        }\n        var node = this.head;\n        while (node.next != null) {\n            node = node.next;\n        }\n        return node;\n    };\n    return LinkedList;\n}());\nexports.LinkedList = LinkedList;\n/**\n * Map implementation keyed by string (always).\n */\nvar SimpleMap = /** @class */ (function () {\n    function SimpleMap() {\n        this.array = {};\n    }\n    SimpleMap.prototype.put = function (key, value) {\n        this.array[key] = value;\n    };\n    SimpleMap.prototype.get = function (key) {\n        return this.array[key];\n    };\n    SimpleMap.prototype.exists = function (key) {\n        var value = this.array[key];\n        return (typeof value !== \"undefined\");\n    };\n    SimpleMap.prototype.remove = function (key) {\n        var value = this.array[key];\n        if (typeof value !== \"undefined\") {\n            delete this.array[key];\n        }\n        return value;\n    };\n    SimpleMap.prototype.keys = function () {\n        var keys = [];\n        for (var key in this.array) {\n            // To prevent random stuff to appear\n            if (this.array.hasOwnProperty(key)) {\n                keys.push(key);\n            }\n        }\n        return keys;\n    };\n    SimpleMap.prototype.values = function () {\n        var values = [];\n        for (var key in this.array) {\n            // To prevent random stuff to appear\n            if (this.array.hasOwnProperty(key)) {\n                values.push(this.get(key));\n            }\n        }\n        return values;\n    };\n    SimpleMap.prototype.size = function () {\n        return this.keys().length;\n    };\n    SimpleMap.prototype.isEmpty = function () {\n        return this.size() === 0;\n    };\n    SimpleMap.prototype.clear = function () {\n        this.array = {};\n    };\n    SimpleMap.prototype.forEach = function (cbFunction) {\n        var count = 0;\n        for (var key in this.array) {\n            // To prevent random stuff to appear\n            if (this.array.hasOwnProperty(key)) {\n                var value = this.array[key];\n                cbFunction(key, value, count);\n                count++;\n            }\n        }\n    };\n    SimpleMap.prototype.forEachValue = function (cbFunction) {\n        var count = 0;\n        for (var key in this.array) {\n            // To prevent random stuff to appear\n            if (this.array.hasOwnProperty(key)) {\n                var value = this.array[key];\n                cbFunction(value, count);\n                count++;\n            }\n        }\n    };\n    return SimpleMap;\n}());\nexports.SimpleMap = SimpleMap;\n/**\n * Tuple to hold two values.\n */\nvar TuplePair = /** @class */ (function () {\n    function TuplePair(x, y) {\n        this._x = x;\n        this._y = y;\n    }\n    Object.defineProperty(TuplePair.prototype, \"x\", {\n        get: function () {\n            return this._x;\n        },\n        set: function (value) {\n            this._x = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TuplePair.prototype, \"y\", {\n        get: function () {\n            return this._y;\n        },\n        set: function (value) {\n            this._y = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TuplePair;\n}());\nexports.TuplePair = TuplePair;\n/**\n * Utility class to build up a string.\n */\nvar StringBuilder = /** @class */ (function () {\n    function StringBuilder() {\n        this.data = [];\n    }\n    StringBuilder.prototype.append = function (line) {\n        if (line === undefined || line == null) {\n            throw new Error(\"String must be set, cannot append null or undefined\");\n        }\n        this.data.push(line);\n        return this;\n    };\n    StringBuilder.prototype.appendLine = function (line) {\n        this.data.push(line + \"\\n\");\n        return this;\n    };\n    StringBuilder.prototype.isEmpty = function () {\n        return this.data.length === 0;\n    };\n    StringBuilder.prototype.clear = function () {\n        this.data = [];\n    };\n    StringBuilder.prototype.toString = function (separator) {\n        if (separator === void 0) { separator = \"\"; }\n        return this.data.join(separator);\n    };\n    return StringBuilder;\n}());\nexports.StringBuilder = StringBuilder;\n//# sourceMappingURL=DataStructures.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONHelper = exports.JSONArray = exports.JSONObject = void 0;\n/**\n * Module containing bunch of JSON related stuff.\n */\nvar LoggerOptions_1 = require(\"../log/LoggerOptions\");\nvar DataStructures_1 = require(\"./DataStructures\");\nvar JSONTypeImpl = /** @class */ (function () {\n    function JSONTypeImpl(value) {\n        this._value = value;\n    }\n    JSONTypeImpl.prototype.getValue = function () {\n        return this._value;\n    };\n    return JSONTypeImpl;\n}());\nvar JSONBooleanType = /** @class */ (function (_super) {\n    __extends(JSONBooleanType, _super);\n    function JSONBooleanType(value) {\n        return _super.call(this, value) || this;\n    }\n    return JSONBooleanType;\n}(JSONTypeImpl));\nvar JSONNumberType = /** @class */ (function (_super) {\n    __extends(JSONNumberType, _super);\n    function JSONNumberType(value) {\n        return _super.call(this, value) || this;\n    }\n    return JSONNumberType;\n}(JSONTypeImpl));\nvar JSONStringType = /** @class */ (function (_super) {\n    __extends(JSONStringType, _super);\n    function JSONStringType(value) {\n        return _super.call(this, value) || this;\n    }\n    JSONStringType.prototype.toString = function () {\n        var value = this.getValue();\n        if (value != null) {\n            return JSON.stringify(value.toString());\n        }\n        return \"null\";\n    };\n    return JSONStringType;\n}(JSONTypeImpl));\nvar JSONObjectType = /** @class */ (function (_super) {\n    __extends(JSONObjectType, _super);\n    function JSONObjectType(value) {\n        return _super.call(this, value) || this;\n    }\n    return JSONObjectType;\n}(JSONTypeImpl));\nvar JSONArrayType = /** @class */ (function (_super) {\n    __extends(JSONArrayType, _super);\n    function JSONArrayType(value) {\n        return _super.call(this, value) || this;\n    }\n    JSONArrayType.prototype.toString = function () {\n        var value = this.getValue();\n        if (value != null) {\n            return value.toString();\n        }\n        return \"null\";\n    };\n    return JSONArrayType;\n}(JSONTypeImpl));\nvar JSONNullType = /** @class */ (function (_super) {\n    __extends(JSONNullType, _super);\n    function JSONNullType() {\n        return _super.call(this, null) || this;\n    }\n    JSONNullType.prototype.toString = function () {\n        return \"null\";\n    };\n    return JSONNullType;\n}(JSONTypeImpl));\nvar JSONTypeConverter = /** @class */ (function () {\n    function JSONTypeConverter() {\n    }\n    JSONTypeConverter.toJSONType = function (value) {\n        if (value === null) {\n            return new JSONNullType();\n        }\n        if (typeof value === \"string\") {\n            return new JSONStringType(value);\n        }\n        if (typeof value === \"number\") {\n            return new JSONNumberType(value);\n        }\n        if (typeof value === \"boolean\") {\n            return new JSONBooleanType(value);\n        }\n        if (value instanceof JSONObject) {\n            return new JSONObjectType(value);\n        }\n        throw new Error(\"Type not supported for value: \" + value);\n    };\n    return JSONTypeConverter;\n}());\nvar JSONObject = /** @class */ (function () {\n    function JSONObject() {\n        this.values = new DataStructures_1.SimpleMap();\n    }\n    JSONObject.prototype.addBoolean = function (name, value) {\n        this.checkName(name);\n        JSONObject.checkValue(value);\n        this.values.put(name, new JSONBooleanType(value));\n        return this;\n    };\n    JSONObject.prototype.addNumber = function (name, value) {\n        this.checkName(name);\n        JSONObject.checkValue(value);\n        this.values.put(name, new JSONNumberType(value));\n        return this;\n    };\n    JSONObject.prototype.addString = function (name, value) {\n        this.checkName(name);\n        JSONObject.checkValue(value);\n        this.values.put(name, new JSONStringType(value));\n        return this;\n    };\n    JSONObject.prototype.addNull = function (name) {\n        this.checkName(name);\n        this.values.put(name, new JSONNullType());\n        return this;\n    };\n    JSONObject.prototype.addArray = function (name, array) {\n        this.checkName(name);\n        JSONObject.checkValue(array);\n        if (array == null) {\n            throw new Error(\"Cannot add array as null\");\n        }\n        this.values.put(name, new JSONArrayType(array));\n        return this;\n    };\n    JSONObject.prototype.addObject = function (name, object) {\n        this.checkName(name);\n        JSONObject.checkValue(object);\n        if (object == null) {\n            throw new Error(\"Cannot add object as null\");\n        }\n        this.values.put(name, new JSONObjectType(object));\n        return this;\n    };\n    JSONObject.prototype.toString = function (pretty) {\n        var _this = this;\n        if (pretty === void 0) { pretty = false; }\n        var comma = false;\n        var buffer = new DataStructures_1.StringBuilder();\n        buffer.append(\"{\");\n        this.values.keys().forEach(function (key) {\n            var value = _this.values.get(key);\n            if (value != null) {\n                if (comma) {\n                    buffer.append(\",\");\n                }\n                buffer.append('\"').append(key).append('\":').append(value.toString());\n                comma = true;\n            }\n        });\n        buffer.append(\"}\");\n        return buffer.toString();\n    };\n    JSONObject.prototype.checkName = function (name) {\n        if (name == null || name === undefined) {\n            throw new Error(\"Name is null or undefined\");\n        }\n        if (this.values.exists(name)) {\n            throw new Error(\"Name \" + name + \" is already present for this object\");\n        }\n    };\n    JSONObject.checkValue = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Value is undefined\");\n        }\n    };\n    return JSONObject;\n}());\nexports.JSONObject = JSONObject;\nvar JSONArray = /** @class */ (function () {\n    function JSONArray() {\n        this.objects = [];\n    }\n    JSONArray.prototype.add = function (object) {\n        if (object === undefined) {\n            throw new Error(\"Object is not allowed to be undefined\");\n        }\n        this.objects.push(JSONTypeConverter.toJSONType(object));\n        return this;\n    };\n    JSONArray.prototype.toString = function (pretty) {\n        if (pretty === void 0) { pretty = false; }\n        var buffer = new DataStructures_1.StringBuilder();\n        buffer.append(\"[\");\n        this.objects.forEach(function (value, index) {\n            if (index > 0) {\n                buffer.append(\",\");\n            }\n            buffer.append(value.toString());\n        });\n        buffer.append(\"]\");\n        return buffer.toString();\n    };\n    return JSONArray;\n}());\nexports.JSONArray = JSONArray;\n/**\n * Utility class that helps us convert things to and from json (not for normal usage).\n */\nvar JSONHelper = /** @class */ (function () {\n    function JSONHelper() {\n    }\n    JSONHelper.categoryToJSON = function (cat, recursive) {\n        /*\n         {\n         \"categories\":\n         [\n         { id=1,\n         name: \"x\",\n         parent: null,\n         logLevel: \"Error\"\n         },\n         { id=2,\n         name: \"y\",\n         parent: 1,\n         logLevel: \"Error\"\n         }\n         ]\n         }\n         */\n        var arr = new JSONArray();\n        JSONHelper._categoryToJSON(cat, arr, recursive);\n        var object = new JSONObject();\n        object.addArray(\"categories\", arr);\n        return object;\n    };\n    JSONHelper._categoryToJSON = function (cat, arr, recursive) {\n        var object = new JSONObject();\n        object.addNumber(\"id\", cat.id);\n        object.addString(\"name\", cat.name);\n        object.addString(\"logLevel\", LoggerOptions_1.LogLevel[cat.logLevel].toString());\n        if (cat.parent != null) {\n            object.addNumber(\"parent\", cat.parent.id);\n        }\n        else {\n            object.addNull(\"parent\");\n        }\n        arr.add(object);\n        if (recursive) {\n            cat.children.forEach(function (child) {\n                JSONHelper._categoryToJSON(child, arr, recursive);\n            });\n        }\n    };\n    return JSONHelper;\n}());\nexports.JSONHelper = JSONHelper;\n//# sourceMappingURL=JSONHelper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageFormatUtils = void 0;\nvar ST = require(\"stacktrace-js\");\nvar LoggerOptions_1 = require(\"../log/LoggerOptions\");\n/**\n * Some utilities to format messages.\n */\nvar MessageFormatUtils = /** @class */ (function () {\n    function MessageFormatUtils() {\n    }\n    /**\n     * Render given date in given DateFormat and return as String.\n     * @param date Date\n     * @param dateFormat Format\n     * @returns {string} Formatted date\n     */\n    MessageFormatUtils.renderDate = function (date, dateFormat) {\n        var lpad = function (value, chars, padWith) {\n            var howMany = chars - value.length;\n            if (howMany > 0) {\n                var res = \"\";\n                for (var i = 0; i < howMany; i++) {\n                    res += padWith;\n                }\n                res += value;\n                return res;\n            }\n            return value;\n        };\n        var fullYear = function (d) {\n            return lpad(d.getFullYear().toString(), 4, \"0\");\n        };\n        var month = function (d) {\n            return lpad((d.getMonth() + 1).toString(), 2, \"0\");\n        };\n        var day = function (d) {\n            return lpad(d.getDate().toString(), 2, \"0\");\n        };\n        var hours = function (d) {\n            return lpad(d.getHours().toString(), 2, \"0\");\n        };\n        var minutes = function (d) {\n            return lpad(d.getMinutes().toString(), 2, \"0\");\n        };\n        var seconds = function (d) {\n            return lpad(d.getSeconds().toString(), 2, \"0\");\n        };\n        var millis = function (d) {\n            return lpad(d.getMilliseconds().toString(), 3, \"0\");\n        };\n        var dateSeparator = dateFormat.dateSeparator;\n        var ds = \"\";\n        switch (dateFormat.formatEnum) {\n            case LoggerOptions_1.DateFormatEnum.Default:\n                // yyyy-mm-dd hh:mm:ss,m\n                ds = fullYear(date) + dateSeparator + month(date) + dateSeparator + day(date) + \" \" +\n                    hours(date) + \":\" + minutes(date) + \":\" + seconds(date) + \",\" + millis(date);\n                break;\n            case LoggerOptions_1.DateFormatEnum.YearMonthDayTime:\n                ds = fullYear(date) + dateSeparator + month(date) + dateSeparator + day(date) + \" \" +\n                    hours(date) + \":\" + minutes(date) + \":\" + seconds(date);\n                break;\n            case LoggerOptions_1.DateFormatEnum.YearDayMonthWithFullTime:\n                ds = fullYear(date) + dateSeparator + day(date) + dateSeparator + month(date) + \" \" +\n                    hours(date) + \":\" + minutes(date) + \":\" + seconds(date) + \",\" + millis(date);\n                break;\n            case LoggerOptions_1.DateFormatEnum.YearDayMonthTime:\n                ds = fullYear(date) + dateSeparator + day(date) + dateSeparator + month(date) + \" \" +\n                    hours(date) + \":\" + minutes(date) + \":\" + seconds(date);\n                break;\n            default:\n                throw new Error(\"Unsupported date format enum: \" + dateFormat.formatEnum);\n        }\n        return ds;\n    };\n    /**\n     * Renders given category log message in default format.\n     * @param msg Message to format\n     * @param addStack If true adds the stack to the output, otherwise skips it\n     * @returns {string} Formatted message\n     */\n    MessageFormatUtils.renderDefaultMessage = function (msg, addStack) {\n        var result = \"\";\n        var logFormat = msg.logFormat;\n        if (logFormat.showTimeStamp) {\n            result += MessageFormatUtils.renderDate(msg.date, logFormat.dateFormat) + \" \";\n        }\n        result += LoggerOptions_1.LogLevel[msg.level].toUpperCase();\n        if (msg.isResolvedErrorMessage) {\n            result += \" (resolved)\";\n        }\n        result += \" \";\n        if (logFormat.showCategoryName) {\n            result += \"[\";\n            msg.categories.forEach(function (value, idx) {\n                if (idx > 0) {\n                    result += \", \";\n                }\n                result += value.name;\n            });\n            result += \"]\";\n        }\n        // Get the normal string message first\n        var actualStringMsg = \"\";\n        var dataString = \"\";\n        var messageOrLogData = msg.message;\n        if (typeof messageOrLogData === \"string\") {\n            actualStringMsg = messageOrLogData;\n        }\n        else {\n            var logData = messageOrLogData;\n            actualStringMsg = logData.msg;\n            // We do have data?\n            if (logData.data) {\n                dataString = \" [data]: \" + (logData.ds ? logData.ds(logData.data) : JSON.stringify(logData.data));\n            }\n        }\n        result += \" \" + actualStringMsg + \"\" + dataString;\n        if (addStack && msg.errorAsStack !== null) {\n            result += \"\\n\" + msg.errorAsStack;\n        }\n        return result;\n    };\n    /**\n     * Renders given log4j log message in default format.\n     * @param msg Message to format\n     * @param addStack If true adds the stack to the output, otherwise skips it\n     * @returns {string} Formatted message\n     */\n    MessageFormatUtils.renderDefaultLog4jMessage = function (msg, addStack) {\n        var format = msg.logGroupRule.logFormat;\n        var result = \"\";\n        if (format.showTimeStamp) {\n            result += MessageFormatUtils.renderDate(msg.date, format.dateFormat) + \" \";\n        }\n        result += LoggerOptions_1.LogLevel[msg.level].toUpperCase() + \" \";\n        if (format.showLoggerName) {\n            result += \"[\" + msg.loggerName + \"]\";\n        }\n        // Get the normal string message first\n        var actualStringMsg = \"\";\n        var dataString = \"\";\n        if (typeof msg.message === \"string\") {\n            actualStringMsg = msg.message;\n        }\n        else {\n            var logData = msg.message;\n            actualStringMsg = logData.msg;\n            // We do have data?\n            if (logData.data) {\n                dataString = \" [data]: \" + (logData.ds ? logData.ds(logData.data) : JSON.stringify(logData.data));\n            }\n        }\n        result += \" \" + actualStringMsg + \"\" + dataString;\n        if (addStack && msg.errorAsStack !== null) {\n            result += \"\\n\" + msg.errorAsStack;\n        }\n        return result;\n    };\n    /**\n     * Render error as stack\n     * @param error Return error as Promise\n     * @returns {Promise<string>|Promise} Promise for stack\n     */\n    MessageFormatUtils.renderError = function (error) {\n        var result = error.name + \": \" + error.message + \"\\n@\";\n        return new Promise(function (resolve) {\n            // This one has a promise too\n            ST.fromError(error, { offline: true }).then(function (frames) {\n                var stackStr = (frames.map(function (frame) {\n                    return frame.toString();\n                })).join(\"\\n  \");\n                result += \"\\n\" + stackStr;\n                // This resolves our returned promise\n                resolve(result);\n            }).catch(function () {\n                result = \"Unexpected error object was passed in. \";\n                try {\n                    result += \"Could not resolve it, stringified object: \" + JSON.stringify(error);\n                }\n                catch (e) {\n                    // Cannot stringify can only tell something was wrong.\n                    result += \"Could not resolve it or stringify it.\";\n                }\n                resolve(result);\n            });\n        });\n    };\n    return MessageFormatUtils;\n}());\nexports.MessageFormatUtils = MessageFormatUtils;\n//# sourceMappingURL=MessageUtils.js.map","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    function _map(array, fn, thisArg) {\n        if (typeof Array.prototype.map === 'function') {\n            return array.map(fn, thisArg);\n        } else {\n            var output = new Array(array.length);\n            for (var i = 0; i < array.length; i++) {\n                output[i] = fn.call(thisArg, array[i]);\n            }\n            return output;\n        }\n    }\n\n    function _filter(array, fn, thisArg) {\n        if (typeof Array.prototype.filter === 'function') {\n            return array.filter(fn, thisArg);\n        } else {\n            var output = [];\n            for (var i = 0; i < array.length; i++) {\n                if (fn.call(thisArg, array[i])) {\n                    output.push(array[i]);\n                }\n            }\n            return output;\n        }\n    }\n\n    function _indexOf(array, target) {\n        if (typeof Array.prototype.indexOf === 'function') {\n            return array.indexOf(target);\n        } else {\n            for (var i = 0; i < array.length; i++) {\n                if (array[i] === target) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = _filter(error.stack.split('\\n'), function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return _map(filtered, function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = _indexOf(['eval', '<anonymous>'], locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = _filter(error.stack.split('\\n'), function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return _map(filtered, function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame(line);\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n                    return new StackFrame(functionName,\n                        undefined,\n                        locationParts[0],\n                        locationParts[1],\n                        locationParts[2],\n                        line);\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame(\n                            match[3] || undefined,\n                            undefined,\n                            match[2],\n                            match[1],\n                            undefined,\n                            lines[i]\n                        )\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = _filter(error.stack.split('\\n'), function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return _map(filtered, function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n                return new StackFrame(\n                    functionName,\n                    args,\n                    locationParts[0],\n                    locationParts[1],\n                    locationParts[2],\n                    line);\n            }, this);\n        }\n    };\n}));\n\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = util.toSetString(aStr);\n  var isDuplicate = has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    this._set[sStr] = idx;\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  var sStr = util.toSetString(aStr);\n  return has.call(this._set, sStr);\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  var sStr = util.toSetString(aStr);\n  if (has.call(this._set, sStr)) {\n    return this._set[sStr];\n  }\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are removed from this array, by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var shiftNextLine = function() {\n      var lineContents = remainingLines.shift();\n      // The last line of a file might not have a newline.\n      var newLine = remainingLines.shift() || \"\";\n      return lineContents + newLine;\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[0];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[0] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[0];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLines.length > 0) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function (StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for(var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n        if (source !== undefined) {\n            this.setSource(source);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        getSource: function () {\n            return this.source;\n        },\n        setSource: function (v) {\n            this.source = String(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace-gps', ['source-map', 'stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map-consumer'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap || root.sourceMap, root.StackFrame);\n    }\n}(this, function(SourceMap, StackFrame) {\n    'use strict';\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param {String} url\n     * @returns {Promise} with response text if fulfilled\n     */\n    function _xdr(url) {\n        return new Promise(function(resolve, reject) {\n            var req = new XMLHttpRequest();\n            req.open('get', url);\n            req.onerror = reject;\n            req.onreadystatechange = function onreadystatechange() {\n                if (req.readyState === 4) {\n                    if (req.status >= 200 && req.status < 300) {\n                        resolve(req.responseText);\n                    } else {\n                        reject(new Error('HTTP status: ' + req.status + ' retrieving ' + url));\n                    }\n                }\n            };\n            req.send();\n        });\n\n    }\n\n    /**\n     * Convert a Base64-encoded string into its original representation.\n     * Used for inline sourcemaps.\n     *\n     * @param {String} b64str Base-64 encoded string\n     * @returns {String} original representation of the base64-encoded string.\n     */\n    function _atob(b64str) {\n        if (typeof window !== 'undefined' && window.atob) {\n            return window.atob(b64str);\n        } else {\n            throw new Error('You must supply a polyfill for window.atob in this environment');\n        }\n    }\n\n    function _parseJson(string) {\n        if (typeof JSON !== 'undefined' && JSON.parse) {\n            return JSON.parse(string);\n        } else {\n            throw new Error('You must supply a polyfill for JSON.parse in this environment');\n        }\n    }\n\n    function _findFunctionName(source, lineNumber/*, columnNumber*/) {\n        // function {name}({args}) m[1]=name m[2]=args\n        var reFunctionDeclaration = /function\\s+([^(]*?)\\s*\\(([^)]*)\\)/;\n        // {name} = function ({args}) TODO args capture\n        var reFunctionExpression = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/;\n        // {name} = eval()\n        var reFunctionEvaluation = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/;\n        var lines = source.split('\\n');\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '';\n        var maxLines = Math.min(lineNumber, 20);\n        var m;\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            var line = lines[lineNumber - i - 1];\n            var commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                m = reFunctionExpression.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionDeclaration.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionEvaluation.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' ||\n            stackframe.lineNumber % 1 !== 0 ||\n            stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' ||\n            stackframe.columnNumber % 1 !== 0 ||\n            stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var m = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)\\s*$/.exec(source);\n        if (m && m[1]) {\n            return m[1];\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _extractLocationInfoFromSourceMap(stackframe, rawSourceMap, sourceCache) {\n        return new Promise(function(resolve, reject) {\n            var mapConsumer = new SourceMap.SourceMapConsumer(rawSourceMap);\n\n            var loc = mapConsumer.originalPositionFor({\n                line: stackframe.lineNumber,\n                column: stackframe.columnNumber\n            });\n\n            if (loc.source) {\n                var mappedSource = mapConsumer.sourceContentFor(loc.source);\n                if (mappedSource) {\n                    sourceCache[loc.source] = mappedSource;\n                }\n                resolve(\n                    new StackFrame(\n                        loc.name || stackframe.functionName,\n                        stackframe.args,\n                        loc.source,\n                        loc.line,\n                        loc.column));\n            } else {\n                reject(new Error('Could not get original source for given stackframe and source map'));\n            }\n        });\n    }\n\n    /**\n     * @constructor\n     * @param {Object} opts\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     *      opts.ajax = Promise returning function to make X-Domain requests\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n\n        this.ajax = opts.ajax || _xdr;\n\n        this._atob = opts.atob || _atob;\n\n        this._get = function _get(location) {\n            return new Promise(function(resolve, reject) {\n                var isDataUrl = location.substr(0, 5) === 'data:';\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline && !isDataUrl) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    if (isDataUrl) {\n                        // data URLs can have parameters.\n                        // see http://tools.ietf.org/html/rfc2397\n                        var supportedEncodingRegexp =\n                            /^data:application\\/json;([\\w=:\"-]+;)*base64,/;\n                        var match = location.match(supportedEncodingRegexp);\n                        if (match) {\n                            var sourceMapStart = match[0].length;\n                            var encodedSource = location.substr(sourceMapStart);\n                            var source = this._atob(encodedSource);\n                            this.sourceCache[location] = source;\n                            resolve(source);\n                        } else {\n                            reject(new Error('The encoding of the inline sourcemap is not supported'));\n                        }\n                    } else {\n                        var xhrPromise = this.ajax(location, {method: 'get'});\n                        // Cache the Promise to prevent duplicate in-flight requests\n                        this.sourceCache[location] = xhrPromise;\n                        xhrPromise.then(resolve, reject);\n                    }\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param {StackFrame} stackframe object\n         * @returns {Promise} that resolves with with source-mapped StackFrame\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return new Promise(function(resolve, reject) {\n                this.getMappedLocation(stackframe).then(function(mappedStackFrame) {\n                    function resolveMappedStackFrame() {\n                        resolve(mappedStackFrame);\n                    }\n\n                    this.findFunctionName(mappedStackFrame)\n                        .then(resolve, resolveMappedStackFrame)\n                        ['catch'](resolveMappedStackFrame);\n                }.bind(this), reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var lineNumber = stackframe.lineNumber;\n                    var columnNumber = stackframe.columnNumber;\n                    var guessedFunctionName = _findFunctionName(source, lineNumber, columnNumber);\n                    // Only replace functionName if we found something\n                    if (guessedFunctionName) {\n                        resolve(new StackFrame(guessedFunctionName,\n                            stackframe.args,\n                            stackframe.fileName,\n                            lineNumber,\n                            columnNumber));\n                    } else {\n                        resolve(stackframe);\n                    }\n                }, reject)['catch'](reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                var sourceCache = this.sourceCache;\n                var fileName = stackframe.fileName;\n                this._get(fileName).then(function(source) {\n                    var sourceMappingURL = _findSourceMappingURL(source);\n                    var isDataUrl = sourceMappingURL.substr(0, 5) === 'data:';\n                    var base = fileName.substring(0, fileName.lastIndexOf('/') + 1);\n\n                    if (sourceMappingURL[0] !== '/' && !isDataUrl && !(/^https?:\\/\\/|^\\/\\//i).test(sourceMappingURL)) {\n                        sourceMappingURL = base + sourceMappingURL;\n                    }\n\n                    this._get(sourceMappingURL).then(function(sourceMap) {\n                        if (typeof sourceMap === 'string') {\n                            sourceMap = _parseJson(sourceMap.replace(/^\\)\\]\\}'/, ''));\n                        }\n                        if (typeof sourceMap.sourceRoot === 'undefined') {\n                            sourceMap.sourceRoot = base;\n                        }\n\n                        _extractLocationInfoFromSourceMap(stackframe, sourceMap, sourceCache)\n                            .then(resolve)['catch'](function() {\n                            resolve(stackframe);\n                        });\n                    }, reject)['catch'](reject);\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace', ['error-stack-parser', 'stack-generator', 'stacktrace-gps'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'));\n    } else {\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS);\n    }\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS) {\n    var _options = {\n        filter: function(stackframe) {\n            // Filter out stackframes for this library by default\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\n        },\n        sourceCache: {}\n    };\n\n    var _generateError = function StackTrace$$GenerateError() {\n        try {\n            // Error must be thrown to get stack in IE\n            throw new Error();\n        } catch (err) {\n            return err;\n        }\n    };\n\n    /**\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\n     * Does not do deep merges.\n     *\n     * @param {Object} first base object\n     * @param {Object} second overrides\n     * @returns {Object} merged first and second\n     * @private\n     */\n    function _merge(first, second) {\n        var target = {};\n\n        [first, second].forEach(function(obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    target[prop] = obj[prop];\n                }\n            }\n            return target;\n        });\n\n        return target;\n    }\n\n    function _isShapedLikeParsableError(err) {\n        return err.stack || err['opera#sourceloc'];\n    }\n\n    function _filtered(stackframes, filter) {\n        if (typeof filter === 'function') {\n            return stackframes.filter(filter);\n        }\n        return stackframes;\n    }\n\n    return {\n        /**\n         * Get a backtrace from invocation point.\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        get: function StackTrace$$get(opts) {\n            var err = _generateError();\n            return _isShapedLikeParsableError(err) ? this.fromError(err, opts) : this.generateArtificially(opts);\n        },\n\n        /**\n         * Get a backtrace from invocation point.\n         * IMPORTANT: Does not handle source maps or guess function names!\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        getSync: function StackTrace$$getSync(opts) {\n            opts = _merge(_options, opts);\n            var err = _generateError();\n            var stack = _isShapedLikeParsableError(err) ? ErrorStackParser.parse(err) : StackGenerator.backtrace(opts);\n            return _filtered(stack, opts.filter);\n        },\n\n        /**\n         * Given an error object, parse it.\n         *\n         * @param {Error} error object\n         * @param {Object} opts\n         * @returns {Promise} for Array[StackFrame}\n         */\n        fromError: function StackTrace$$fromError(error, opts) {\n            opts = _merge(_options, opts);\n            var gps = new StackTraceGPS(opts);\n            return new Promise(function(resolve) {\n                var stackframes = _filtered(ErrorStackParser.parse(error), opts.filter);\n                resolve(Promise.all(stackframes.map(function(sf) {\n                    return new Promise(function(resolve) {\n                        function resolveOriginal() {\n                            resolve(sf);\n                        }\n\n                        gps.pinpoint(sf).then(resolve, resolveOriginal)['catch'](resolveOriginal);\n                    });\n                })));\n            }.bind(this));\n        },\n\n        /**\n         * Use StackGenerator to generate a backtrace.\n         *\n         * @param {Object} opts\n         * @returns {Promise} of Array[StackFrame]\n         */\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\n            opts = _merge(_options, opts);\n            var stackFrames = StackGenerator.backtrace(opts);\n            if (typeof opts.filter === 'function') {\n                stackFrames = stackFrames.filter(opts.filter);\n            }\n            return Promise.resolve(stackFrames);\n        },\n\n        /**\n         * Given a function, wrap it such that invocations trigger a callback that\n         * is called with a stack trace.\n         *\n         * @param {Function} fn to be instrumented\n         * @param {Function} callback function to call with a stack trace on invocation\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\n         * @param {Object} thisArg optional context object (e.g. window)\n         */\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                // Already instrumented, return given Function\n                return fn;\n            }\n\n            var instrumented = function StackTrace$$instrumented() {\n                try {\n                    this.get().then(callback, errback)['catch'](errback);\n                    return fn.apply(thisArg || this, arguments);\n                } catch (e) {\n                    if (_isShapedLikeParsableError(e)) {\n                        this.fromError(e).then(callback, errback)['catch'](errback);\n                    }\n                    throw e;\n                }\n            }.bind(this);\n            instrumented.__stacktraceOriginalFn = fn;\n\n            return instrumented;\n        },\n\n        /**\n         * Given a function that has been instrumented,\n         * revert the function to it's original (non-instrumented) state.\n         *\n         * @param {Function} fn to de-instrument\n         */\n        deinstrument: function StackTrace$$deinstrument(fn) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot de-instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                return fn.__stacktraceOriginalFn;\n            } else {\n                // Function not instrumented, return original\n                return fn;\n            }\n        },\n\n        /**\n         * Given an error message and Array of StackFrames, serialize and POST to given URL.\n         *\n         * @param {Array} stackframes\n         * @param {String} url\n         * @param {String} errorMsg\n         */\n        report: function StackTrace$$report(stackframes, url, errorMsg) {\n            return new Promise(function(resolve, reject) {\n                var req = new XMLHttpRequest();\n                req.onerror = reject;\n                req.onreadystatechange = function onreadystatechange() {\n                    if (req.readyState === 4) {\n                        if (req.status >= 200 && req.status < 400) {\n                            resolve(req.responseText);\n                        } else {\n                            reject(new Error('POST to ' + url + ' failed with status: ' + req.status));\n                        }\n                    }\n                };\n                req.open('post', url);\n                req.setRequestHeader('Content-Type', 'application/json');\n\n                var reportPayload = {stack: stackframes};\n                if (errorMsg !== undefined) {\n                    reportPayload.message = errorMsg;\n                }\n\n                req.send(JSON.stringify(reportPayload));\n            });\n        }\n    };\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(837);\n"],"names":["Object","defineProperty","exports","value","CategoryServiceControlImpl","CategoryService_1","LoggerOptions_1","DataStructures_1","prototype","help","console","log","_help","example","_example","showSettings","id","result","StringBuilder","service","_getCategoryService","_getCategories","forEach","category","_processCategory","toString","change","settings","categories","logLevel","formatEnum","showCategoryName","showTimestamp","addResult","recursive","LogLevel","fromString","logFormat","DateFormatEnum","applyChanges","cat","categorySettings","getCategorySettings","dateFormat","showTimeStamp","_applyToCategory","reset","original","getOriginalCategorySettings","indent","append","i","name","LoggerType","loggerType","children","length","child","apply","CategoryServiceImpl","getInstance","idCategory","getRootCategories","getCategoryById","Error","push","LoggerControlImpl","LFService_1","listFactories","rtSettingsFactories","_getRuntimeSettingsLoggerFactories","appendLine","rtSettingsFactory","getName","idx_1","item","TuplePair","_i","result_1","setting","y","x","logGroupRuntimeSettings","getLogGroupRuntimeSettings","g","groupSetting","logGroupRule","regExp","source","level","idFactory","loggerFactoriesSettings","LoggerFactoryControlImpl","getLoggerFactoryControl","_getSettings","getRuntimeSettingsForLoggerFactories","LFService","getRuntimeSettings","this","_settings","logGroupRuntimeSetting","showLoggerName","_getLogGroupRunTimeSettingsFor","group","s","idGroup","settings_1","_checkIndex","index","ExtensionHelper","MessageUtils_1","register","registered","listener","evt","msg","data","processMessageFromExtension","window","removeEventListener","addEventListener","from","type","enableExtensionIntegration","valueRequest","catsApplied","applyLogLevel","categoryId","sendCategoriesRuntimeUpdateMessage","sendCategoryLogMessage","message","map","errorAsStack","formattedMessage","MessageFormatUtils","renderDefaultMessage","messageAsString","resolvedErrorMessage","isResolvedErrorMessage","sendMessage","catLevels","Array","catSettings","sendRootCategoriesToExtension","getCategoryAsJSON","parentId","parent","cats","_applyLogLevelRecursive","getAllCategories","addCats","allCats","catChild","postMessage","CategoryLogFormat","LogFormat","DateFormat","val","toLowerCase","Trace","Debug","Info","Warn","Fatal","Default","YearMonthDayTime","YearDayMonthWithFullTime","YearDayMonthTime","dateSeparator","_formatEnum","_dateSeparator","get","set","enumerable","configurable","copy","_showTimeStamp","_showLoggerName","_dateFormat","_showCategoryName","__spreadArray","to","pack","arguments","ar","l","slice","call","concat","AbstractCategoryLogger","CategoryLogMessageImpl","error","date","ready","_resolvedErrorMessage","_errorAsStack","_message","_error","_categories","_date","_level","_logFormat","_ready","stack","isReady","setReady","rootCategory","runtimeSettings","allMessages","LinkedList","trace","_log","debug","info","warn","fatal","resolved","getRootCategory","createDefaultLogMessage","_getMessageFormatter","formatterLogMessage","functionMessage","functionError","_logInternal","_this","logCategories","filter","c","_loop_1","this_1","getCategoryPath","actualError","logMessage","Date","addTail","processMessages","logMessage_1","renderError","then","catch","state_1","msgs","getSize","getHead","removeHead","doLog","Category","_children","_logLevel","indexOf","_id","nextId","_name","_parent","registerCategory","_a","loadCategoryLogger","_logger","getLogger","currentId","CategoryConfiguration","callBackLogger","Console","_formatterLogMessage","_loggerType","_callBackLogger","Custom","config","extendStatics","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","TypeError","String","__","constructor","create","CategoryConsoleLoggerImpl","_super","undefined","fullMsg","messageFormatter","logged","CategoryDelegateLoggerImpl","delegate","_delegate","CategoryExtensionLoggerImpl","ExtensionHelper_1","CategoryMessageBufferLoggerImpl","messages","getMessages","join","CategoryRuntimeSettings","_category","CategoryConsoleLoggerImpl_1","CategoryDelegateLoggerImpl_1","CategoryExtensionLoggerImpl_1","CategoryMessageBufferImpl_1","CategoryRuntimeSettings_1","CategoryConfiguration_1","_defaultConfig","_mapState","SimpleMap","_INSTANCE","createOrGetCategoryState","logger","clear","setDefaultConfiguration","currentRuntimeSettings","originalRuntimeSettings","forEachValue","state","updateSettings","setConfigurationCategory","applyChildren","exists","getCategoryKey","enableForExtension","values","key","newState","createState","put","CategoryState","createLogger","MessageBuffer","defaultConfig","_lazyState","LazyState","getOriginalRuntimeSettings","getCurrentRuntimeSettings","_createLogger","isLoaded","loadLoggerOnDemand","_delegateLogger","_originalRuntimeSettings","_currentRuntimeSettings","_wrappedLogger","initNewSettings","defSettings","CategoryServiceFactory","root","AbstractLogger","LogMessageInternalImpl","loggerName","_loggerName","_logGroupRule","_allMessages","_open","_logGroupRuntimeSettings","isTraceEnabled","isDebugEnabled","isInfoEnabled","isWarnEnabled","isErrorEnabled","isFatalEnabled","getLogLevel","isOpen","close","renderDefaultLog4jMessage","createMessage","errorResult","message_1","ConsoleLoggerImpl","AbstractLogger_1","LoggerFactoryImpl_1","LogGroupRule_1","LoggerFactoryOptions_1","LFServiceImpl","_nameCounter","_mapFactories","createLoggerFactory","options","createNamedLoggerFactory","factory","LoggerFactoryImpl","createDefaultOptions","closeLoggers","getLogGroupSettings","nameLoggerFactory","idLogGroupRule","getLogGroupRuntimeSettingsByIndex","getLoggerFactoryRuntimeSettingsByName","LoggerFactoryOptions","addLogGroupRule","LogGroupRule","RegExp","INSTANCE_SERVICE","DEFAULT_LOGGER_FACTORY_NAME","getDefault","DEFAULT_LOGGER_FACTORY","_regExp","LogGroupRuntimeSettings","ConsoleLoggerImpl_1","MessageBufferLoggerImpl_1","LogGroupRuntimeSettings_1","_loggers","_logGroupRuntimeSettingsIndexed","_loggerToLogGroupSettings","configure","_options","logGroupRules","named","enabled","loadLogger","isEnabled","idx","getLogGroupRuntimeSettingsByLoggerName","nameLogger","test","MessageBufferLoggerImpl","_logGroupRules","_enabled","rule","setEnabled","__createBinding","o","m","k","k2","__exportStar","getCategoryControl","getLogControl","LogGroupControl_1","CategoryServiceControl_1","AbstractCategoryLogger_1","Category_1","CategoryServiceFactory_1","LinkedNode","_previous","_next","_value","head","size","addHead","createHeadIfNeeded","nextNode","next","newHeadNode","previous","oldTailNode","getTailNode","newTailNode","oldHead","getTail","node","removeTail","previousNode","f","recurse","fn","currentNode","array","remove","keys","isEmpty","cbFunction","count","_x","_y","line","separator","JSONHelper","JSONArray","JSONObject","JSONTypeImpl","getValue","JSONBooleanType","JSONNumberType","JSONStringType","JSON","stringify","JSONObjectType","JSONArrayType","JSONNullType","JSONTypeConverter","toJSONType","addBoolean","checkName","checkValue","addNumber","addString","addNull","addArray","addObject","object","pretty","comma","buffer","objects","add","categoryToJSON","arr","_categoryToJSON","ST","renderDate","lpad","chars","padWith","howMany","res","fullYear","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","millis","getMilliseconds","ds","addStack","toUpperCase","actualStringMsg","dataString","messageOrLogData","logData","format","Promise","resolve","fromError","offline","frames","stackStr","frame","e","StackFrame","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","_map","thisArg","output","_filter","parse","stacktrace","parseOpera","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","parts","exec","replace","split","tokens","locationParts","pop","functionName","fileName","target","_indexOf","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","len","argsRaw","functionCall","shift","args","util","has","ArraySet","_array","_set","fromArray","aArray","aAllowDuplicates","getOwnPropertyNames","aStr","sStr","toSetString","isDuplicate","at","aIdx","toArray","base64","encode","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","decode","aIndex","aOutParam","continuation","shifted","strLen","charCodeAt","charAt","rest","intToCharMap","number","charCode","recursiveSearch","aLow","aHigh","aNeedle","aHaystack","aCompare","aBias","mid","Math","floor","cmp","LEAST_UPPER_BOUND","GREATEST_LOWER_BOUND","search","MappingList","_sorted","_last","generatedLine","generatedColumn","unsortedForEach","aCallback","aThisArg","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","sort","swap","ary","temp","doQuickSort","comparator","r","low","high","round","random","pivot","j","q","binarySearch","base64VLQ","quickSort","SourceMapConsumer","aSourceMap","sourceMap","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","version","getArg","sources","names","sourceRoot","sourcesContent","mappings","file","_version","normalize","isAbsolute","relative","_names","_sources","_mappings","Mapping","originalLine","originalColumn","lastOffset","column","_sections","url","offset","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","__generatedMappings","_parseMappings","__originalMappings","_charIsMappingSeparator","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aContext","aOrder","context","_generatedMappings","_originalMappings","mapping","allGeneratedPositionsFor","aArgs","needle","_findMapping","compareByOriginalPositions","lastColumn","smc","_sourceRoot","_generateSourcesContent","_file","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","str","segment","end","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","originalMappings","compareByGeneratedPositionsDeflated","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","originalPositionFor","hasContentsOfAllSources","some","sc","sourceContentFor","aSource","nullOnMissing","urlParse","fileUriAbsPath","scheme","path","generatedPositionFor","sectionIndex","section","bias","every","content","generatedPosition","sectionMappings","adjustedMapping","SourceMapGenerator","_skipValidation","_sourcesContents","aSourceMapConsumer","generator","newMapping","generated","addMapping","sourceFile","setSourceContent","_validateMapping","aSourceFile","aSourceContent","applySourceMap","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","aName","_serializeMappings","nameIdx","sourceIdx","previousGeneratedLine","aSources","toJSON","REGEX_NEWLINE","isSourceNode","SourceNode","aLine","aColumn","aChunks","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","remainingLines","shiftNextLine","lastGeneratedLine","lastMapping","code","nextLine","substr","addMappingWithCode","aChunk","isArray","chunk","prepend","unshift","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","fromSetString","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","aDefaultValue","urlRegexp","dataUrlRegexp","aUrl","auth","host","port","urlGenerate","aParsedUrl","aPath","part","up","splice","aRoot","aPathUrl","aRootUrl","joined","lastIndexOf","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","onlyCompareOriginal","onlyCompareGenerated","_capitalize","substring","_getter","booleanProps","numericProps","stringProps","props","obj","getArgs","setArgs","v","getEvalOrigin","evalOrigin","setEvalOrigin","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","getFunctionName","getIsEval","argsStartIndex","argsEndIndex","locationString","Boolean","n","isNaN","parseFloat","isFinite","Number","backtrace","opts","maxStackSize","curr","callee","$1","caller","_isNumber","setFunctionName","setFileName","setLineNumber","setColumnNumber","setSource","getSource","SourceMap","_xdr","reject","req","XMLHttpRequest","open","onerror","onreadystatechange","readyState","status","responseText","send","_atob","b64str","atob","_ensureStackFrameIsLegit","stackframe","StackTraceGPS","sourceCache","ajax","_get","location","isDataUrl","sourceMapStart","encodedSource","xhrPromise","method","bind","pinpoint","getMappedLocation","mappedStackFrame","resolveMappedStackFrame","findFunctionName","guessedFunctionName","reFunctionDeclaration","reFunctionExpression","reFunctionEvaluation","maxLines","min","commentPos","_findFunctionName","_ensureSupportedEnvironment","sourceMappingURL","_findSourceMappingURL","base","string","_parseJson","rawSourceMap","mapConsumer","loc","mappedSource","_extractLocationInfoFromSourceMap","ErrorStackParser","StackGenerator","_generateError","err","_merge","first","second","prop","_isShapedLikeParsableError","_filtered","stackframes","generateArtificially","getSync","gps","all","sf","resolveOriginal","stackFrames","instrument","callback","errback","__stacktraceOriginalFn","instrumented","deinstrument","report","errorMsg","setRequestHeader","reportPayload","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__"],"sourceRoot":""}